{"version":3,"file":"drawflow.min.js","mappings":"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","sources":["webpack://Drawflow/webpack/universalModuleDefinition","webpack://Drawflow/webpack/bootstrap","webpack://Drawflow/webpack/runtime/define property getters","webpack://Drawflow/webpack/runtime/hasOwnProperty shorthand","webpack://Drawflow/./src/drawflow.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Drawflow\"] = factory();\n\telse\n\t\troot[\"Drawflow\"] = factory();\n})((typeof self !== 'undefined' ? self : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import \"./drawflow.css\";\nfunction getNodeID(str) {\n    return str.slice(5);\n}\nfunction getConnectionData(classList) {\n    return {\n        output_id: classList[2].slice(14),\n        input_id: classList[1].slice(13),\n        output_class: classList[3],\n        input_class: classList[4],\n    };\n}\nfunction insertObjectkeys(content, obj, keys) {\n    if (keys === void 0) { keys = []; }\n    if (obj === null)\n        return;\n    for (var key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            var value = obj[key];\n            if (typeof value === \"object\" && value !== null) {\n                insertObjectkeys(value, [key]);\n            }\n            else {\n                var completeKey = keys.concat(key).join(\"-\");\n                var elems = content.querySelectorAll(\"[df-\" + completeKey + \"]\");\n                // @ts-ignore\n                for (var _i = 0, elems_1 = elems; _i < elems_1.length; _i++) {\n                    var elem = elems_1[_i];\n                    elem.value = value;\n                    if (elem.isContentEditable) {\n                        elem.innerText = value;\n                    }\n                }\n            }\n        }\n    }\n}\nfunction callRender(editor, render, type, id, content) {\n    var events = {};\n    var event = {\n        on: function (event, callback) {\n            // Check if the callback is not a function\n            if (typeof callback !== \"function\") {\n                console.error(\"The listener callback must be a function, the given type is \".concat(typeof callback));\n                return false;\n            }\n            // Check if the event is not a string\n            if (typeof event !== \"string\") {\n                console.error(\"The event name must be a string, the given type is \".concat(typeof event));\n                return false;\n            }\n            // Check if this event not exists\n            if (events[event] === undefined) {\n                events[event] = {\n                    listeners: [],\n                };\n            }\n            events[event].listeners.push(callback);\n        },\n        removeListener: function (event, callback) {\n            // Check if this event not exists\n            if (!events[event])\n                return false;\n            var listeners = events[event].listeners;\n            var listenerIndex = listeners.indexOf(callback);\n            var hasListener = listenerIndex > -1;\n            if (hasListener)\n                listeners.splice(listenerIndex, 1);\n        },\n        dispatch: function (event, details) {\n            console.log(event);\n            // Check if this event not exists\n            if (events[event] === undefined) {\n                // console.error(`This event: ${event} does not exist`);\n                return false;\n            }\n            events[event].listeners.forEach(function (listener) {\n                listener(details);\n            });\n        },\n    };\n    var selected = false;\n    var handle = {\n        nodeMoved: function (id1) {\n            if (id1 === id) {\n                event.dispatch(\"moved\");\n            }\n        },\n        nodeSelected: function (id1) {\n            if (id1 === id) {\n                event.dispatch(\"selected\");\n                selected = true;\n            }\n        },\n        nodeUnselected: function () {\n            if (selected) {\n                event.dispatch(\"unselected\");\n            }\n        },\n        nodeUpdated: function (_a) {\n            var id1 = _a.id, data = _a.data;\n            if (id1 === id) {\n                event.dispatch(\"updated\", data);\n            }\n        },\n        nodeUpdateId: function (_a) {\n            var oldId = _a.oldId, newId = _a.newId;\n            if (oldId === id) {\n                id = newId;\n                event.dispatch(\"updatedId\", newId);\n            }\n        },\n        nodeRemoved: function (id1) {\n            if (id1 === id) {\n                for (var eventName in handle) {\n                    // @ts-ignore\n                    var callback = handle[eventName];\n                    // @ts-ignore\n                    editor.removeListener(eventName, callback);\n                }\n                event.dispatch(\"removed\");\n            }\n        },\n        connectionStart: function (connection) {\n            if (connection.output_id === id) {\n                event.dispatch(\"connectionStart\", connection);\n            }\n        },\n        connectionCreated: function (connection) {\n            if (connection.output_id === id || connection.input_id === id) {\n                event.dispatch(\"connectionCreated\", connection);\n            }\n        },\n        connectionRemoved: function (connection) {\n            if (connection.output_id === id || connection.input_id === id) {\n                event.dispatch(\"connectionRemoved\", connection);\n            }\n        },\n    };\n    for (var eventName in handle) {\n        // @ts-ignore\n        var callback = handle[eventName];\n        // @ts-ignore\n        editor.on(eventName, callback);\n    }\n    render({\n        register: editor.noderegister[type],\n        type: type,\n        content: content,\n        editor: editor,\n        event: event,\n    });\n}\nvar Drawflow = /** @class */ (function () {\n    function Drawflow(container, options) {\n        if (options === void 0) { options = {}; }\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n        this.container = container;\n        this.events = {};\n        this.precanvas = null;\n        this.nodeId = 1;\n        this.ele_selected = null;\n        this.node_selected = null;\n        this.drag = false;\n        this.drag_point = false;\n        this.editor_selected = false;\n        this.connection = false;\n        this.connection_ele = null;\n        this.connection_selected = null;\n        this.canvas_x = 0;\n        this.canvas_y = 0;\n        this.pos_x = 0;\n        this.pos_x_start = 0;\n        this.pos_y = 0;\n        this.pos_y_start = 0;\n        this.mouse_x = 0;\n        this.mouse_y = 0;\n        this.first_click = null;\n        this.noderegister = {};\n        this.drawflow = { drawflow: { Home: { data: {} } } };\n        // Configurable options\n        this.module = \"Home\";\n        this.editor_mode = \"edit\";\n        this.zoom = 1;\n        this.zoom_max = 1.6;\n        this.zoom_min = 0.5;\n        this.zoom_value = 0.1;\n        this.zoom_last_value = 1;\n        this.curvature = 0.5;\n        this.reroute = false;\n        this.reroute_fix_curvature = false;\n        this.reroute_curvature_start_end = 0.5;\n        this.reroute_curvature = 0.5;\n        this.reroute_width = 6;\n        this.force_first_input = false;\n        this.draggable_inputs = true;\n        this.useuuid = false;\n        // Mobile\n        this.evCache = [];\n        this.prevDiff = -1;\n        this.module = (_a = options.module) !== null && _a !== void 0 ? _a : this.module;\n        this.editor_mode = (_b = options.editor_mode) !== null && _b !== void 0 ? _b : this.editor_mode;\n        this.zoom = (_c = options.zoom) !== null && _c !== void 0 ? _c : this.zoom;\n        this.zoom_max = (_d = options.zoom_max) !== null && _d !== void 0 ? _d : this.zoom_max;\n        this.zoom_min = (_e = options.zoom_min) !== null && _e !== void 0 ? _e : this.zoom_min;\n        this.zoom_value = (_f = options.zoom_value) !== null && _f !== void 0 ? _f : this.zoom_value;\n        this.zoom_last_value = (_g = options.zoom_last_value) !== null && _g !== void 0 ? _g : this.zoom_last_value;\n        this.curvature = (_h = options.curvature) !== null && _h !== void 0 ? _h : this.curvature;\n        this.reroute = (_j = options.reroute) !== null && _j !== void 0 ? _j : this.reroute;\n        this.reroute_fix_curvature =\n            (_k = options.reroute_fix_curvature) !== null && _k !== void 0 ? _k : this.reroute_fix_curvature;\n        this.reroute_curvature_start_end =\n            (_l = options.reroute_curvature_start_end) !== null && _l !== void 0 ? _l : this.reroute_curvature_start_end;\n        this.reroute_curvature =\n            (_m = options.reroute_curvature) !== null && _m !== void 0 ? _m : this.reroute_curvature;\n        this.reroute_width = (_o = options.reroute_width) !== null && _o !== void 0 ? _o : this.reroute_width;\n        this.force_first_input =\n            (_p = options.force_first_input) !== null && _p !== void 0 ? _p : this.force_first_input;\n        this.draggable_inputs = (_q = options.draggable_inputs) !== null && _q !== void 0 ? _q : this.draggable_inputs;\n        this.useuuid = (_r = options.useuuid) !== null && _r !== void 0 ? _r : this.useuuid;\n        this.render = (_s = options.render) !== null && _s !== void 0 ? _s : this.render;\n    }\n    Object.defineProperty(Drawflow.prototype, \"zoomLevel\", {\n        get: function () {\n            return Math.log(this.zoom);\n        },\n        set: function (value) {\n            this.zoom = Math.exp(value);\n            this.refreshZoom();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Drawflow.prototype.start = function () {\n        // console.info(\"Start Drawflow!!\");\n        this.container.classList.add(\"parent-drawflow\");\n        this.container.tabIndex = 0;\n        this.precanvas = document.createElement(\"div\");\n        this.precanvas.classList.add(\"drawflow\");\n        this.container.appendChild(this.precanvas);\n        /* Mouse and Touch Actions */\n        this.container.addEventListener(\"mouseup\", this._dragEnd.bind(this));\n        this.container.addEventListener(\"mousemove\", this._position.bind(this));\n        this.container.addEventListener(\"mousedown\", this._click.bind(this));\n        this.container.addEventListener(\"touchend\", this._dragEnd.bind(this));\n        this.container.addEventListener(\"touchmove\", this._position.bind(this));\n        this.container.addEventListener(\"touchstart\", this._click.bind(this));\n        /* Context Menu */\n        this.container.addEventListener(\"contextmenu\", this._contextmenu.bind(this));\n        /* Delete */\n        this.container.addEventListener(\"keydown\", this._key.bind(this));\n        /* Zoom Mouse */\n        this.container.addEventListener(\"wheel\", this._handleZoom.bind(this));\n        /* Update data Nodes */\n        this.container.addEventListener(\"input\", this.updateNodeValue.bind(this));\n        this.container.addEventListener(\"dblclick\", this._dblclick.bind(this));\n        /* Mobile zoom */\n        this.container.onpointerdown = this._handlePointerdown.bind(this);\n        this.container.onpointermove = this._handlePointermove.bind(this);\n        this.container.onpointerup = this._handlePointerup.bind(this);\n        this.container.onpointercancel = this._handlePointerup.bind(this);\n        this.container.onpointerout = this._handlePointerup.bind(this);\n        this.container.onpointerleave = this._handlePointerup.bind(this);\n        this.load();\n    };\n    /* Mobile zoom */\n    Drawflow.prototype._handlePointerdown = function (ev) {\n        this.evCache.push(ev);\n    };\n    Drawflow.prototype._handlePointermove = function (ev) {\n        for (var i = 0; i < this.evCache.length; i++) {\n            if (ev.pointerId == this.evCache[i].pointerId) {\n                this.evCache[i] = ev;\n                break;\n            }\n        }\n        if (this.evCache.length == 2) {\n            // Calculate the distance between the two pointers\n            var curDiff = Math.abs(this.evCache[0].clientX - this.evCache[1].clientX);\n            if (this.prevDiff > 100) {\n                if (curDiff > this.prevDiff) {\n                    // The distance between the two pointers has increased\n                    this.zoomIn();\n                }\n                if (curDiff < this.prevDiff) {\n                    // The distance between the two pointers has decreased\n                    this.zoomOut();\n                }\n            }\n            this.prevDiff = curDiff;\n        }\n    };\n    Drawflow.prototype._handlePointerup = function (ev) {\n        this._removeEvent(ev);\n        if (this.evCache.length < 2) {\n            this.prevDiff = -1;\n        }\n    };\n    Drawflow.prototype._removeEvent = function (ev) {\n        // Remove this event from the target's cache\n        for (var i = this.evCache.length - 1; i >= 0; i--) {\n            if (this.evCache[i].pointerId == ev.pointerId) {\n                this.evCache.splice(i, 1);\n                break;\n            }\n        }\n    };\n    /* End Mobile Zoom */\n    Drawflow.prototype.load = function () {\n        for (var key in this.drawflow.drawflow[this.module].data) {\n            this._addNodeImport(this.drawflow.drawflow[this.module].data[key], this.precanvas);\n        }\n        if (this.reroute) {\n            for (var key in this.drawflow.drawflow[this.module].data) {\n                this._addRerouteImport(this.drawflow.drawflow[this.module].data[key]);\n            }\n        }\n        for (var key in this.drawflow.drawflow[this.module].data) {\n            this.updateNodeConnections(\"node-\" + key);\n        }\n        var editor = this.drawflow.drawflow;\n        var number = 1;\n        for (var moduleName in editor) {\n            if (Object.hasOwnProperty.call(editor, moduleName)) {\n                var moduleData = editor[moduleName].data;\n                for (var id in moduleData) {\n                    if (Object.hasOwnProperty.call(moduleData, id)) {\n                        number = Math.max(number, parseInt(id) + 1);\n                    }\n                }\n            }\n        }\n        this.nodeId = number;\n    };\n    Drawflow.prototype.unselectConnectionReroutes = function () {\n        this.dispatch(\"connectionUnselected\", true);\n        if (this.reroute_fix_curvature) {\n            this.connection_selected.parentElement\n                .querySelectorAll(\".main-path\")\n                .forEach(function (item) {\n                item.classList.remove(\"selected\");\n            });\n        }\n    };\n    Drawflow.prototype._click = function (e) {\n        var editor = this;\n        function clearSelection() {\n            if (editor.node_selected != null) {\n                editor.node_selected.classList.remove(\"selected\");\n                if (editor.node_selected != editor.ele_selected) {\n                    editor.dispatch(\"nodeUnselected\", true);\n                }\n            }\n            if (editor.connection_selected != null) {\n                editor.connection_selected.classList.remove(\"selected\");\n                editor.unselectConnectionReroutes();\n                editor.connection_selected = null;\n            }\n        }\n        this.dispatch(\"click\", e);\n        var target = e.target;\n        if (e instanceof MouseEvent && e.button === 1) {\n            this.editor_selected = true;\n        }\n        else if (e instanceof MouseEvent && e.button === 0) {\n            // get selected element\n            if (this.editor_mode === \"fixed\") {\n                if (target.classList[0] === \"parent-drawflow\" ||\n                    target.classList[0] === \"drawflow\") {\n                    this.ele_selected = target.closest(\".parent-drawflow\");\n                }\n                else {\n                    return false;\n                }\n            }\n            else if (this.editor_mode === \"view\") {\n                if (target.closest(\".drawflow\") != null ||\n                    target.matches(\".parent-drawflow\")) {\n                    this.ele_selected = target.closest(\".parent-drawflow\");\n                    e.preventDefault();\n                }\n            }\n            else {\n                this.first_click = target;\n                this.ele_selected = target;\n                if (e.button === 0) {\n                    this._contextmenuDel();\n                }\n                if (target.closest(\".drawflow_content_node\") != null) {\n                    this.ele_selected = target.closest(\".drawflow_content_node\").parentElement;\n                }\n            }\n            switch (this.ele_selected.classList[0]) {\n                case \"drawflow-node\":\n                    clearSelection();\n                    if (this.node_selected != this.ele_selected) {\n                        this.dispatch(\"nodeSelected\", getNodeID(this.ele_selected.id));\n                    }\n                    this.node_selected = this.ele_selected;\n                    this.node_selected.classList.add(\"selected\");\n                    // cancel drag if an input element was clicked on\n                    if (!this.draggable_inputs) {\n                        if (target.tagName !== \"INPUT\" &&\n                            target.tagName !== \"TEXTAREA\" &&\n                            target.tagName !== \"SELECT\" &&\n                            target.hasAttribute(\"contenteditable\") !== true) {\n                            this.drag = true;\n                        }\n                    }\n                    else {\n                        if (target.tagName !== \"SELECT\") {\n                            this.drag = true;\n                        }\n                    }\n                    break;\n                case \"output\":\n                    this.connection = true;\n                    clearSelection();\n                    this._createConnection(target);\n                    break;\n                case \"drawflow\":\n                    clearSelection();\n                    this.editor_selected = e.type === \"touchstart\";\n                    break;\n                case \"main-path\":\n                    clearSelection();\n                    this.connection_selected = this.ele_selected;\n                    this.connection_selected.classList.add(\"selected\");\n                    this.dispatch(\"connectionSelected\", getConnectionData(this.connection_selected.parentElement.classList));\n                    if (this.reroute_fix_curvature) {\n                        this.connection_selected.parentElement\n                            .querySelectorAll(\".main-path\")\n                            .forEach(function (item) {\n                            item.classList.add(\"selected\");\n                        });\n                    }\n                    break;\n                case \"point\":\n                    this.drag_point = true;\n                    this.ele_selected.classList.add(\"selected\");\n                    break;\n                case \"drawflow-delete\":\n                    if (this.node_selected) {\n                        this.removeNodeId(this.node_selected.id);\n                    }\n                    if (this.connection_selected) {\n                        this.removeSelectedConnection();\n                    }\n                    clearSelection();\n                    break;\n                default:\n                    break;\n            }\n            if (this.ele_selected.classList.contains(\"parent-drawflow\")) {\n                clearSelection();\n                this.editor_selected = e.type === \"touchstart\";\n            }\n        }\n        if (e instanceof TouchEvent) {\n            this.pos_x = e.touches[0].clientX;\n            this.pos_x_start = e.touches[0].clientX;\n            this.pos_y = e.touches[0].clientY;\n            this.pos_y_start = e.touches[0].clientY;\n        }\n        else {\n            this.pos_x = e.clientX;\n            this.pos_x_start = e.clientX;\n            this.pos_y = e.clientY;\n            this.pos_y_start = e.clientY;\n        }\n        this.dispatch(\"clickEnd\", e);\n    };\n    Drawflow.prototype._position = function (e) {\n        if (e instanceof TouchEvent) {\n            var e_pos_x = e.touches[0].clientX;\n            var e_pos_y = e.touches[0].clientY;\n        }\n        else {\n            var e_pos_x = e.clientX;\n            var e_pos_y = e.clientY;\n        }\n        if (this.connection) {\n            this._drawConnectionTo(e_pos_x, e_pos_y);\n        }\n        if (this.editor_selected) {\n            var x = this.canvas_x - this.pos_x + e_pos_x;\n            var y = this.canvas_y - this.pos_y + e_pos_y;\n            this.dispatch(\"translate\", { x: x, y: y });\n            this.precanvas.style.transform =\n                \"translate(\" + x + \"px, \" + y + \"px) scale(\" + this.zoom + \")\";\n        }\n        if (this.drag) {\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            var selectedID = getNodeID(this.ele_selected.id);\n            var x = (this.pos_x - e_pos_x) / this.zoom;\n            var y = (this.pos_y - e_pos_y) / this.zoom;\n            this.pos_x = e_pos_x;\n            this.pos_y = e_pos_y;\n            this.ele_selected.style.top = this.ele_selected.offsetTop - y + \"px\";\n            this.ele_selected.style.left = this.ele_selected.offsetLeft - x + \"px\";\n            moduleData[selectedID].pos_x = this.ele_selected.offsetLeft - x;\n            moduleData[selectedID].pos_y = this.ele_selected.offsetTop - y;\n            this.updateNodeConnections(this.ele_selected.id);\n        }\n        if (this.drag_point) {\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            this.pos_x = e_pos_x;\n            this.pos_y = e_pos_y;\n            var pos_x = (this.pos_x - this.precanvas.getBoundingClientRect().x) / this.zoom;\n            var pos_y = (this.pos_y - this.precanvas.getBoundingClientRect().y) / this.zoom;\n            this.ele_selected.setAttributeNS(null, \"cx\", pos_x.toString());\n            this.ele_selected.setAttributeNS(null, \"cy\", pos_y.toString());\n            var _a = getConnectionData(this.ele_selected.parentElement.classList), output_id = _a.output_id, input_id_1 = _a.input_id, output_class = _a.output_class, input_class_1 = _a.input_class;\n            var numberPointPosition = Array.from(this.ele_selected.parentElement.children).indexOf(this.ele_selected) - 1;\n            if (this.reroute_fix_curvature) {\n                var numberMainPath = this.ele_selected.parentElement.querySelectorAll(\".main-path\")\n                    .length - 1;\n                numberPointPosition -= numberMainPath;\n                if (numberPointPosition < 0) {\n                    numberPointPosition = 0;\n                }\n            }\n            var searchConnection = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) {\n                return item.node === input_id_1 && item.output === input_class_1;\n            });\n            moduleData[output_id].outputs[output_class].connections[searchConnection].points[numberPointPosition] = {\n                pos_x: pos_x,\n                pos_y: pos_y,\n            };\n            this.updateNodeConnections(\"node-\".concat(output_id));\n        }\n        if (e.type === \"touchmove\") {\n            this.mouse_x = e_pos_x;\n            this.mouse_y = e_pos_y;\n        }\n        this.dispatch(\"mouseMove\", { x: e_pos_x, y: e_pos_y });\n    };\n    Drawflow.prototype._dragEnd = function (e) {\n        var e_pos_x;\n        var e_pos_y;\n        var ele_last;\n        if (e instanceof TouchEvent) {\n            e_pos_x = this.mouse_x;\n            e_pos_y = this.mouse_y;\n            ele_last = document.elementFromPoint(e_pos_x, e_pos_y);\n        }\n        else {\n            e_pos_x = e.clientX;\n            e_pos_y = e.clientY;\n            ele_last = e.target;\n        }\n        if (this.drag) {\n            if (this.pos_x_start != e_pos_x || this.pos_y_start != e_pos_y) {\n                this.dispatch(\"nodeMoved\", getNodeID(this.ele_selected.id));\n            }\n        }\n        if (this.drag_point) {\n            this.ele_selected.classList.remove(\"selected\");\n            if (this.pos_x_start != e_pos_x || this.pos_y_start != e_pos_y) {\n                this.dispatch(\"rerouteMoved\", getConnectionData(this.ele_selected.parentElement.classList).output_id);\n            }\n        }\n        if (this.editor_selected) {\n            this.canvas_x = this.canvas_x + -(this.pos_x - e_pos_x);\n            this.canvas_y = this.canvas_y + -(this.pos_y - e_pos_y);\n            this.editor_selected = false;\n        }\n        if (this.connection === true) {\n            if (ele_last.classList[0] === \"input\" ||\n                (this.force_first_input &&\n                    (ele_last.closest(\".drawflow_content_node\") != null ||\n                        ele_last.classList[0] === \"drawflow-node\"))) {\n                if (this.force_first_input &&\n                    (ele_last.closest(\".drawflow_content_node\") != null ||\n                        ele_last.classList[0] === \"drawflow-node\")) {\n                    if (ele_last.closest(\".drawflow_content_node\") != null) {\n                        var input_id = ele_last.closest(\".drawflow_content_node\")\n                            .parentElement.id;\n                    }\n                    else {\n                        var input_id = ele_last.id;\n                    }\n                    if (Object.keys(this.getNodeFromId(getNodeID(input_id)).inputs)\n                        .length === 0) {\n                        var input_class = \"\";\n                    }\n                    else {\n                        var input_class = \"input_1\";\n                    }\n                }\n                else {\n                    // Fix connection;\n                    var input_id = ele_last.parentElement.parentElement.id;\n                    var input_class = ele_last.classList[1];\n                }\n                var output_id = this.ele_selected.parentElement.parentElement.id;\n                var output_class = this.ele_selected.classList[1];\n                if (output_id !== input_id && input_class) {\n                    if (this.container.querySelectorAll(\".connection.node_in_\" +\n                        input_id +\n                        \".node_out_\" +\n                        output_id +\n                        \".\" +\n                        output_class +\n                        \".\" +\n                        input_class).length === 0) {\n                        // Conection no exist save connection\n                        this.connection_ele.classList.add(\"node_in_\" + input_id);\n                        this.connection_ele.classList.add(\"node_out_\" + output_id);\n                        this.connection_ele.classList.add(output_class);\n                        this.connection_ele.classList.add(input_class);\n                        var id_input = getNodeID(input_id);\n                        var id_output = getNodeID(output_id);\n                        this.drawflow.drawflow[this.module].data[id_output].outputs[output_class].connections.push({ node: id_input, output: input_class });\n                        this.drawflow.drawflow[this.module].data[id_input].inputs[input_class].connections.push({ node: id_output, input: output_class });\n                        this.updateNodeConnections(\"node-\" + id_output);\n                        this.updateNodeConnections(\"node-\" + id_input);\n                        this.dispatch(\"connectionCreated\", {\n                            output_id: id_output,\n                            input_id: id_input,\n                            output_class: output_class,\n                            input_class: input_class,\n                        });\n                    }\n                    else {\n                        this.dispatch(\"connectionCancel\", true);\n                        this.connection_ele.remove();\n                    }\n                    this.connection_ele = null;\n                }\n                else {\n                    // Connection exists Remove Connection;\n                    this.dispatch(\"connectionCancel\", true);\n                    this.connection_ele.remove();\n                    this.connection_ele = null;\n                }\n            }\n            else {\n                // Remove Connection;\n                this.dispatch(\"connectionCancel\", true);\n                this.connection_ele.remove();\n                this.connection_ele = null;\n            }\n        }\n        this.drag = false;\n        this.drag_point = false;\n        this.connection = false;\n        this.ele_selected = null;\n        this.editor_selected = false;\n        this.dispatch(\"mouseUp\", e);\n    };\n    Drawflow.prototype._contextmenu = function (e) {\n        this.dispatch(\"contextmenu\", e);\n        e.preventDefault();\n        if (this.editor_mode === \"fixed\" || this.editor_mode === \"view\") {\n            return false;\n        }\n        if (this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\n            this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\n        }\n        if (this.node_selected || this.connection_selected) {\n            var deletebox = document.createElement(\"div\");\n            deletebox.classList.add(\"drawflow-delete\");\n            deletebox.innerHTML = \"x\";\n            if (this.node_selected) {\n                this.node_selected.appendChild(deletebox);\n            }\n            if (this.connection_selected) {\n                deletebox.style.top =\n                    e.clientY * this.zoom -\n                        this.precanvas.getBoundingClientRect().y * this.zoom +\n                        \"px\";\n                deletebox.style.left =\n                    e.clientX * this.zoom -\n                        this.precanvas.getBoundingClientRect().x * this.zoom +\n                        \"px\";\n                this.precanvas.appendChild(deletebox);\n            }\n        }\n    };\n    Drawflow.prototype._contextmenuDel = function () {\n        if (this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\n            this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\n        }\n    };\n    Drawflow.prototype._key = function (e) {\n        this.dispatch(\"keydown\", e);\n        if (this.editor_mode === \"fixed\" || this.editor_mode === \"view\") {\n            return false;\n        }\n        if (e.key === \"Delete\" || (e.key === \"Backspace\" && e.metaKey)) {\n            if (this.node_selected != null) {\n                if (this.first_click.tagName !== \"INPUT\" &&\n                    this.first_click.tagName !== \"TEXTAREA\" &&\n                    this.first_click.hasAttribute(\"contenteditable\") !== true) {\n                    this.removeNodeId(this.node_selected.id);\n                }\n            }\n            if (this.connection_selected != null) {\n                this.removeSelectedConnection();\n            }\n        }\n    };\n    Drawflow.prototype._handleZoom = function (event) {\n        event.preventDefault();\n        if (event.ctrlKey) {\n            this.zoomLevel -= event.deltaY / 100;\n        }\n        else {\n            this.canvas_x -= event.deltaX;\n            this.canvas_y -= event.deltaY;\n            this.dispatch(\"translate\", { x: this.canvas_x, y: this.canvas_y });\n            this.precanvas.style.transform =\n                \"translate(\" +\n                    this.canvas_x +\n                    \"px, \" +\n                    this.canvas_y +\n                    \"px) scale(\" +\n                    this.zoom +\n                    \")\";\n        }\n    };\n    Drawflow.prototype.refreshZoom = function () {\n        this.zoom = Math.min(Math.max(this.zoom_min, this.zoom), this.zoom_max);\n        this.dispatch(\"zoom\", this.zoom);\n        this.canvas_x = (this.canvas_x / this.zoom_last_value) * this.zoom;\n        this.canvas_y = (this.canvas_y / this.zoom_last_value) * this.zoom;\n        this.zoom_last_value = this.zoom;\n        this.precanvas.style.transform =\n            \"translate(\" +\n                this.canvas_x +\n                \"px, \" +\n                this.canvas_y +\n                \"px) scale(\" +\n                this.zoom +\n                \")\";\n    };\n    Drawflow.prototype.zoomIn = function (value) {\n        if (value === void 0) { value = this.zoom_value; }\n        this.zoomLevel += value;\n    };\n    Drawflow.prototype.zoomOut = function (value) {\n        if (value === void 0) { value = this.zoom_value; }\n        this.zoomLevel -= value;\n    };\n    Drawflow.prototype.resetZoom = function () {\n        if (this.zoom != 1) {\n            this.zoom = 1;\n            this.refreshZoom();\n        }\n    };\n    Drawflow.prototype.createCurvature = function (start_pos_x, start_pos_y, end_pos_x, end_pos_y, curvature) {\n        var line_x = start_pos_x;\n        var line_y = start_pos_y;\n        var x = end_pos_x;\n        var y = end_pos_y;\n        var handleSize = Math.abs(x - line_x) * curvature;\n        var handleStartDir = true ? 1 : -1;\n        var handleEndDir = true ? 1 : -1;\n        return (\"M\" +\n            [line_x, line_y].join() +\n            \"C\" +\n            [\n                line_x + handleSize * handleStartDir,\n                line_y,\n                x - handleSize * handleEndDir,\n                y,\n                x,\n                y,\n            ].join());\n    };\n    Drawflow.prototype._createConnection = function (ele) {\n        var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        this.connection_ele = connection;\n        var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path.classList.add(\"main-path\");\n        path.setAttributeNS(null, \"d\", \"\");\n        // path.innerHTML = 'a';\n        connection.classList.add(\"connection\");\n        connection.appendChild(path);\n        this.precanvas.appendChild(connection);\n        var id_output = getNodeID(ele.parentElement.parentElement.id);\n        var output_class = ele.classList[1];\n        this.dispatch(\"connectionStart\", {\n            output_id: id_output,\n            output_class: output_class,\n        });\n    };\n    Drawflow.prototype._drawConnectionTo = function (eX, eY) {\n        var precanvas = this.precanvas;\n        var zoom = this.zoom;\n        var precanvasRect = precanvas.getBoundingClientRect();\n        var path = this.connection_ele.children[0];\n        function getCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x + rect.width / 2) / zoom,\n                (rect.y - precanvasRect.y + rect.width / 2) / zoom,\n            ];\n        }\n        var _a = getCenter(this.ele_selected), fromX = _a[0], fromY = _a[1];\n        var toX = (eX - this.precanvas.getBoundingClientRect().x) / zoom;\n        var toY = (eY - this.precanvas.getBoundingClientRect().y) / zoom;\n        var curvature = this.curvature;\n        var lineCurve = this.createCurvature(fromX, fromY, toX, toY, curvature);\n        path.setAttributeNS(null, \"d\", lineCurve);\n    };\n    Drawflow.prototype.addConnection = function (id_output, id_input, output_class, input_class) {\n        var nodeOneModule = this.getModuleFromNodeId(id_output);\n        var nodeTwoModule = this.getModuleFromNodeId(id_input);\n        if (nodeOneModule !== nodeTwoModule) {\n            return;\n        }\n        var dataNode = this.getNodeFromId(id_output);\n        var exist = false;\n        for (var _i = 0, _a = dataNode.outputs[output_class].connections; _i < _a.length; _i++) {\n            var output = _a[_i];\n            if (output.node == id_input && output.output == input_class) {\n                exist = true;\n            }\n        }\n        // Check connection exist\n        if (!exist) {\n            var moduleData = this.drawflow.drawflow[nodeOneModule].data;\n            //Create Connection\n            moduleData[id_output].outputs[output_class].connections.push({\n                node: id_input.toString(),\n                output: input_class,\n            });\n            moduleData[id_input].inputs[input_class].connections.push({\n                node: id_output.toString(),\n                input: output_class,\n            });\n            if (this.module === nodeOneModule) {\n                //Draw connection\n                var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                path.classList.add(\"main-path\");\n                path.setAttributeNS(null, \"d\", \"\");\n                // path.innerHTML = 'a';\n                connection.classList.add(\"connection\");\n                connection.classList.add(\"node_in_node-\" + id_input);\n                connection.classList.add(\"node_out_node-\" + id_output);\n                connection.classList.add(output_class);\n                connection.classList.add(input_class);\n                connection.appendChild(path);\n                this.precanvas.appendChild(connection);\n                this.updateNodeConnections(\"node-\" + id_output);\n                this.updateNodeConnections(\"node-\" + id_input);\n            }\n            this.dispatch(\"connectionCreated\", {\n                output_id: id_output,\n                input_id: id_input,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        }\n    };\n    Drawflow.prototype.updateConnection = function (connection, nodeFromElem, nodeToElem) {\n        var container = this.container;\n        var precanvas = this.precanvas;\n        var curvature = this.curvature;\n        var createCurvature = this.createCurvature;\n        var reroute_curvature = this.reroute_curvature;\n        var reroute_curvature_start_end = this.reroute_curvature_start_end;\n        var reroute_fix_curvature = this.reroute_fix_curvature;\n        var rerouteWidth = this.reroute_width;\n        var zoom = this.zoom;\n        if (!nodeFromElem) {\n            var nodeFromID = connection.classList[2].replace(\"node_out_\", \"\");\n            nodeFromElem = container.querySelector(\"#\".concat(nodeFromID));\n        }\n        if (!nodeToElem) {\n            var nodeToID = connection.classList[1].replace(\"node_in_\", \"\");\n            nodeToElem = container.querySelector(\"#\".concat(nodeToID));\n        }\n        if (!nodeFromElem || !nodeToElem) {\n            return;\n        }\n        var precanvasRect = precanvas.getBoundingClientRect();\n        function getCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x + rect.width / 2) / zoom,\n                (rect.y - precanvasRect.y + rect.width / 2) / zoom,\n            ];\n        }\n        function getRerouteCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x) / zoom + rerouteWidth,\n                (rect.y - precanvasRect.y) / zoom + rerouteWidth,\n            ];\n        }\n        var outputElem = nodeFromElem.querySelector(\".\" + connection.classList[3]);\n        var _a = getCenter(outputElem), fromX = _a[0], fromY = _a[1];\n        var inputElem = nodeToElem.querySelector(\".\" + connection.classList[4]);\n        var _b = getCenter(inputElem), toX = _b[0], toY = _b[1];\n        var points = connection.querySelectorAll(\".point\");\n        if (points.length === 0) {\n            var lineCurve = createCurvature(fromX, fromY, toX, toY, curvature);\n            connection.children[0].setAttributeNS(null, \"d\", lineCurve);\n        }\n        else {\n            var linecurve = \"\";\n            var reroute_fix = [];\n            var lastX = fromX;\n            var lastY = fromY;\n            var curvature_1 = reroute_curvature_start_end;\n            for (var i = 0; i < points.length; i++) {\n                var pointElem = points[i];\n                var _c = getRerouteCenter(pointElem), pointX = _c[0], pointY = _c[1];\n                var leftCurveSegment_1 = createCurvature(lastX, lastY, pointX, pointY, curvature_1);\n                linecurve += leftCurveSegment_1;\n                reroute_fix.push(leftCurveSegment_1);\n                lastX = pointX;\n                lastY = pointY;\n                curvature_1 = reroute_curvature;\n            }\n            curvature_1 = reroute_curvature_start_end;\n            var leftCurveSegment = createCurvature(lastX, lastY, toX, toY, curvature_1);\n            linecurve += leftCurveSegment;\n            reroute_fix.push(leftCurveSegment);\n            if (reroute_fix_curvature) {\n                reroute_fix.forEach(function (itempath, i) {\n                    connection.children[i].setAttributeNS(null, \"d\", itempath);\n                });\n            }\n            else {\n                connection.children[0].setAttributeNS(null, \"d\", linecurve);\n            }\n        }\n    };\n    Drawflow.prototype.updateNodeConnections = function (id) {\n        var connectionInTag = \"node_in_\" + id;\n        var connectionOutTag = \"node_out_\" + id;\n        var container = this.container;\n        var nodeElem = container.querySelector(\"#node-\".concat(id));\n        var connectionsOut = container.querySelectorAll(\".\".concat(connectionOutTag));\n        // @ts-ignore\n        for (var _i = 0, connectionsOut_1 = connectionsOut; _i < connectionsOut_1.length; _i++) {\n            var connection = connectionsOut_1[_i];\n            this.updateConnection(connection, nodeElem, null);\n        }\n        var connectionsIn = container.querySelectorAll(\".\".concat(connectionInTag));\n        // @ts-ignore\n        for (var _a = 0, connectionsIn_1 = connectionsIn; _a < connectionsIn_1.length; _a++) {\n            var connection = connectionsIn_1[_a];\n            this.updateConnection(connection, null, nodeElem);\n        }\n    };\n    Drawflow.prototype._dblclick = function (e) {\n        if (this.connection_selected != null && this.reroute) {\n            this.createReroutePoint(this.connection_selected);\n        }\n        if (e.target.classList[0] === \"point\") {\n            this.removeReroutePoint(e.target);\n        }\n    };\n    Drawflow.prototype.createReroutePoint = function (ele) {\n        this.connection_selected.classList.remove(\"selected\");\n        var _a = getConnectionData(this.connection_selected.parentElement.classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n        this.connection_selected = null;\n        var point = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        point.classList.add(\"point\");\n        var pos_x = (this.pos_x - this.precanvas.getBoundingClientRect().x) * this.zoom;\n        var pos_y = (this.pos_y - this.precanvas.getBoundingClientRect().y) * this.zoom;\n        point.setAttributeNS(null, \"cx\", pos_x.toString());\n        point.setAttributeNS(null, \"cy\", pos_y.toString());\n        point.setAttributeNS(null, \"r\", this.reroute_width.toString());\n        var position_add_array_point = 0;\n        if (this.reroute_fix_curvature) {\n            var numberPoints = ele.parentElement.querySelectorAll(\".main-path\").length;\n            var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n            path.classList.add(\"main-path\");\n            path.setAttributeNS(null, \"d\", \"\");\n            ele.parentElement.insertBefore(path, ele.parentElement.children[numberPoints]);\n            if (numberPoints === 1) {\n                ele.parentElement.appendChild(point);\n            }\n            else {\n                var search_point = Array.from(ele.parentElement.children).indexOf(ele);\n                position_add_array_point = search_point;\n                ele.parentElement.insertBefore(point, ele.parentElement.children[search_point + numberPoints + 1]);\n            }\n        }\n        else {\n            ele.parentElement.appendChild(point);\n        }\n        var moduleData = this.drawflow.drawflow[this.module].data;\n        var connection = moduleData[output_id].outputs[output_class].connections.find(function (item) {\n            return item.node === input_id && item.output === input_class;\n        });\n        if (connection.points === undefined) {\n            connection.points = [];\n        }\n        if (this.reroute_fix_curvature) {\n            //console.log(position_add_array_point)\n            if (position_add_array_point > 0) {\n                connection.points.splice(position_add_array_point, 0, {\n                    pos_x: pos_x,\n                    pos_y: pos_y,\n                });\n            }\n            else {\n                connection.points.push({\n                    pos_x: pos_x,\n                    pos_y: pos_y,\n                });\n            }\n            ele.parentElement\n                .querySelectorAll(\".main-path.selected\")\n                .forEach(function (item) {\n                return item.classList.remove(\"selected\");\n            });\n        }\n        else {\n            connection.points.push({\n                pos_x: pos_x,\n                pos_y: pos_y,\n            });\n        }\n        this.dispatch(\"addReroute\", output_id);\n        this.updateConnection(ele.parentElement);\n    };\n    Drawflow.prototype.removeReroutePoint = function (ele) {\n        var _a = getConnectionData(ele.parentElement.classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n        var numberPointPosition = Array.from(ele.parentElement.children).indexOf(ele) - 1;\n        var searchConnection = this.drawflow.drawflow[this.module].data[output_id].outputs[output_class].connections.findIndex(function (item) {\n            return item.node === input_id && item.output === input_class;\n        });\n        if (this.reroute_fix_curvature) {\n            var numberMainPath = ele.parentElement.querySelectorAll(\".main-path\").length;\n            ele.parentElement.children[numberMainPath - 1].remove();\n            numberPointPosition -= numberMainPath;\n            if (numberPointPosition < 0) {\n                numberPointPosition = 0;\n            }\n        }\n        this.drawflow.drawflow[this.module].data[output_id].outputs[output_class].connections[searchConnection].points.splice(numberPointPosition, 1);\n        ele.remove();\n        this.dispatch(\"removeReroute\", output_id);\n        this.updateNodeConnections(\"node-\".concat(output_id));\n    };\n    Drawflow.prototype.registerNode = function (name, html) {\n        this.noderegister[name] = html;\n    };\n    Drawflow.prototype.getNodeFromId = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        if (!moduleName)\n            return;\n        return JSON.parse(JSON.stringify(this.drawflow.drawflow[moduleName].data[id]));\n    };\n    Drawflow.prototype.getNodesFromName = function (name) {\n        var nodes = [];\n        var editor = this.drawflow.drawflow;\n        Object.keys(editor).map(function (moduleName, index) {\n            for (var node in editor[moduleName].data) {\n                if (editor[moduleName].data[node].name == name) {\n                    nodes.push(editor[moduleName].data[node].id);\n                }\n            }\n        });\n        return nodes;\n    };\n    Drawflow.prototype.addNode = function (name, num_in, num_out, ele_pos_x, ele_pos_y, classoverride, data, html, typenode) {\n        var _a;\n        if (typenode === void 0) { typenode = false; }\n        var newNodeId;\n        if (this.useuuid) {\n            newNodeId = this.getUuid();\n        }\n        else {\n            newNodeId = this.nodeId.toString();\n        }\n        var parent = document.createElement(\"div\");\n        parent.classList.add(\"parent-node\");\n        var node = document.createElement(\"div\");\n        node.setAttribute(\"id\", \"node-\" + newNodeId);\n        node.classList.add(\"drawflow-node\");\n        if (classoverride) {\n            (_a = node.classList).add.apply(_a, classoverride.split(\" \"));\n        }\n        var inputs = document.createElement(\"div\");\n        inputs.classList.add(\"inputs\");\n        var outputs = document.createElement(\"div\");\n        outputs.classList.add(\"outputs\");\n        var json_inputs = {};\n        for (var x = 0; x < num_in; x++) {\n            var input = document.createElement(\"div\");\n            input.classList.add(\"input\");\n            input.classList.add(\"input_\" + (x + 1));\n            json_inputs[\"input_\" + (x + 1)] = { connections: [] };\n            inputs.appendChild(input);\n        }\n        var json_outputs = {};\n        for (var x = 0; x < num_out; x++) {\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (x + 1));\n            json_outputs[\"output_\" + (x + 1)] = { connections: [] };\n            outputs.appendChild(output);\n        }\n        var content = document.createElement(\"div\");\n        content.classList.add(\"drawflow_content_node\");\n        if (typenode === false) {\n            content.innerHTML = html;\n        }\n        else if (typenode === true) {\n            content.appendChild(this.noderegister[html].cloneNode(true));\n        }\n        else if (typeof typenode === \"function\") {\n            callRender(this, typenode, html, newNodeId, content);\n        }\n        else {\n            callRender(this, this.render, html, newNodeId, content);\n        }\n        insertObjectkeys(content, data);\n        node.style.top = ele_pos_y + \"px\";\n        node.style.left = ele_pos_x + \"px\";\n        node.appendChild(inputs);\n        node.appendChild(content);\n        node.appendChild(outputs);\n        parent.appendChild(node);\n        this.precanvas.appendChild(parent);\n        var json = {\n            id: newNodeId,\n            name: name,\n            data: data,\n            class: classoverride,\n            html: html,\n            typenode: typenode,\n            inputs: json_inputs,\n            outputs: json_outputs,\n            pos_x: ele_pos_x,\n            pos_y: ele_pos_y,\n        };\n        this.drawflow.drawflow[this.module].data[newNodeId] = json;\n        this.dispatch(\"nodeCreated\", newNodeId);\n        if (!this.useuuid) {\n            this.nodeId++;\n        }\n        return newNodeId;\n    };\n    Drawflow.prototype._addNodeImport = function (dataNode, precanvas) {\n        var _a;\n        dataNode.id = dataNode.id.toString();\n        var parent = document.createElement(\"div\");\n        parent.classList.add(\"parent-node\");\n        var node = document.createElement(\"div\");\n        node.setAttribute(\"id\", \"node-\" + dataNode.id);\n        node.classList.add(\"drawflow-node\");\n        if (dataNode.class) {\n            (_a = node.classList).add.apply(_a, dataNode.class.split(\" \"));\n        }\n        var inputs = document.createElement(\"div\");\n        inputs.classList.add(\"inputs\");\n        var outputs = document.createElement(\"div\");\n        outputs.classList.add(\"outputs\");\n        for (var input_item in dataNode.inputs) {\n            if (Object.hasOwnProperty.call(dataNode.inputs, input_item)) {\n                var input_connections = dataNode.inputs[input_item].connections;\n                var input = document.createElement(\"div\");\n                input.classList.add(\"input\");\n                input.classList.add(input_item);\n                inputs.appendChild(input);\n                for (var output_item in input_connections) {\n                    if (Object.hasOwnProperty.call(input_connections, output_item)) {\n                        var output_connection = input_connections[output_item];\n                        output_connection.node = output_connection.node.toString();\n                        var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                        var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                        path.classList.add(\"main-path\");\n                        path.setAttributeNS(null, \"d\", \"\");\n                        // path.innerHTML = 'a';\n                        connection.classList.add(\"connection\");\n                        connection.classList.add(\"node_in_node-\" + dataNode.id);\n                        connection.classList.add(\"node_out_node-\" + output_connection.node);\n                        connection.classList.add(output_connection.input);\n                        connection.classList.add(input_item);\n                        connection.appendChild(path);\n                        precanvas.appendChild(connection);\n                    }\n                }\n            }\n        }\n        for (var x = 0; x < Object.keys(dataNode.outputs).length; x++) {\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (x + 1));\n            outputs.appendChild(output);\n        }\n        var content = document.createElement(\"div\");\n        content.classList.add(\"drawflow_content_node\");\n        if (dataNode.typenode === false) {\n            content.innerHTML = dataNode.html;\n        }\n        else if (dataNode.typenode === true) {\n            content.appendChild(this.noderegister[dataNode.html].cloneNode(true));\n        }\n        else if (typeof dataNode.typenode === \"function\") {\n            callRender(this, dataNode.typenode, dataNode.html, dataNode.id, content);\n        }\n        else {\n            callRender(this, this.render, dataNode.html, dataNode.id, content);\n        }\n        insertObjectkeys(content, dataNode.data);\n        node.style.top = dataNode.pos_y + \"px\";\n        node.style.left = dataNode.pos_x + \"px\";\n        node.appendChild(inputs);\n        node.appendChild(content);\n        node.appendChild(outputs);\n        parent.appendChild(node);\n        this.precanvas.appendChild(parent);\n    };\n    Drawflow.prototype._addRerouteImport = function (dataNode) {\n        var reroute_width = this.reroute_width;\n        var reroute_fix_curvature = this.reroute_fix_curvature;\n        var container = this.container;\n        for (var output_class in dataNode.outputs) {\n            if (Object.prototype.hasOwnProperty.call(dataNode.outputs, output_class)) {\n                var output_item = dataNode.outputs[output_class];\n                for (var input_class in output_item.connections) {\n                    if (Object.prototype.hasOwnProperty.call(output_item.connections, input_class)) {\n                        var input_item = output_item.connections[input_class];\n                        var points = input_item.points;\n                        if (Array.isArray(input_item.points)) {\n                            var input_id = input_item.node;\n                            var input_class_2 = input_item.output;\n                            var ele = container.querySelector(\".connection.node_in_node-\" +\n                                input_id +\n                                \".node_out_node-\" +\n                                dataNode.id +\n                                \".\" +\n                                output_item +\n                                \".\" +\n                                input_class_2);\n                            if (reroute_fix_curvature) {\n                                for (var z = 0; z < points.length; z++) {\n                                    var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                                    path.classList.add(\"main-path\");\n                                    path.setAttributeNS(null, \"d\", \"\");\n                                    ele.appendChild(path);\n                                }\n                            }\n                            for (var _i = 0, _a = input_item.points; _i < _a.length; _i++) {\n                                var item = _a[_i];\n                                var point = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n                                point.classList.add(\"point\");\n                                point.setAttributeNS(null, \"cx\", item.pos_x.toString());\n                                point.setAttributeNS(null, \"cy\", item.pos_y.toString());\n                                point.setAttributeNS(null, \"r\", reroute_width.toString());\n                                ele.appendChild(point);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Drawflow.prototype.changeNodeID = function (oldId, newId) {\n        var moduleName = this.getModuleFromNodeId(oldId);\n        if (!moduleName)\n            return false;\n        var moduleData = this.drawflow.drawflow[moduleName].data;\n        var node = moduleData[oldId];\n        if (this.getNodeFromId(newId) || oldId === newId)\n            return false;\n        delete moduleData[oldId];\n        moduleData[newId] = node;\n        node.id = newId;\n        var nodeEl = this.precanvas.querySelector(\"#node-\".concat(oldId));\n        nodeEl.id = \"node-\".concat(newId);\n        for (var input_class in node.inputs) {\n            var input = node.inputs[input_class];\n            for (var _i = 0, _a = input.connections; _i < _a.length; _i++) {\n                var connectionIn = _a[_i];\n                var input_node = this.getNodeFromId(connectionIn.node);\n                for (var output_class in input_node.outputs) {\n                    var output = input_node.outputs[output_class];\n                    for (var _b = 0, _c = output.connections; _b < _c.length; _b++) {\n                        var connection = _c[_b];\n                        if (connection.node === oldId &&\n                            connection.output === input_class) {\n                            connection.node = newId;\n                        }\n                    }\n                }\n            }\n        }\n        for (var output_class in node.outputs) {\n            var output = node.outputs[output_class];\n            for (var _d = 0, _e = output.connections; _d < _e.length; _d++) {\n                var connectionOut = _e[_d];\n                var output_node = this.getNodeFromId(connectionOut.node);\n                for (var input_class in output_node.inputs) {\n                    var input = output_node.inputs[input_class];\n                    for (var _f = 0, _g = input.connections; _f < _g.length; _f++) {\n                        var connection = _g[_f];\n                        if (connection.node === oldId &&\n                            connection.input === output_class) {\n                            connection.node = newId;\n                        }\n                    }\n                }\n            }\n        }\n        var connectionEls = this.precanvas.querySelectorAll(\".node_in_node-\".concat(oldId, \",.node_out_node-\").concat(newId));\n        connectionEls.forEach(function (el) {\n            el.classList.replace(\".node_in_node-\".concat(oldId), \".node_in_node-\".concat(newId));\n            el.classList.replace(\".node_out_node-\".concat(oldId), \".node_out_node-\".concat(newId));\n        });\n        this.dispatch(\"updateNodeId\", { oldId: oldId, newId: node.id });\n        return true;\n    };\n    Drawflow.prototype.updateNodeValue = function (event) {\n        var etarget = event.target;\n        var attr = etarget.attributes;\n        for (var i = 0; i < attr.length; i++) {\n            if (attr[i].nodeName.startsWith(\"df-\")) {\n                var keys = attr[i].nodeName.slice(3).split(\"-\");\n                var target = this.drawflow.drawflow[this.module].data[getNodeID(etarget.closest(\".drawflow_content_node\").parentElement.id)].data;\n                for (var index = 0; index < keys.length - 1; index += 1) {\n                    if (target[keys[index]] == null) {\n                        target[keys[index]] = {};\n                    }\n                    target = target[keys[index]];\n                }\n                target[keys[keys.length - 1]] = etarget.value;\n                if (etarget.isContentEditable) {\n                    target[keys[keys.length - 1]] = etarget.innerText;\n                }\n                this.dispatch(\"nodeDataChanged\", getNodeID(etarget.closest(\".drawflow_content_node\").parentElement.id));\n            }\n        }\n    };\n    Drawflow.prototype.updateNodeDataFromId = function (id, data) {\n        var moduleName = this.getModuleFromNodeId(id);\n        this.drawflow.drawflow[moduleName].data[id].data = data;\n        if (this.module === moduleName) {\n            var content = this.container.querySelector(\"#node-\" + id);\n            insertObjectkeys(content, data);\n        }\n    };\n    Drawflow.prototype.addNodeInput = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var infoNode = this.getNodeFromId(id);\n        var numInputs = Object.keys(infoNode.inputs).length;\n        if (this.module === moduleName) {\n            //Draw input\n            var input = document.createElement(\"div\");\n            input.classList.add(\"input\");\n            input.classList.add(\"input_\" + (numInputs + 1));\n            var parent_1 = this.container.querySelector(\"#node-\" + id + \" .inputs\");\n            parent_1.appendChild(input);\n            this.updateNodeConnections(\"node-\" + id);\n        }\n        this.drawflow.drawflow[moduleName].data[id].inputs[\"input_\" + (numInputs + 1)] = { connections: [] };\n    };\n    Drawflow.prototype.addNodeOutput = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var infoNode = this.getNodeFromId(id);\n        var numOutputs = Object.keys(infoNode.outputs).length;\n        if (this.module === moduleName) {\n            //Draw output\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (numOutputs + 1));\n            var parent_2 = this.container.querySelector(\"#node-\" + id + \" .outputs\");\n            parent_2.appendChild(output);\n            this.updateNodeConnections(\"node-\" + id);\n        }\n        this.drawflow.drawflow[moduleName].data[id].outputs[\"output_\" + (numOutputs + 1)] = { connections: [] };\n    };\n    Drawflow.prototype.removeNodeInput = function (id, input_class) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var nodeDataRef = this.drawflow.drawflow[moduleName].data[id];\n        if (this.module === moduleName) {\n            this.container\n                .querySelector(\"#node-\" + id + \" .inputs .input.\" + input_class)\n                .remove();\n        }\n        for (var _i = 0, _a = nodeDataRef.inputs[input_class].connections; _i < _a.length; _i++) {\n            var connection = _a[_i];\n            this.removeConnection(connection.node, id, connection.input, input_class);\n        }\n        // update inputs\n        var input_index = parseInt(input_class.slice(\"input_\".length)) - 1;\n        var num_in = Object.keys(nodeDataRef.inputs).length;\n        for (var i = input_index; i <= num_in; i++) {\n            var class_this = \"input_\" + (i + 1);\n            var class_next = \"input_\" + (i + 2);\n            nodeDataRef.inputs[class_this] = nodeDataRef.inputs[class_next];\n            for (var _b = 0, _c = nodeDataRef.inputs[class_this].connections; _b < _c.length; _b++) {\n                var connectionFrom = _c[_b];\n                var sourceNodeDataRef = this.drawflow.drawflow[moduleName].data[connectionFrom.node];\n                for (var output_class in sourceNodeDataRef.outputs) {\n                    if (Object.prototype.hasOwnProperty.call(sourceNodeDataRef.outputs, output_class)) {\n                        for (var _d = 0, _e = sourceNodeDataRef.outputs[output_class]\n                            .connections; _d < _e.length; _d++) {\n                            var connectionTo = _e[_d];\n                            if (connectionTo.node === id &&\n                                connectionTo.output === class_next) {\n                                connectionTo.output = class_this;\n                                if (this.module === moduleName) {\n                                    var connectionEl = this.container.querySelector(\".connection.node_in_node-\" +\n                                        connectionTo.node +\n                                        \".node_out_node-\" +\n                                        connectionFrom.node +\n                                        \".\" +\n                                        connectionTo.output +\n                                        \".\" +\n                                        connectionFrom.input);\n                                    connectionEl.classList.replace(class_next, class_this);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.module === moduleName) {\n                var input_el = this.container.querySelector(\"#node-\" + id + \" .inputs .input\" + class_next);\n                input_el.classList.replace(class_next, class_this);\n            }\n        }\n        delete nodeDataRef.inputs[\"input_\" + num_in];\n        this.updateNodeConnections(\"node-\" + id);\n    };\n    Drawflow.prototype.removeNodeOutput = function (id, output_class) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var nodeDataRef = this.drawflow.drawflow[moduleName].data[id];\n        if (this.module === moduleName) {\n            this.container\n                .querySelector(\"#node-\" + id + \" .outputs .output.\" + output_class)\n                .remove();\n        }\n        for (var _i = 0, _a = nodeDataRef.outputs[output_class].connections; _i < _a.length; _i++) {\n            var connection = _a[_i];\n            this.removeConnection(connection.node, id, connection.output, output_class);\n        }\n        // update outputs\n        var output_index = parseInt(output_class.slice(\"output_\".length)) - 1;\n        var num_in = Object.keys(nodeDataRef.outputs).length;\n        for (var i = output_index; i <= num_in; i++) {\n            var class_this = \"output_\" + (i + 1);\n            var class_next = \"output_\" + (i + 2);\n            nodeDataRef.outputs[class_this] = nodeDataRef.outputs[class_next];\n            for (var _b = 0, _c = nodeDataRef.outputs[class_this]\n                .connections; _b < _c.length; _b++) {\n                var connectionFrom = _c[_b];\n                var sourceNodeDataRef = this.drawflow.drawflow[moduleName].data[connectionFrom.node];\n                for (var input_class in sourceNodeDataRef.inputs) {\n                    if (Object.prototype.hasOwnProperty.call(sourceNodeDataRef.inputs, input_class)) {\n                        for (var _d = 0, _e = sourceNodeDataRef.inputs[input_class]\n                            .connections; _d < _e.length; _d++) {\n                            var connectionTo = _e[_d];\n                            if (connectionTo.node === id &&\n                                connectionTo.input === class_next) {\n                                connectionTo.input = class_this;\n                                if (this.module === moduleName) {\n                                    var connectionEl = this.container.querySelector(\".connection.node_in_node-\" +\n                                        connectionTo.node +\n                                        \".node_out_node-\" +\n                                        connectionFrom.node +\n                                        \".\" +\n                                        connectionTo.input +\n                                        \".\" +\n                                        connectionFrom.output);\n                                    connectionEl.classList.replace(class_next, class_this);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.module === moduleName) {\n                var output_el = this.container.querySelector(\"#node-\" + id + \" .outputs .output\" + class_next);\n                output_el.classList.replace(class_next, class_this);\n            }\n        }\n        delete nodeDataRef.outputs[\"output_\" + num_in];\n        this.updateNodeConnections(\"node-\" + id);\n    };\n    Drawflow.prototype.removeNodeId = function (id) {\n        this.removeNodeConnectionsByNodeId(id);\n        var moduleName = this.getModuleFromNodeId(getNodeID(id));\n        if (this.module === moduleName) {\n            this.container.querySelector(\"#\".concat(id)).remove();\n        }\n        delete this.drawflow.drawflow[moduleName].data[getNodeID(id)];\n        this.dispatch(\"nodeRemoved\", getNodeID(id));\n    };\n    Drawflow.prototype.removeSelectedConnection = function () {\n        if (this.connection_selected != null) {\n            var elem = this.connection_selected.parentElement;\n            var _a = getConnectionData(elem.classList), output_id_1 = _a.output_id, input_id_2 = _a.input_id, output_class_1 = _a.output_class, input_class_3 = _a.input_class;\n            elem.remove();\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            var index_out = moduleData[output_id_1].outputs[output_class_1].connections.findIndex(function (item) {\n                return item.node === input_id_2 && item.output === input_class_3;\n            });\n            moduleData[output_id_1].outputs[output_class_1].connections.splice(index_out, 1);\n            var index_in = moduleData[input_id_2].inputs[input_class_3].connections.findIndex(function (item) {\n                return item.node === output_id_1 && item.input === output_class_1;\n            });\n            moduleData[input_id_2].inputs[input_class_3].connections.splice(index_in, 1);\n            this.dispatch(\"connectionRemoved\", {\n                output_id: output_id_1,\n                input_id: input_id_2,\n                output_class: output_class_1,\n                input_class: input_class_3,\n            });\n            this.connection_selected = null;\n        }\n    };\n    Drawflow.prototype.removeConnection = function (id_output, id_input, output_class, input_class) {\n        var nodeOneModule = this.getModuleFromNodeId(id_output);\n        var nodeTwoModule = this.getModuleFromNodeId(id_input);\n        if (nodeOneModule === nodeTwoModule) {\n            // Check nodes in same module.\n            // Check connection exist\n            var exists = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function (item) {\n                return item.node == id_input && item.output === input_class;\n            });\n            if (exists > -1) {\n                if (this.module === nodeOneModule) {\n                    // In same module with view.\n                    this.container\n                        .querySelector(\".connection.node_in_node-\" +\n                        id_input +\n                        \".node_out_node-\" +\n                        id_output +\n                        \".\" +\n                        output_class +\n                        \".\" +\n                        input_class)\n                        .remove();\n                }\n                var index_out = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function (item) {\n                    return item.node == id_input && item.output === input_class;\n                });\n                this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.splice(index_out, 1);\n                var index_in = this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.findIndex(function (item) {\n                    return item.node == id_output && item.input === output_class;\n                });\n                this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.splice(index_in, 1);\n                this.dispatch(\"connectionRemoved\", {\n                    output_id: id_output,\n                    input_id: id_input,\n                    output_class: output_class,\n                    input_class: input_class,\n                });\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    Drawflow.prototype.removeNodeConnectionsByNodeId = function (id) {\n        var connectionInTag = \"node_in_\" + id;\n        var connectionOutTag = \"node_out_\" + id;\n        var moduleData = this.drawflow.drawflow[this.module].data;\n        var connectionsOut = this.container.querySelectorAll(\".\".concat(connectionOutTag));\n        var _loop_1 = function () {\n            var _a = getConnectionData(connectionsOut[i].classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n            var index_in_1 = moduleData[input_id].inputs[input_class].connections.findIndex(function (item) {\n                return item.node === output_id && item.input === output_class;\n            });\n            moduleData[input_id].inputs[input_class].connections.splice(index_in_1, 1);\n            var index_out_1 = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) {\n                return item.node === input_id && item.output === input_class;\n            });\n            moduleData[output_id].outputs[output_class].connections.splice(index_out_1, 1);\n            connectionsOut[i].remove();\n            this_1.dispatch(\"connectionRemoved\", {\n                output_id: output_id,\n                input_id: input_id,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        };\n        var this_1 = this;\n        for (var i = connectionsOut.length - 1; i >= 0; i--) {\n            _loop_1();\n        }\n        var connectionsIn = this.container.querySelectorAll(\".\".concat(connectionInTag));\n        var _loop_2 = function () {\n            var _b = getConnectionData(connectionsIn[i].classList), output_id = _b.output_id, input_id = _b.input_id, output_class = _b.output_class, input_class = _b.input_class;\n            index_out = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) {\n                return item.node === input_id && item.output === input_class;\n            });\n            moduleData[output_id].outputs[output_class].connections.splice(index_out, 1);\n            index_in = moduleData[input_id].inputs[input_class].connections.findIndex(function (item) {\n                return item.node === output_id && item.input === output_class;\n            });\n            moduleData[input_id].inputs[input_class].connections.splice(index_in, 1);\n            connectionsIn[i].remove();\n            this_2.dispatch(\"connectionRemoved\", {\n                output_id: output_id,\n                input_id: input_id,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        };\n        var this_2 = this, index_out, index_in;\n        for (var i = connectionsIn.length - 1; i >= 0; i--) {\n            _loop_2();\n        }\n    };\n    Drawflow.prototype.getModuleFromNodeId = function (id) {\n        var editor = this.drawflow.drawflow;\n        for (var moduleName in editor) {\n            if (Object.hasOwnProperty.call(editor, moduleName)) {\n                var moduleData = editor[moduleName].data;\n                for (var nodeId in moduleData) {\n                    if (Object.hasOwnProperty.call(moduleData, nodeId) &&\n                        nodeId === id.toString()) {\n                        return moduleName;\n                    }\n                }\n            }\n        }\n    };\n    Drawflow.prototype.addModule = function (name) {\n        this.drawflow.drawflow[name] = { data: {} };\n        this.dispatch(\"moduleCreated\", name);\n    };\n    Drawflow.prototype.changeModule = function (name) {\n        this.dispatch(\"moduleChanged\", name);\n        this.module = name;\n        this.precanvas.innerHTML = \"\";\n        this.canvas_x = 0;\n        this.canvas_y = 0;\n        this.pos_x = 0;\n        this.pos_y = 0;\n        this.mouse_x = 0;\n        this.mouse_y = 0;\n        this.zoom = 1;\n        this.zoom_last_value = 1;\n        this.precanvas.style.transform = \"\";\n        this.import(this.drawflow, false);\n    };\n    Drawflow.prototype.removeModule = function (name) {\n        if (this.module === name) {\n            this.changeModule(\"Home\");\n        }\n        delete this.drawflow.drawflow[name];\n        this.dispatch(\"moduleRemoved\", name);\n    };\n    Drawflow.prototype.clearSelectedModule = function () {\n        while (this.precanvas.hasChildNodes()) {\n            this.precanvas.firstChild.remove();\n        }\n        this.drawflow.drawflow[this.module] = { data: {} };\n    };\n    Drawflow.prototype.clear = function () {\n        while (this.precanvas.hasChildNodes()) {\n            this.precanvas.firstChild.remove();\n        }\n        this.drawflow = { drawflow: { Home: { data: {} } } };\n    };\n    Drawflow.prototype.export = function () {\n        var dataExport = JSON.parse(JSON.stringify(this.drawflow));\n        this.dispatch(\"export\", dataExport);\n        return dataExport;\n    };\n    Drawflow.prototype.import = function (data, notify) {\n        if (notify === void 0) { notify = true; }\n        this.clear();\n        this.drawflow = JSON.parse(JSON.stringify(data));\n        this.load();\n        if (notify) {\n            this.dispatch(\"import\", \"import\");\n        }\n    };\n    Drawflow.prototype.on = function (event, callback) {\n        // Check if the callback is not a function\n        if (typeof callback !== \"function\") {\n            console.error(\"The listener callback must be a function, the given type is \".concat(typeof callback));\n            return false;\n        }\n        // Check if the event is not a string\n        if (typeof event !== \"string\") {\n            console.error(\"The event name must be a string, the given type is \".concat(typeof event));\n            return false;\n        }\n        // Check if this event not exists\n        if (this.events[event] === undefined) {\n            this.events[event] = {\n                listeners: [],\n            };\n        }\n        this.events[event].listeners.push(callback);\n        return true;\n    };\n    Drawflow.prototype.removeListener = function (event, callback) {\n        // Check if this event not exists\n        if (!this.events[event])\n            return false;\n        var listeners = this.events[event].listeners;\n        var listenerIndex = listeners.indexOf(callback);\n        var hasListener = listenerIndex > -1;\n        if (hasListener)\n            listeners.splice(listenerIndex, 1);\n        return hasListener;\n    };\n    Drawflow.prototype.dispatch = function (event, details) {\n        // Check if this event not exists\n        if (this.events[event] === undefined) {\n            // console.error(`This event: ${event} does not exist`);\n            return false;\n        }\n        this.events[event].listeners.forEach(function (listener) {\n            listener(details);\n        });\n        return true;\n    };\n    Drawflow.prototype.getUuid = function () {\n        // http://www.ietf.org/rfc/rfc4122.txt\n        var s = [];\n        var hexDigits = \"0123456789abcdef\";\n        for (var i = 0; i < 36; i++) {\n            s[i] = hexDigits.charAt(Math.floor(Math.random() * 0x10));\n        }\n        s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\n        s[19] = hexDigits.charAt((parseInt(s[19], 16) & 0x3) | 0x8); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n        s[8] = s[13] = s[18] = s[23] = \"-\";\n        var uuid = s.join(\"\");\n        return uuid;\n    };\n    return Drawflow;\n}());\nexport default Drawflow;\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getNodeID","str","slice","getConnectionData","classList","output_id","input_id","output_class","input_class","insertObjectkeys","content","keys","value","completeKey","concat","join","_i","elems_1","querySelectorAll","length","elem","isContentEditable","innerText","callRender","editor","render","type","id","events","event","on","callback","console","error","undefined","listeners","push","removeListener","listenerIndex","indexOf","splice","dispatch","details","log","forEach","listener","selected","handle","nodeMoved","id1","nodeSelected","nodeUnselected","nodeUpdated","_a","data","nodeUpdateId","oldId","newId","nodeRemoved","eventName","connectionStart","connection","connectionCreated","connectionRemoved","register","noderegister","Drawflow","container","options","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","precanvas","nodeId","ele_selected","node_selected","drag","drag_point","editor_selected","connection_ele","connection_selected","canvas_x","canvas_y","pos_x","pos_x_start","pos_y","pos_y_start","mouse_x","mouse_y","first_click","drawflow","Home","editor_mode","zoom","zoom_max","zoom_min","zoom_value","zoom_last_value","curvature","reroute","reroute_fix_curvature","reroute_curvature_start_end","reroute_curvature","reroute_width","force_first_input","draggable_inputs","useuuid","evCache","prevDiff","Math","set","exp","refreshZoom","configurable","start","add","tabIndex","document","createElement","appendChild","addEventListener","_dragEnd","bind","_position","_click","_contextmenu","_key","_handleZoom","updateNodeValue","_dblclick","onpointerdown","_handlePointerdown","onpointermove","_handlePointermove","onpointerup","_handlePointerup","onpointercancel","onpointerout","onpointerleave","load","ev","i","pointerId","curDiff","abs","clientX","zoomIn","zoomOut","_removeEvent","_addNodeImport","_addRerouteImport","updateNodeConnections","number","moduleName","moduleData","max","parseInt","unselectConnectionReroutes","parentElement","item","remove","e","clearSelection","target","MouseEvent","button","closest","matches","preventDefault","_contextmenuDel","tagName","hasAttribute","_createConnection","removeNodeId","removeSelectedConnection","contains","TouchEvent","touches","clientY","e_pos_x","e_pos_y","_drawConnectionTo","x","y","style","transform","selectedID","top","offsetTop","left","offsetLeft","getBoundingClientRect","setAttributeNS","toString","input_id_1","input_class_1","numberPointPosition","Array","from","children","searchConnection","outputs","connections","findIndex","node","output","points","ele_last","elementFromPoint","getNodeFromId","inputs","id_input","id_output","input","getElementsByClassName","deletebox","innerHTML","metaKey","ctrlKey","zoomLevel","deltaY","deltaX","min","resetZoom","createCurvature","start_pos_x","start_pos_y","end_pos_x","end_pos_y","line_x","line_y","handleSize","ele","createElementNS","path","eX","eY","rect","precanvasRect","width","fromX","fromY","toX","toY","lineCurve","addConnection","nodeOneModule","getModuleFromNodeId","exist","updateConnection","nodeFromElem","nodeToElem","rerouteWidth","nodeFromID","replace","querySelector","nodeToID","getCenter","linecurve","reroute_fix","lastX","lastY","curvature_1","pointX","pointY","leftCurveSegment_1","leftCurveSegment","itempath","connectionInTag","connectionOutTag","nodeElem","connectionsOut_1","connectionsIn_1","createReroutePoint","removeReroutePoint","point","position_add_array_point","numberPoints","insertBefore","search_point","find","numberMainPath","registerNode","name","html","JSON","parse","stringify","getNodesFromName","nodes","map","index","addNode","num_in","num_out","ele_pos_x","ele_pos_y","classoverride","typenode","newNodeId","getUuid","parent","setAttribute","apply","split","json_inputs","json_outputs","cloneNode","json","class","dataNode","input_item","input_connections","output_item","output_connection","isArray","input_class_2","z","changeNodeID","nodeEl","connectionIn","input_node","connectionOut","output_node","el","etarget","attr","attributes","nodeName","startsWith","updateNodeDataFromId","addNodeInput","infoNode","numInputs","addNodeOutput","numOutputs","removeNodeInput","nodeDataRef","removeConnection","input_index","class_this","class_next","connectionFrom","sourceNodeDataRef","connectionTo","removeNodeOutput","output_index","removeNodeConnectionsByNodeId","output_id_1","input_id_2","output_class_1","input_class_3","index_out","index_in","connectionsOut","_loop_1","index_in_1","index_out_1","this_1","connectionsIn","_loop_2","this_2","addModule","changeModule","import","removeModule","clearSelectedModule","hasChildNodes","firstChild","clear","export","dataExport","notify","hasListener","s","hexDigits","charAt","floor","random"],"sourceRoot":""}