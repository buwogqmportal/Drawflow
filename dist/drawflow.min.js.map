{"version":3,"file":"drawflow.min.js","mappings":"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","sources":["webpack://Drawflow/webpack/universalModuleDefinition","webpack://Drawflow/webpack/bootstrap","webpack://Drawflow/webpack/runtime/define property getters","webpack://Drawflow/webpack/runtime/hasOwnProperty shorthand","webpack://Drawflow/./src/drawflow.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Drawflow\"] = factory();\n\telse\n\t\troot[\"Drawflow\"] = factory();\n})((typeof self !== 'undefined' ? self : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import \"./drawflow.css\";\nfunction getNodeID(str) {\n    return str.slice(5);\n}\nfunction getConnectionData(classList) {\n    return {\n        output_id: classList[2].slice(14),\n        input_id: classList[1].slice(13),\n        output_class: classList[3],\n        input_class: classList[4],\n    };\n}\nfunction insertObjectkeys(content, obj, keys) {\n    if (keys === void 0) { keys = []; }\n    if (obj === null)\n        return;\n    for (var key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            var value = obj[key];\n            if (typeof value === \"object\" && value !== null) {\n                insertObjectkeys(value, [key]);\n            }\n            else {\n                var completeKey = keys.concat(key).join(\"-\");\n                var elems = content.querySelectorAll(\"[df-\" + completeKey + \"]\");\n                // @ts-ignore\n                for (var _i = 0, elems_1 = elems; _i < elems_1.length; _i++) {\n                    var elem = elems_1[_i];\n                    elem.value = value;\n                    if (elem.isContentEditable) {\n                        elem.innerText = value;\n                    }\n                }\n            }\n        }\n    }\n}\nfunction callRender(editor, render, type, id, content) {\n    var events = {};\n    var event = {\n        on: function (event, callback) {\n            // Check if the callback is not a function\n            if (typeof callback !== \"function\") {\n                console.error(\"The listener callback must be a function, the given type is \".concat(typeof callback));\n                return false;\n            }\n            // Check if the event is not a string\n            if (typeof event !== \"string\") {\n                console.error(\"The event name must be a string, the given type is \".concat(typeof event));\n                return false;\n            }\n            // Check if this event not exists\n            if (events[event] === undefined) {\n                events[event] = {\n                    listeners: [],\n                };\n            }\n            events[event].listeners.push(callback);\n        },\n        removeListener: function (event, callback) {\n            // Check if this event not exists\n            if (!events[event])\n                return false;\n            var listeners = events[event].listeners;\n            var listenerIndex = listeners.indexOf(callback);\n            var hasListener = listenerIndex > -1;\n            if (hasListener)\n                listeners.splice(listenerIndex, 1);\n        },\n        dispatch: function (event, details) {\n            // Check if this event not exists\n            if (events[event] === undefined) {\n                // console.error(`This event: ${event} does not exist`);\n                return false;\n            }\n            events[event].listeners.forEach(function (listener) {\n                listener(details);\n            });\n        },\n    };\n    var selected = false;\n    var handle = {\n        nodeMoved: function (_a) {\n            var id1 = _a.id, x = _a.x, y = _a.y;\n            if (id1 === id) {\n                event.dispatch(\"moved\", { x: x, y: y });\n            }\n        },\n        nodeSelected: function (id1) {\n            if (id1 === id) {\n                event.dispatch(\"selected\");\n                selected = true;\n            }\n        },\n        nodeUnselected: function () {\n            if (selected) {\n                event.dispatch(\"unselected\");\n            }\n        },\n        nodeUpdated: function (_a) {\n            var id1 = _a.id, data = _a.data;\n            if (id1 === id) {\n                event.dispatch(\"updated\", data);\n            }\n        },\n        nodeUpdateId: function (_a) {\n            var oldId = _a.oldId, newId = _a.newId;\n            if (oldId === id) {\n                id = newId;\n                event.dispatch(\"updatedId\", newId);\n            }\n        },\n        nodeRemoved: function (id1) {\n            if (id1 === id) {\n                for (var eventName in handle) {\n                    // @ts-ignore\n                    var callback = handle[eventName];\n                    // @ts-ignore\n                    editor.removeListener(eventName, callback);\n                }\n                event.dispatch(\"removed\");\n            }\n        },\n        connectionStart: function (connection) {\n            if (connection.output_id === id) {\n                event.dispatch(\"connectionStart\", connection);\n            }\n        },\n        connectionCreated: function (connection) {\n            if (connection.output_id === id || connection.input_id === id) {\n                event.dispatch(\"connectionCreated\", connection);\n            }\n        },\n        connectionRemoved: function (connection) {\n            if (connection.output_id === id || connection.input_id === id) {\n                event.dispatch(\"connectionRemoved\", connection);\n            }\n        },\n    };\n    for (var eventName in handle) {\n        // @ts-ignore\n        var callback = handle[eventName];\n        // @ts-ignore\n        editor.on(eventName, callback);\n    }\n    render({\n        register: editor.noderegister[type],\n        type: type,\n        content: content,\n        editor: editor,\n        event: event,\n    });\n}\nvar Drawflow = /** @class */ (function () {\n    function Drawflow(container, options) {\n        if (options === void 0) { options = {}; }\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n        this.container = container;\n        this.events = {};\n        this.precanvas = null;\n        this.nodeId = 1;\n        this.ele_selected = null;\n        this.node_selected = null;\n        this.drag = false;\n        this.drag_point = false;\n        this.editor_selected = false;\n        this.connection = false;\n        this.connection_ele = null;\n        this.connection_selected = null;\n        this.canvas_x = 0;\n        this.canvas_y = 0;\n        this.pos_x = 0;\n        this.pos_x_start = 0;\n        this.pos_y = 0;\n        this.pos_y_start = 0;\n        this.mouse_x = 0;\n        this.mouse_y = 0;\n        this.first_click = null;\n        this.noderegister = {};\n        this.drawflow = { drawflow: { Home: { data: {} } } };\n        // Configurable options\n        this.module = \"Home\";\n        this.editor_mode = \"edit\";\n        this.zoom = 1;\n        this.zoom_max = 2;\n        this.zoom_min = 1 / 10;\n        this.zoom_value = 0.2;\n        this.zoom_last_value = 1;\n        this.curvature = 0.5;\n        this.reroute = false;\n        this.reroute_fix_curvature = false;\n        this.reroute_curvature_start_end = 0.5;\n        this.reroute_curvature = 0.5;\n        this.reroute_width = 6;\n        this.force_first_input = false;\n        this.draggable_inputs = true;\n        this.useuuid = false;\n        // Mobile\n        this.evCache = [];\n        this.prevDiff = -1;\n        this.module = (_a = options.module) !== null && _a !== void 0 ? _a : this.module;\n        this.editor_mode = (_b = options.editor_mode) !== null && _b !== void 0 ? _b : this.editor_mode;\n        this.zoom = (_c = options.zoom) !== null && _c !== void 0 ? _c : this.zoom;\n        this.zoom_max = (_d = options.zoom_max) !== null && _d !== void 0 ? _d : this.zoom_max;\n        this.zoom_min = (_e = options.zoom_min) !== null && _e !== void 0 ? _e : this.zoom_min;\n        this.zoom_value = (_f = options.zoom_value) !== null && _f !== void 0 ? _f : this.zoom_value;\n        this.zoom_last_value = (_g = options.zoom_last_value) !== null && _g !== void 0 ? _g : this.zoom_last_value;\n        this.curvature = (_h = options.curvature) !== null && _h !== void 0 ? _h : this.curvature;\n        this.reroute = (_j = options.reroute) !== null && _j !== void 0 ? _j : this.reroute;\n        this.reroute_fix_curvature =\n            (_k = options.reroute_fix_curvature) !== null && _k !== void 0 ? _k : this.reroute_fix_curvature;\n        this.reroute_curvature_start_end =\n            (_l = options.reroute_curvature_start_end) !== null && _l !== void 0 ? _l : this.reroute_curvature_start_end;\n        this.reroute_curvature =\n            (_m = options.reroute_curvature) !== null && _m !== void 0 ? _m : this.reroute_curvature;\n        this.reroute_width = (_o = options.reroute_width) !== null && _o !== void 0 ? _o : this.reroute_width;\n        this.force_first_input =\n            (_p = options.force_first_input) !== null && _p !== void 0 ? _p : this.force_first_input;\n        this.draggable_inputs = (_q = options.draggable_inputs) !== null && _q !== void 0 ? _q : this.draggable_inputs;\n        this.useuuid = (_r = options.useuuid) !== null && _r !== void 0 ? _r : this.useuuid;\n        this.render = (_s = options.render) !== null && _s !== void 0 ? _s : this.render;\n    }\n    Object.defineProperty(Drawflow.prototype, \"zoomLevel\", {\n        get: function () {\n            return Math.log2(this.zoom);\n        },\n        set: function (value) {\n            this.zoom = Math.pow(2, value);\n            this.refreshZoom();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Drawflow.prototype.start = function () {\n        // console.info(\"Start Drawflow!!\");\n        this.container.classList.add(\"parent-drawflow\");\n        this.container.tabIndex = 0;\n        this.precanvas = document.createElement(\"div\");\n        this.precanvas.classList.add(\"drawflow\");\n        this.container.appendChild(this.precanvas);\n        /* Mouse and Touch Actions */\n        this.container.addEventListener(\"mouseup\", this._dragEnd.bind(this));\n        this.container.addEventListener(\"mousemove\", this._position.bind(this));\n        this.container.addEventListener(\"mousedown\", this._click.bind(this));\n        this.container.addEventListener(\"touchend\", this._dragEnd.bind(this));\n        this.container.addEventListener(\"touchmove\", this._position.bind(this));\n        this.container.addEventListener(\"touchstart\", this._click.bind(this));\n        /* Context Menu */\n        this.container.addEventListener(\"contextmenu\", this._contextmenu.bind(this));\n        /* Delete */\n        this.container.addEventListener(\"keydown\", this._key.bind(this));\n        /* Zoom Mouse */\n        this.container.addEventListener(\"wheel\", this._handleZoom.bind(this));\n        /* Update data Nodes */\n        this.container.addEventListener(\"input\", this.updateNodeValue.bind(this));\n        this.container.addEventListener(\"dblclick\", this._dblclick.bind(this));\n        /* Mobile zoom */\n        this.container.onpointerdown = this._handlePointerdown.bind(this);\n        this.container.onpointermove = this._handlePointermove.bind(this);\n        this.container.onpointerup = this._handlePointerup.bind(this);\n        this.container.onpointercancel = this._handlePointerup.bind(this);\n        this.container.onpointerout = this._handlePointerup.bind(this);\n        this.container.onpointerleave = this._handlePointerup.bind(this);\n        this.load();\n    };\n    /* Mobile zoom */\n    Drawflow.prototype._handlePointerdown = function (ev) {\n        this.evCache.push(ev);\n    };\n    Drawflow.prototype._handlePointermove = function (ev) {\n        for (var i = 0; i < this.evCache.length; i++) {\n            if (ev.pointerId == this.evCache[i].pointerId) {\n                this.evCache[i] = ev;\n                break;\n            }\n        }\n        if (this.evCache.length == 2) {\n            // Calculate the distance between the two pointers\n            var curDiff = Math.abs(this.evCache[0].clientX - this.evCache[1].clientX);\n            if (this.prevDiff > 100) {\n                if (curDiff > this.prevDiff) {\n                    // The distance between the two pointers has increased\n                    this.zoomIn();\n                }\n                if (curDiff < this.prevDiff) {\n                    // The distance between the two pointers has decreased\n                    this.zoomOut();\n                }\n            }\n            this.prevDiff = curDiff;\n        }\n    };\n    Drawflow.prototype._handlePointerup = function (ev) {\n        this._removeEvent(ev);\n        if (this.evCache.length < 2) {\n            this.prevDiff = -1;\n        }\n    };\n    Drawflow.prototype._removeEvent = function (ev) {\n        // Remove this event from the target's cache\n        for (var i = this.evCache.length - 1; i >= 0; i--) {\n            if (this.evCache[i].pointerId == ev.pointerId) {\n                this.evCache.splice(i, 1);\n                break;\n            }\n        }\n    };\n    /* End Mobile Zoom */\n    Drawflow.prototype.load = function () {\n        for (var key in this.drawflow.drawflow[this.module].data) {\n            this._addNodeImport(this.drawflow.drawflow[this.module].data[key], this.precanvas);\n        }\n        if (this.reroute) {\n            for (var key in this.drawflow.drawflow[this.module].data) {\n                this._addRerouteImport(this.drawflow.drawflow[this.module].data[key]);\n            }\n        }\n        for (var key in this.drawflow.drawflow[this.module].data) {\n            this.updateNodeConnections(\"node-\" + key);\n        }\n        var editor = this.drawflow.drawflow;\n        var number = 1;\n        for (var moduleName in editor) {\n            if (Object.hasOwnProperty.call(editor, moduleName)) {\n                var moduleData = editor[moduleName].data;\n                for (var id in moduleData) {\n                    if (Object.hasOwnProperty.call(moduleData, id)) {\n                        number = Math.max(number, parseInt(id) + 1);\n                    }\n                }\n            }\n        }\n        this.nodeId = number;\n    };\n    Drawflow.prototype.unselectConnectionReroutes = function () {\n        this.dispatch(\"connectionUnselected\", true);\n        if (this.reroute_fix_curvature) {\n            this.connection_selected.parentElement\n                .querySelectorAll(\".main-path\")\n                .forEach(function (item) {\n                item.classList.remove(\"selected\");\n            });\n        }\n    };\n    Drawflow.prototype._click = function (e) {\n        var editor = this;\n        function clearSelection() {\n            if (editor.node_selected != null) {\n                editor.node_selected.classList.remove(\"selected\");\n                if (editor.node_selected != editor.ele_selected) {\n                    editor.dispatch(\"nodeUnselected\", true);\n                }\n            }\n            if (editor.connection_selected != null) {\n                editor.connection_selected.classList.remove(\"selected\");\n                editor.unselectConnectionReroutes();\n                editor.connection_selected = null;\n            }\n        }\n        this.dispatch(\"click\", e);\n        var target = e.target;\n        if (e instanceof MouseEvent && e.button === 1) {\n            this.editor_selected = true;\n        }\n        else if (e instanceof MouseEvent && e.button === 0) {\n            // get selected element\n            if (this.editor_mode === \"fixed\") {\n                if (target.classList[0] === \"parent-drawflow\" ||\n                    target.classList[0] === \"drawflow\") {\n                    this.ele_selected = target.closest(\".parent-drawflow\");\n                }\n                else {\n                    return false;\n                }\n            }\n            else if (this.editor_mode === \"view\") {\n                if (target.closest(\".drawflow\") != null ||\n                    target.matches(\".parent-drawflow\")) {\n                    this.ele_selected = target.closest(\".parent-drawflow\");\n                    e.preventDefault();\n                }\n            }\n            else {\n                this.first_click = target;\n                this.ele_selected = target;\n                if (e.button === 0) {\n                    this._contextmenuDel();\n                }\n                if (target.closest(\".drawflow_content_node\") != null) {\n                    this.ele_selected = target.closest(\".drawflow_content_node\").parentElement;\n                }\n            }\n            switch (this.ele_selected.classList[0]) {\n                case \"drawflow-node\":\n                    clearSelection();\n                    if (this.node_selected != this.ele_selected) {\n                        this.dispatch(\"nodeSelected\", getNodeID(this.ele_selected.id));\n                    }\n                    this.node_selected = this.ele_selected;\n                    this.node_selected.classList.add(\"selected\");\n                    // cancel drag if an input element was clicked on\n                    if (!this.draggable_inputs) {\n                        if (target.tagName !== \"INPUT\" &&\n                            target.tagName !== \"TEXTAREA\" &&\n                            target.tagName !== \"SELECT\" &&\n                            target.hasAttribute(\"contenteditable\") !== true) {\n                            this.drag = true;\n                        }\n                    }\n                    else {\n                        if (target.tagName !== \"SELECT\") {\n                            this.drag = true;\n                        }\n                    }\n                    break;\n                case \"output\":\n                    this.connection = true;\n                    clearSelection();\n                    this._createConnection(target);\n                    break;\n                case \"drawflow\":\n                    clearSelection();\n                    this.editor_selected = e.type === \"touchstart\";\n                    break;\n                case \"main-path\":\n                    clearSelection();\n                    this.connection_selected = this.ele_selected;\n                    this.connection_selected.classList.add(\"selected\");\n                    this.dispatch(\"connectionSelected\", getConnectionData(this.connection_selected.parentElement.classList));\n                    if (this.reroute_fix_curvature) {\n                        this.connection_selected.parentElement\n                            .querySelectorAll(\".main-path\")\n                            .forEach(function (item) {\n                            item.classList.add(\"selected\");\n                        });\n                    }\n                    break;\n                case \"point\":\n                    this.drag_point = true;\n                    this.ele_selected.classList.add(\"selected\");\n                    break;\n                case \"drawflow-delete\":\n                    if (this.node_selected) {\n                        this.removeNodeId(this.node_selected.id);\n                    }\n                    if (this.connection_selected) {\n                        this.removeSelectedConnection();\n                    }\n                    clearSelection();\n                    break;\n                default:\n                    break;\n            }\n            if (this.ele_selected.classList.contains(\"parent-drawflow\")) {\n                clearSelection();\n                this.editor_selected = e.type === \"touchstart\";\n            }\n        }\n        if (e instanceof TouchEvent) {\n            this.pos_x = e.touches[0].clientX;\n            this.pos_x_start = e.touches[0].clientX;\n            this.pos_y = e.touches[0].clientY;\n            this.pos_y_start = e.touches[0].clientY;\n        }\n        else {\n            this.pos_x = e.clientX;\n            this.pos_x_start = e.clientX;\n            this.pos_y = e.clientY;\n            this.pos_y_start = e.clientY;\n        }\n        this.dispatch(\"clickEnd\", e);\n    };\n    Drawflow.prototype._position = function (e) {\n        if (e instanceof TouchEvent) {\n            var e_pos_x = e.touches[0].clientX;\n            var e_pos_y = e.touches[0].clientY;\n        }\n        else {\n            var e_pos_x = e.clientX;\n            var e_pos_y = e.clientY;\n        }\n        if (this.connection) {\n            this._drawConnectionTo(e_pos_x, e_pos_y);\n        }\n        if (this.editor_selected) {\n            var x = this.canvas_x - this.pos_x + e_pos_x;\n            var y = this.canvas_y - this.pos_y + e_pos_y;\n            this.dispatch(\"translate\", { x: x, y: y });\n            this.precanvas.style.transform =\n                \"translate(\" + x + \"px, \" + y + \"px) scale(\" + this.zoom + \")\";\n        }\n        if (this.drag) {\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            var selectedID = getNodeID(this.ele_selected.id);\n            var dx = (this.pos_x - e_pos_x) / this.zoom;\n            var dy = (this.pos_y - e_pos_y) / this.zoom;\n            this.pos_x = e_pos_x;\n            this.pos_y = e_pos_y;\n            moduleData[selectedID].pos_x -= dx;\n            moduleData[selectedID].pos_y -= dy;\n            this.ele_selected.style.left = moduleData[selectedID].pos_x + \"px\";\n            this.ele_selected.style.top = moduleData[selectedID].pos_y + \"px\";\n            this.updateNodeConnections(this.ele_selected.id);\n        }\n        if (this.drag_point) {\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            this.pos_x = e_pos_x;\n            this.pos_y = e_pos_y;\n            var pos_x = (this.pos_x - this.precanvas.getBoundingClientRect().x) / this.zoom;\n            var pos_y = (this.pos_y - this.precanvas.getBoundingClientRect().y) / this.zoom;\n            this.ele_selected.setAttributeNS(null, \"cx\", pos_x.toString());\n            this.ele_selected.setAttributeNS(null, \"cy\", pos_y.toString());\n            var _a = getConnectionData(this.ele_selected.parentElement.classList), output_id = _a.output_id, input_id_1 = _a.input_id, output_class = _a.output_class, input_class_1 = _a.input_class;\n            var numberPointPosition = Array.from(this.ele_selected.parentElement.children).indexOf(this.ele_selected) - 1;\n            if (this.reroute_fix_curvature) {\n                var numberMainPath = this.ele_selected.parentElement.querySelectorAll(\".main-path\")\n                    .length - 1;\n                numberPointPosition -= numberMainPath;\n                if (numberPointPosition < 0) {\n                    numberPointPosition = 0;\n                }\n            }\n            var searchConnection = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) {\n                return item.node === input_id_1 && item.output === input_class_1;\n            });\n            moduleData[output_id].outputs[output_class].connections[searchConnection].points[numberPointPosition] = {\n                pos_x: pos_x,\n                pos_y: pos_y,\n            };\n            this.updateNodeConnections(\"node-\".concat(output_id));\n        }\n        if (e.type === \"touchmove\") {\n            this.mouse_x = e_pos_x;\n            this.mouse_y = e_pos_y;\n        }\n        this.dispatch(\"mouseMove\", { x: e_pos_x, y: e_pos_y });\n    };\n    Drawflow.prototype._dragEnd = function (e) {\n        var e_pos_x;\n        var e_pos_y;\n        var ele_last;\n        if (e instanceof TouchEvent) {\n            e_pos_x = this.mouse_x;\n            e_pos_y = this.mouse_y;\n            ele_last = document.elementFromPoint(e_pos_x, e_pos_y);\n        }\n        else {\n            e_pos_x = e.clientX;\n            e_pos_y = e.clientY;\n            ele_last = e.target;\n        }\n        if (this.drag) {\n            if (this.pos_x_start != e_pos_x || this.pos_y_start != e_pos_y) {\n                var id = getNodeID(this.ele_selected.id);\n                var nodeData = this.getNodeFromId(id);\n                this.dispatch(\"nodeMoved\", {\n                    id: id,\n                    x: nodeData.pos_x,\n                    y: nodeData.pos_y,\n                });\n            }\n        }\n        if (this.drag_point) {\n            this.ele_selected.classList.remove(\"selected\");\n            if (this.pos_x_start != e_pos_x || this.pos_y_start != e_pos_y) {\n                this.dispatch(\"rerouteMoved\", getConnectionData(this.ele_selected.parentElement.classList).output_id);\n            }\n        }\n        if (this.editor_selected) {\n            this.canvas_x = this.canvas_x + -(this.pos_x - e_pos_x);\n            this.canvas_y = this.canvas_y + -(this.pos_y - e_pos_y);\n            this.editor_selected = false;\n        }\n        if (this.connection === true) {\n            if (ele_last.classList[0] === \"input\" ||\n                (this.force_first_input &&\n                    (ele_last.closest(\".drawflow_content_node\") != null ||\n                        ele_last.classList[0] === \"drawflow-node\"))) {\n                if (this.force_first_input &&\n                    (ele_last.closest(\".drawflow_content_node\") != null ||\n                        ele_last.classList[0] === \"drawflow-node\")) {\n                    if (ele_last.closest(\".drawflow_content_node\") != null) {\n                        var input_id = ele_last.closest(\".drawflow_content_node\")\n                            .parentElement.id;\n                    }\n                    else {\n                        var input_id = ele_last.id;\n                    }\n                    if (Object.keys(this.getNodeFromId(getNodeID(input_id)).inputs)\n                        .length === 0) {\n                        var input_class = \"\";\n                    }\n                    else {\n                        var input_class = \"input_1\";\n                    }\n                }\n                else {\n                    // Fix connection;\n                    var input_id = ele_last.parentElement.parentElement.id;\n                    var input_class = ele_last.classList[1];\n                }\n                var output_id = this.ele_selected.parentElement.parentElement.id;\n                var output_class = this.ele_selected.classList[1];\n                if (output_id !== input_id && input_class) {\n                    if (this.container.querySelectorAll(\".connection.node_in_\" +\n                        input_id +\n                        \".node_out_\" +\n                        output_id +\n                        \".\" +\n                        output_class +\n                        \".\" +\n                        input_class).length === 0) {\n                        // Conection no exist save connection\n                        this.connection_ele.classList.add(\"node_in_\" + input_id);\n                        this.connection_ele.classList.add(\"node_out_\" + output_id);\n                        this.connection_ele.classList.add(output_class);\n                        this.connection_ele.classList.add(input_class);\n                        var id_input = getNodeID(input_id);\n                        var id_output = getNodeID(output_id);\n                        this.drawflow.drawflow[this.module].data[id_output].outputs[output_class].connections.push({ node: id_input, output: input_class });\n                        this.drawflow.drawflow[this.module].data[id_input].inputs[input_class].connections.push({ node: id_output, input: output_class });\n                        this.updateNodeConnections(\"node-\" + id_output);\n                        this.updateNodeConnections(\"node-\" + id_input);\n                        this.dispatch(\"connectionCreated\", {\n                            output_id: id_output,\n                            input_id: id_input,\n                            output_class: output_class,\n                            input_class: input_class,\n                        });\n                    }\n                    else {\n                        this.dispatch(\"connectionCancel\", true);\n                        this.connection_ele.remove();\n                    }\n                    this.connection_ele = null;\n                }\n                else {\n                    // Connection exists Remove Connection;\n                    this.dispatch(\"connectionCancel\", true);\n                    this.connection_ele.remove();\n                    this.connection_ele = null;\n                }\n            }\n            else {\n                // Remove Connection;\n                this.dispatch(\"connectionCancel\", true);\n                this.connection_ele.remove();\n                this.connection_ele = null;\n            }\n        }\n        this.drag = false;\n        this.drag_point = false;\n        this.connection = false;\n        this.ele_selected = null;\n        this.editor_selected = false;\n        this.dispatch(\"mouseUp\", e);\n    };\n    Drawflow.prototype._contextmenu = function (e) {\n        this.dispatch(\"contextmenu\", e);\n        e.preventDefault();\n        if (this.editor_mode === \"fixed\" || this.editor_mode === \"view\") {\n            return false;\n        }\n        if (this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\n            this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\n        }\n        if (this.node_selected || this.connection_selected) {\n            var deletebox = document.createElement(\"div\");\n            deletebox.classList.add(\"drawflow-delete\");\n            deletebox.innerHTML = \"x\";\n            if (this.node_selected) {\n                this.node_selected.appendChild(deletebox);\n            }\n            if (this.connection_selected) {\n                deletebox.style.top =\n                    e.clientY * this.zoom -\n                        this.precanvas.getBoundingClientRect().y * this.zoom +\n                        \"px\";\n                deletebox.style.left =\n                    e.clientX * this.zoom -\n                        this.precanvas.getBoundingClientRect().x * this.zoom +\n                        \"px\";\n                this.precanvas.appendChild(deletebox);\n            }\n        }\n    };\n    Drawflow.prototype._contextmenuDel = function () {\n        if (this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\n            this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\n        }\n    };\n    Drawflow.prototype._key = function (e) {\n        this.dispatch(\"keydown\", e);\n        if (this.editor_mode === \"fixed\" || this.editor_mode === \"view\") {\n            return false;\n        }\n        if (e.key === \"Delete\" || (e.key === \"Backspace\" && e.metaKey)) {\n            if (this.node_selected != null) {\n                if (this.first_click.tagName !== \"INPUT\" &&\n                    this.first_click.tagName !== \"TEXTAREA\" &&\n                    this.first_click.hasAttribute(\"contenteditable\") !== true) {\n                    this.removeNodeId(this.node_selected.id);\n                }\n            }\n            if (this.connection_selected != null) {\n                this.removeSelectedConnection();\n            }\n        }\n    };\n    Drawflow.prototype._handleZoom = function (event) {\n        event.preventDefault();\n        if (event.ctrlKey) {\n            this.zoomLevel -= event.deltaY / 100;\n        }\n        else {\n            this.canvas_x -= event.deltaX;\n            this.canvas_y -= event.deltaY;\n            this.dispatch(\"translate\", { x: this.canvas_x, y: this.canvas_y });\n            this.precanvas.style.transform =\n                \"translate(\" +\n                    this.canvas_x +\n                    \"px, \" +\n                    this.canvas_y +\n                    \"px) scale(\" +\n                    this.zoom +\n                    \")\";\n        }\n    };\n    Drawflow.prototype.refreshZoom = function () {\n        this.zoom = Math.min(Math.max(this.zoom_min, this.zoom), this.zoom_max);\n        this.dispatch(\"zoom\", this.zoom);\n        this.canvas_x = (this.canvas_x / this.zoom_last_value) * this.zoom;\n        this.canvas_y = (this.canvas_y / this.zoom_last_value) * this.zoom;\n        this.zoom_last_value = this.zoom;\n        this.precanvas.style.transform =\n            \"translate(\" +\n                this.canvas_x +\n                \"px, \" +\n                this.canvas_y +\n                \"px) scale(\" +\n                this.zoom +\n                \")\";\n    };\n    Drawflow.prototype.zoomIn = function (value) {\n        if (value === void 0) { value = this.zoom_value; }\n        this.zoomLevel += value;\n        console.log(value);\n    };\n    Drawflow.prototype.zoomOut = function (value) {\n        if (value === void 0) { value = this.zoom_value; }\n        this.zoomLevel -= value;\n    };\n    Drawflow.prototype.resetZoom = function () {\n        if (this.zoom != 1) {\n            this.zoom = 1;\n            this.refreshZoom();\n        }\n    };\n    Drawflow.prototype.createCurvature = function (start_pos_x, start_pos_y, end_pos_x, end_pos_y, curvature) {\n        var line_x = start_pos_x;\n        var line_y = start_pos_y;\n        var x = end_pos_x;\n        var y = end_pos_y;\n        var handleSize = Math.abs(x - line_x) * curvature;\n        var handleStartDir = true ? 1 : -1;\n        var handleEndDir = true ? 1 : -1;\n        return (\"M\" +\n            [line_x, line_y].join() +\n            \"C\" +\n            [\n                line_x + handleSize * handleStartDir,\n                line_y,\n                x - handleSize * handleEndDir,\n                y,\n                x,\n                y,\n            ].join());\n    };\n    Drawflow.prototype._createConnection = function (ele) {\n        var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        this.connection_ele = connection;\n        var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path.classList.add(\"main-path\");\n        path.setAttributeNS(null, \"d\", \"\");\n        // path.innerHTML = 'a';\n        connection.classList.add(\"connection\");\n        connection.appendChild(path);\n        this.precanvas.appendChild(connection);\n        var id_output = getNodeID(ele.parentElement.parentElement.id);\n        var output_class = ele.classList[1];\n        this.dispatch(\"connectionStart\", {\n            output_id: id_output,\n            output_class: output_class,\n        });\n    };\n    Drawflow.prototype._drawConnectionTo = function (eX, eY) {\n        var precanvas = this.precanvas;\n        var zoom = this.zoom;\n        var precanvasRect = precanvas.getBoundingClientRect();\n        var path = this.connection_ele.children[0];\n        function getCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x + rect.width / 2) / zoom,\n                (rect.y - precanvasRect.y + rect.width / 2) / zoom,\n            ];\n        }\n        var _a = getCenter(this.ele_selected), fromX = _a[0], fromY = _a[1];\n        var toX = (eX - this.precanvas.getBoundingClientRect().x) / zoom;\n        var toY = (eY - this.precanvas.getBoundingClientRect().y) / zoom;\n        var curvature = this.curvature;\n        var lineCurve = this.createCurvature(fromX, fromY, toX, toY, curvature);\n        path.setAttributeNS(null, \"d\", lineCurve);\n    };\n    Drawflow.prototype.addConnection = function (id_output, id_input, output_class, input_class) {\n        var nodeOneModule = this.getModuleFromNodeId(id_output);\n        var nodeTwoModule = this.getModuleFromNodeId(id_input);\n        if (nodeOneModule !== nodeTwoModule) {\n            return;\n        }\n        var dataNode = this.getNodeFromId(id_output);\n        var exist = false;\n        for (var _i = 0, _a = dataNode.outputs[output_class].connections; _i < _a.length; _i++) {\n            var output = _a[_i];\n            if (output.node == id_input && output.output == input_class) {\n                exist = true;\n            }\n        }\n        // Check connection exist\n        if (!exist) {\n            var moduleData = this.drawflow.drawflow[nodeOneModule].data;\n            //Create Connection\n            moduleData[id_output].outputs[output_class].connections.push({\n                node: id_input.toString(),\n                output: input_class,\n            });\n            moduleData[id_input].inputs[input_class].connections.push({\n                node: id_output.toString(),\n                input: output_class,\n            });\n            if (this.module === nodeOneModule) {\n                //Draw connection\n                var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                path.classList.add(\"main-path\");\n                path.setAttributeNS(null, \"d\", \"\");\n                // path.innerHTML = 'a';\n                connection.classList.add(\"connection\");\n                connection.classList.add(\"node_in_node-\" + id_input);\n                connection.classList.add(\"node_out_node-\" + id_output);\n                connection.classList.add(output_class);\n                connection.classList.add(input_class);\n                connection.appendChild(path);\n                this.precanvas.appendChild(connection);\n                this.updateNodeConnections(\"node-\" + id_output);\n                this.updateNodeConnections(\"node-\" + id_input);\n            }\n            this.dispatch(\"connectionCreated\", {\n                output_id: id_output,\n                input_id: id_input,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        }\n    };\n    Drawflow.prototype.updateConnection = function (connection, nodeFromElem, nodeToElem) {\n        var container = this.container;\n        var precanvas = this.precanvas;\n        var curvature = this.curvature;\n        var createCurvature = this.createCurvature;\n        var reroute_curvature = this.reroute_curvature;\n        var reroute_curvature_start_end = this.reroute_curvature_start_end;\n        var reroute_fix_curvature = this.reroute_fix_curvature;\n        var rerouteWidth = this.reroute_width;\n        var zoom = this.zoom;\n        if (!nodeFromElem) {\n            var nodeFromID = connection.classList[2].replace(\"node_out_\", \"\");\n            nodeFromElem = container.querySelector(\"#\".concat(nodeFromID));\n        }\n        if (!nodeToElem) {\n            var nodeToID = connection.classList[1].replace(\"node_in_\", \"\");\n            nodeToElem = container.querySelector(\"#\".concat(nodeToID));\n        }\n        if (!nodeFromElem || !nodeToElem) {\n            return;\n        }\n        var precanvasRect = precanvas.getBoundingClientRect();\n        function getCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x + rect.width / 2) / zoom,\n                (rect.y - precanvasRect.y + rect.width / 2) / zoom,\n            ];\n        }\n        function getRerouteCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x) / zoom + rerouteWidth,\n                (rect.y - precanvasRect.y) / zoom + rerouteWidth,\n            ];\n        }\n        var outputElem = nodeFromElem.querySelector(\".\" + connection.classList[3]);\n        var _a = getCenter(outputElem), fromX = _a[0], fromY = _a[1];\n        var inputElem = nodeToElem.querySelector(\".\" + connection.classList[4]);\n        var _b = getCenter(inputElem), toX = _b[0], toY = _b[1];\n        var points = connection.querySelectorAll(\".point\");\n        if (points.length === 0) {\n            var lineCurve = createCurvature(fromX, fromY, toX, toY, curvature);\n            connection.children[0].setAttributeNS(null, \"d\", lineCurve);\n        }\n        else {\n            var linecurve = \"\";\n            var reroute_fix = [];\n            var lastX = fromX;\n            var lastY = fromY;\n            var curvature_1 = reroute_curvature_start_end;\n            for (var i = 0; i < points.length; i++) {\n                var pointElem = points[i];\n                var _c = getRerouteCenter(pointElem), pointX = _c[0], pointY = _c[1];\n                var leftCurveSegment_1 = createCurvature(lastX, lastY, pointX, pointY, curvature_1);\n                linecurve += leftCurveSegment_1;\n                reroute_fix.push(leftCurveSegment_1);\n                lastX = pointX;\n                lastY = pointY;\n                curvature_1 = reroute_curvature;\n            }\n            curvature_1 = reroute_curvature_start_end;\n            var leftCurveSegment = createCurvature(lastX, lastY, toX, toY, curvature_1);\n            linecurve += leftCurveSegment;\n            reroute_fix.push(leftCurveSegment);\n            if (reroute_fix_curvature) {\n                reroute_fix.forEach(function (itempath, i) {\n                    connection.children[i].setAttributeNS(null, \"d\", itempath);\n                });\n            }\n            else {\n                connection.children[0].setAttributeNS(null, \"d\", linecurve);\n            }\n        }\n    };\n    Drawflow.prototype.updateNodeConnections = function (id) {\n        var connectionInTag = \"node_in_\" + id;\n        var connectionOutTag = \"node_out_\" + id;\n        var container = this.container;\n        var nodeElem = container.querySelector(\"#node-\".concat(id));\n        var connectionsOut = container.querySelectorAll(\".\".concat(connectionOutTag));\n        // @ts-ignore\n        for (var _i = 0, connectionsOut_1 = connectionsOut; _i < connectionsOut_1.length; _i++) {\n            var connection = connectionsOut_1[_i];\n            this.updateConnection(connection, nodeElem, null);\n        }\n        var connectionsIn = container.querySelectorAll(\".\".concat(connectionInTag));\n        // @ts-ignore\n        for (var _a = 0, connectionsIn_1 = connectionsIn; _a < connectionsIn_1.length; _a++) {\n            var connection = connectionsIn_1[_a];\n            this.updateConnection(connection, null, nodeElem);\n        }\n    };\n    Drawflow.prototype._dblclick = function (e) {\n        if (this.connection_selected != null && this.reroute) {\n            this.createReroutePoint(this.connection_selected);\n        }\n        if (e.target.classList[0] === \"point\") {\n            this.removeReroutePoint(e.target);\n        }\n    };\n    Drawflow.prototype.createReroutePoint = function (ele) {\n        this.connection_selected.classList.remove(\"selected\");\n        var _a = getConnectionData(this.connection_selected.parentElement.classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n        this.connection_selected = null;\n        var point = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        point.classList.add(\"point\");\n        var pos_x = (this.pos_x - this.precanvas.getBoundingClientRect().x) * this.zoom;\n        var pos_y = (this.pos_y - this.precanvas.getBoundingClientRect().y) * this.zoom;\n        point.setAttributeNS(null, \"cx\", pos_x.toString());\n        point.setAttributeNS(null, \"cy\", pos_y.toString());\n        point.setAttributeNS(null, \"r\", this.reroute_width.toString());\n        var position_add_array_point = 0;\n        if (this.reroute_fix_curvature) {\n            var numberPoints = ele.parentElement.querySelectorAll(\".main-path\").length;\n            var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n            path.classList.add(\"main-path\");\n            path.setAttributeNS(null, \"d\", \"\");\n            ele.parentElement.insertBefore(path, ele.parentElement.children[numberPoints]);\n            if (numberPoints === 1) {\n                ele.parentElement.appendChild(point);\n            }\n            else {\n                var search_point = Array.from(ele.parentElement.children).indexOf(ele);\n                position_add_array_point = search_point;\n                ele.parentElement.insertBefore(point, ele.parentElement.children[search_point + numberPoints + 1]);\n            }\n        }\n        else {\n            ele.parentElement.appendChild(point);\n        }\n        var moduleData = this.drawflow.drawflow[this.module].data;\n        var connection = moduleData[output_id].outputs[output_class].connections.find(function (item) {\n            return item.node === input_id && item.output === input_class;\n        });\n        if (connection.points === undefined) {\n            connection.points = [];\n        }\n        if (this.reroute_fix_curvature) {\n            //console.log(position_add_array_point)\n            if (position_add_array_point > 0) {\n                connection.points.splice(position_add_array_point, 0, {\n                    pos_x: pos_x,\n                    pos_y: pos_y,\n                });\n            }\n            else {\n                connection.points.push({\n                    pos_x: pos_x,\n                    pos_y: pos_y,\n                });\n            }\n            ele.parentElement\n                .querySelectorAll(\".main-path.selected\")\n                .forEach(function (item) {\n                return item.classList.remove(\"selected\");\n            });\n        }\n        else {\n            connection.points.push({\n                pos_x: pos_x,\n                pos_y: pos_y,\n            });\n        }\n        this.dispatch(\"addReroute\", output_id);\n        this.updateConnection(ele.parentElement);\n    };\n    Drawflow.prototype.removeReroutePoint = function (ele) {\n        var _a = getConnectionData(ele.parentElement.classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n        var numberPointPosition = Array.from(ele.parentElement.children).indexOf(ele) - 1;\n        var searchConnection = this.drawflow.drawflow[this.module].data[output_id].outputs[output_class].connections.findIndex(function (item) {\n            return item.node === input_id && item.output === input_class;\n        });\n        if (this.reroute_fix_curvature) {\n            var numberMainPath = ele.parentElement.querySelectorAll(\".main-path\").length;\n            ele.parentElement.children[numberMainPath - 1].remove();\n            numberPointPosition -= numberMainPath;\n            if (numberPointPosition < 0) {\n                numberPointPosition = 0;\n            }\n        }\n        this.drawflow.drawflow[this.module].data[output_id].outputs[output_class].connections[searchConnection].points.splice(numberPointPosition, 1);\n        ele.remove();\n        this.dispatch(\"removeReroute\", output_id);\n        this.updateNodeConnections(\"node-\".concat(output_id));\n    };\n    Drawflow.prototype.registerNode = function (name, html) {\n        this.noderegister[name] = html;\n    };\n    Drawflow.prototype.getNodeFromId = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        if (!moduleName)\n            return;\n        return JSON.parse(JSON.stringify(this.drawflow.drawflow[moduleName].data[id]));\n    };\n    Drawflow.prototype.getNodesFromName = function (name) {\n        var nodes = [];\n        var editor = this.drawflow.drawflow;\n        Object.keys(editor).map(function (moduleName, index) {\n            for (var node in editor[moduleName].data) {\n                if (editor[moduleName].data[node].name == name) {\n                    nodes.push(editor[moduleName].data[node].id);\n                }\n            }\n        });\n        return nodes;\n    };\n    Drawflow.prototype.addNode = function (name, num_in, num_out, ele_pos_x, ele_pos_y, classoverride, data, html, typenode) {\n        var _a;\n        if (typenode === void 0) { typenode = false; }\n        var newNodeId;\n        if (this.useuuid) {\n            newNodeId = this.getUuid();\n        }\n        else {\n            newNodeId = this.nodeId.toString();\n        }\n        var parent = document.createElement(\"div\");\n        parent.classList.add(\"parent-node\");\n        var node = document.createElement(\"div\");\n        node.setAttribute(\"id\", \"node-\" + newNodeId);\n        node.classList.add(\"drawflow-node\");\n        if (classoverride) {\n            (_a = node.classList).add.apply(_a, classoverride.split(\" \"));\n        }\n        var inputs = document.createElement(\"div\");\n        inputs.classList.add(\"inputs\");\n        var outputs = document.createElement(\"div\");\n        outputs.classList.add(\"outputs\");\n        var json_inputs = {};\n        for (var x = 0; x < num_in; x++) {\n            var input = document.createElement(\"div\");\n            input.classList.add(\"input\");\n            input.classList.add(\"input_\" + (x + 1));\n            json_inputs[\"input_\" + (x + 1)] = { connections: [] };\n            inputs.appendChild(input);\n        }\n        var json_outputs = {};\n        for (var x = 0; x < num_out; x++) {\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (x + 1));\n            json_outputs[\"output_\" + (x + 1)] = { connections: [] };\n            outputs.appendChild(output);\n        }\n        var content = document.createElement(\"div\");\n        content.classList.add(\"drawflow_content_node\");\n        if (typenode === false) {\n            content.innerHTML = html;\n        }\n        else if (typenode === true) {\n            content.appendChild(this.noderegister[html].cloneNode(true));\n        }\n        else if (typeof typenode === \"function\") {\n            callRender(this, typenode, html, newNodeId, content);\n        }\n        else {\n            callRender(this, this.render, html, newNodeId, content);\n        }\n        insertObjectkeys(content, data);\n        node.style.top = ele_pos_y + \"px\";\n        node.style.left = ele_pos_x + \"px\";\n        node.appendChild(inputs);\n        node.appendChild(content);\n        node.appendChild(outputs);\n        parent.appendChild(node);\n        this.precanvas.appendChild(parent);\n        var json = {\n            id: newNodeId,\n            name: name,\n            data: data,\n            class: classoverride,\n            html: html,\n            typenode: typenode,\n            inputs: json_inputs,\n            outputs: json_outputs,\n            pos_x: ele_pos_x,\n            pos_y: ele_pos_y,\n        };\n        this.drawflow.drawflow[this.module].data[newNodeId] = json;\n        this.dispatch(\"nodeCreated\", newNodeId);\n        if (!this.useuuid) {\n            this.nodeId++;\n        }\n        return newNodeId;\n    };\n    Drawflow.prototype._addNodeImport = function (dataNode, precanvas) {\n        var _a;\n        dataNode.id = dataNode.id.toString();\n        var parent = document.createElement(\"div\");\n        parent.classList.add(\"parent-node\");\n        var node = document.createElement(\"div\");\n        node.setAttribute(\"id\", \"node-\" + dataNode.id);\n        node.classList.add(\"drawflow-node\");\n        if (dataNode.class) {\n            (_a = node.classList).add.apply(_a, dataNode.class.split(\" \"));\n        }\n        var inputs = document.createElement(\"div\");\n        inputs.classList.add(\"inputs\");\n        var outputs = document.createElement(\"div\");\n        outputs.classList.add(\"outputs\");\n        for (var input_item in dataNode.inputs) {\n            if (Object.hasOwnProperty.call(dataNode.inputs, input_item)) {\n                var input_connections = dataNode.inputs[input_item].connections;\n                var input = document.createElement(\"div\");\n                input.classList.add(\"input\");\n                input.classList.add(input_item);\n                inputs.appendChild(input);\n                for (var output_item in input_connections) {\n                    if (Object.hasOwnProperty.call(input_connections, output_item)) {\n                        var output_connection = input_connections[output_item];\n                        output_connection.node = output_connection.node.toString();\n                        var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                        var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                        path.classList.add(\"main-path\");\n                        path.setAttributeNS(null, \"d\", \"\");\n                        // path.innerHTML = 'a';\n                        connection.classList.add(\"connection\");\n                        connection.classList.add(\"node_in_node-\" + dataNode.id);\n                        connection.classList.add(\"node_out_node-\" + output_connection.node);\n                        connection.classList.add(output_connection.input);\n                        connection.classList.add(input_item);\n                        connection.appendChild(path);\n                        precanvas.appendChild(connection);\n                    }\n                }\n            }\n        }\n        for (var x = 0; x < Object.keys(dataNode.outputs).length; x++) {\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (x + 1));\n            outputs.appendChild(output);\n        }\n        var content = document.createElement(\"div\");\n        content.classList.add(\"drawflow_content_node\");\n        if (dataNode.typenode === false) {\n            content.innerHTML = dataNode.html;\n        }\n        else if (dataNode.typenode === true) {\n            content.appendChild(this.noderegister[dataNode.html].cloneNode(true));\n        }\n        else if (typeof dataNode.typenode === \"function\") {\n            callRender(this, dataNode.typenode, dataNode.html, dataNode.id, content);\n        }\n        else {\n            callRender(this, this.render, dataNode.html, dataNode.id, content);\n        }\n        insertObjectkeys(content, dataNode.data);\n        node.style.top = dataNode.pos_y + \"px\";\n        node.style.left = dataNode.pos_x + \"px\";\n        node.appendChild(inputs);\n        node.appendChild(content);\n        node.appendChild(outputs);\n        parent.appendChild(node);\n        this.precanvas.appendChild(parent);\n    };\n    Drawflow.prototype._addRerouteImport = function (dataNode) {\n        var reroute_width = this.reroute_width;\n        var reroute_fix_curvature = this.reroute_fix_curvature;\n        var container = this.container;\n        for (var output_class in dataNode.outputs) {\n            if (Object.prototype.hasOwnProperty.call(dataNode.outputs, output_class)) {\n                var output_item = dataNode.outputs[output_class];\n                for (var input_class in output_item.connections) {\n                    if (Object.prototype.hasOwnProperty.call(output_item.connections, input_class)) {\n                        var input_item = output_item.connections[input_class];\n                        var points = input_item.points;\n                        if (Array.isArray(input_item.points)) {\n                            var input_id = input_item.node;\n                            var input_class_2 = input_item.output;\n                            var ele = container.querySelector(\".connection.node_in_node-\" +\n                                input_id +\n                                \".node_out_node-\" +\n                                dataNode.id +\n                                \".\" +\n                                output_item +\n                                \".\" +\n                                input_class_2);\n                            if (reroute_fix_curvature) {\n                                for (var z = 0; z < points.length; z++) {\n                                    var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                                    path.classList.add(\"main-path\");\n                                    path.setAttributeNS(null, \"d\", \"\");\n                                    ele.appendChild(path);\n                                }\n                            }\n                            for (var _i = 0, _a = input_item.points; _i < _a.length; _i++) {\n                                var item = _a[_i];\n                                var point = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n                                point.classList.add(\"point\");\n                                point.setAttributeNS(null, \"cx\", item.pos_x.toString());\n                                point.setAttributeNS(null, \"cy\", item.pos_y.toString());\n                                point.setAttributeNS(null, \"r\", reroute_width.toString());\n                                ele.appendChild(point);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Drawflow.prototype.changeNodeID = function (oldId, newId) {\n        var moduleName = this.getModuleFromNodeId(oldId);\n        if (!moduleName)\n            return false;\n        var moduleData = this.drawflow.drawflow[moduleName].data;\n        var node = moduleData[oldId];\n        if (this.getNodeFromId(newId) || oldId === newId)\n            return false;\n        delete moduleData[oldId];\n        moduleData[newId] = node;\n        node.id = newId;\n        var nodeEl = this.precanvas.querySelector(\"#node-\".concat(oldId));\n        nodeEl.id = \"node-\".concat(newId);\n        for (var input_class in node.inputs) {\n            var input = node.inputs[input_class];\n            for (var _i = 0, _a = input.connections; _i < _a.length; _i++) {\n                var connectionIn = _a[_i];\n                var input_node = this.getNodeFromId(connectionIn.node);\n                for (var output_class in input_node.outputs) {\n                    var output = input_node.outputs[output_class];\n                    for (var _b = 0, _c = output.connections; _b < _c.length; _b++) {\n                        var connection = _c[_b];\n                        if (connection.node === oldId &&\n                            connection.output === input_class) {\n                            connection.node = newId;\n                        }\n                    }\n                }\n            }\n        }\n        for (var output_class in node.outputs) {\n            var output = node.outputs[output_class];\n            for (var _d = 0, _e = output.connections; _d < _e.length; _d++) {\n                var connectionOut = _e[_d];\n                var output_node = this.getNodeFromId(connectionOut.node);\n                for (var input_class in output_node.inputs) {\n                    var input = output_node.inputs[input_class];\n                    for (var _f = 0, _g = input.connections; _f < _g.length; _f++) {\n                        var connection = _g[_f];\n                        if (connection.node === oldId &&\n                            connection.input === output_class) {\n                            connection.node = newId;\n                        }\n                    }\n                }\n            }\n        }\n        var connectionEls = this.precanvas.querySelectorAll(\".node_in_node-\".concat(oldId, \",.node_out_node-\").concat(newId));\n        connectionEls.forEach(function (el) {\n            el.classList.replace(\".node_in_node-\".concat(oldId), \".node_in_node-\".concat(newId));\n            el.classList.replace(\".node_out_node-\".concat(oldId), \".node_out_node-\".concat(newId));\n        });\n        this.dispatch(\"updateNodeId\", { oldId: oldId, newId: node.id });\n        return true;\n    };\n    Drawflow.prototype.updateNodeValue = function (event) {\n        var etarget = event.target;\n        var attr = etarget.attributes;\n        for (var i = 0; i < attr.length; i++) {\n            if (attr[i].nodeName.startsWith(\"df-\")) {\n                var keys = attr[i].nodeName.slice(3).split(\"-\");\n                var target = this.drawflow.drawflow[this.module].data[getNodeID(etarget.closest(\".drawflow_content_node\").parentElement.id)].data;\n                for (var index = 0; index < keys.length - 1; index += 1) {\n                    if (target[keys[index]] == null) {\n                        target[keys[index]] = {};\n                    }\n                    target = target[keys[index]];\n                }\n                target[keys[keys.length - 1]] = etarget.value;\n                if (etarget.isContentEditable) {\n                    target[keys[keys.length - 1]] = etarget.innerText;\n                }\n                this.dispatch(\"nodeDataChanged\", getNodeID(etarget.closest(\".drawflow_content_node\").parentElement.id));\n            }\n        }\n    };\n    Drawflow.prototype.updateNodeDataFromId = function (id, data) {\n        var moduleName = this.getModuleFromNodeId(id);\n        this.drawflow.drawflow[moduleName].data[id].data = data;\n        if (this.module === moduleName) {\n            var content = this.container.querySelector(\"#node-\" + id);\n            insertObjectkeys(content, data);\n        }\n    };\n    Drawflow.prototype.addNodeInput = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var infoNode = this.getNodeFromId(id);\n        var numInputs = Object.keys(infoNode.inputs).length;\n        if (this.module === moduleName) {\n            //Draw input\n            var input = document.createElement(\"div\");\n            input.classList.add(\"input\");\n            input.classList.add(\"input_\" + (numInputs + 1));\n            var parent_1 = this.container.querySelector(\"#node-\" + id + \" .inputs\");\n            parent_1.appendChild(input);\n            this.updateNodeConnections(\"node-\" + id);\n        }\n        this.drawflow.drawflow[moduleName].data[id].inputs[\"input_\" + (numInputs + 1)] = { connections: [] };\n    };\n    Drawflow.prototype.addNodeOutput = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var infoNode = this.getNodeFromId(id);\n        var numOutputs = Object.keys(infoNode.outputs).length;\n        if (this.module === moduleName) {\n            //Draw output\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (numOutputs + 1));\n            var parent_2 = this.container.querySelector(\"#node-\" + id + \" .outputs\");\n            parent_2.appendChild(output);\n            this.updateNodeConnections(\"node-\" + id);\n        }\n        this.drawflow.drawflow[moduleName].data[id].outputs[\"output_\" + (numOutputs + 1)] = { connections: [] };\n    };\n    Drawflow.prototype.removeNodeInput = function (id, input_class) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var nodeDataRef = this.drawflow.drawflow[moduleName].data[id];\n        if (this.module === moduleName) {\n            this.container\n                .querySelector(\"#node-\" + id + \" .inputs .input.\" + input_class)\n                .remove();\n        }\n        for (var _i = 0, _a = nodeDataRef.inputs[input_class].connections; _i < _a.length; _i++) {\n            var connection = _a[_i];\n            this.removeConnection(connection.node, id, connection.input, input_class);\n        }\n        // update inputs\n        var input_index = parseInt(input_class.slice(\"input_\".length)) - 1;\n        var num_in = Object.keys(nodeDataRef.inputs).length;\n        for (var i = input_index; i <= num_in; i++) {\n            var class_this = \"input_\" + (i + 1);\n            var class_next = \"input_\" + (i + 2);\n            nodeDataRef.inputs[class_this] = nodeDataRef.inputs[class_next];\n            for (var _b = 0, _c = nodeDataRef.inputs[class_this].connections; _b < _c.length; _b++) {\n                var connectionFrom = _c[_b];\n                var sourceNodeDataRef = this.drawflow.drawflow[moduleName].data[connectionFrom.node];\n                for (var output_class in sourceNodeDataRef.outputs) {\n                    if (Object.prototype.hasOwnProperty.call(sourceNodeDataRef.outputs, output_class)) {\n                        for (var _d = 0, _e = sourceNodeDataRef.outputs[output_class]\n                            .connections; _d < _e.length; _d++) {\n                            var connectionTo = _e[_d];\n                            if (connectionTo.node === id &&\n                                connectionTo.output === class_next) {\n                                connectionTo.output = class_this;\n                                if (this.module === moduleName) {\n                                    var connectionEl = this.container.querySelector(\".connection.node_in_node-\" +\n                                        connectionTo.node +\n                                        \".node_out_node-\" +\n                                        connectionFrom.node +\n                                        \".\" +\n                                        connectionTo.output +\n                                        \".\" +\n                                        connectionFrom.input);\n                                    connectionEl.classList.replace(class_next, class_this);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.module === moduleName) {\n                var input_el = this.container.querySelector(\"#node-\" + id + \" .inputs .input\" + class_next);\n                input_el.classList.replace(class_next, class_this);\n            }\n        }\n        delete nodeDataRef.inputs[\"input_\" + num_in];\n        this.updateNodeConnections(\"node-\" + id);\n    };\n    Drawflow.prototype.removeNodeOutput = function (id, output_class) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var nodeDataRef = this.drawflow.drawflow[moduleName].data[id];\n        if (this.module === moduleName) {\n            this.container\n                .querySelector(\"#node-\" + id + \" .outputs .output.\" + output_class)\n                .remove();\n        }\n        for (var _i = 0, _a = nodeDataRef.outputs[output_class].connections; _i < _a.length; _i++) {\n            var connection = _a[_i];\n            this.removeConnection(connection.node, id, connection.output, output_class);\n        }\n        // update outputs\n        var output_index = parseInt(output_class.slice(\"output_\".length)) - 1;\n        var num_in = Object.keys(nodeDataRef.outputs).length;\n        for (var i = output_index; i <= num_in; i++) {\n            var class_this = \"output_\" + (i + 1);\n            var class_next = \"output_\" + (i + 2);\n            nodeDataRef.outputs[class_this] = nodeDataRef.outputs[class_next];\n            for (var _b = 0, _c = nodeDataRef.outputs[class_this]\n                .connections; _b < _c.length; _b++) {\n                var connectionFrom = _c[_b];\n                var sourceNodeDataRef = this.drawflow.drawflow[moduleName].data[connectionFrom.node];\n                for (var input_class in sourceNodeDataRef.inputs) {\n                    if (Object.prototype.hasOwnProperty.call(sourceNodeDataRef.inputs, input_class)) {\n                        for (var _d = 0, _e = sourceNodeDataRef.inputs[input_class]\n                            .connections; _d < _e.length; _d++) {\n                            var connectionTo = _e[_d];\n                            if (connectionTo.node === id &&\n                                connectionTo.input === class_next) {\n                                connectionTo.input = class_this;\n                                if (this.module === moduleName) {\n                                    var connectionEl = this.container.querySelector(\".connection.node_in_node-\" +\n                                        connectionTo.node +\n                                        \".node_out_node-\" +\n                                        connectionFrom.node +\n                                        \".\" +\n                                        connectionTo.input +\n                                        \".\" +\n                                        connectionFrom.output);\n                                    connectionEl.classList.replace(class_next, class_this);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.module === moduleName) {\n                var output_el = this.container.querySelector(\"#node-\" + id + \" .outputs .output\" + class_next);\n                output_el.classList.replace(class_next, class_this);\n            }\n        }\n        delete nodeDataRef.outputs[\"output_\" + num_in];\n        this.updateNodeConnections(\"node-\" + id);\n    };\n    Drawflow.prototype.removeNodeId = function (id) {\n        this.removeNodeConnectionsByNodeId(id);\n        var moduleName = this.getModuleFromNodeId(getNodeID(id));\n        if (this.module === moduleName) {\n            this.container.querySelector(\"#\".concat(id)).remove();\n        }\n        delete this.drawflow.drawflow[moduleName].data[getNodeID(id)];\n        this.dispatch(\"nodeRemoved\", getNodeID(id));\n    };\n    Drawflow.prototype.removeSelectedConnection = function () {\n        if (this.connection_selected != null) {\n            var elem = this.connection_selected.parentElement;\n            var _a = getConnectionData(elem.classList), output_id_1 = _a.output_id, input_id_2 = _a.input_id, output_class_1 = _a.output_class, input_class_3 = _a.input_class;\n            elem.remove();\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            var index_out = moduleData[output_id_1].outputs[output_class_1].connections.findIndex(function (item) {\n                return item.node === input_id_2 && item.output === input_class_3;\n            });\n            moduleData[output_id_1].outputs[output_class_1].connections.splice(index_out, 1);\n            var index_in = moduleData[input_id_2].inputs[input_class_3].connections.findIndex(function (item) {\n                return item.node === output_id_1 && item.input === output_class_1;\n            });\n            moduleData[input_id_2].inputs[input_class_3].connections.splice(index_in, 1);\n            this.dispatch(\"connectionRemoved\", {\n                output_id: output_id_1,\n                input_id: input_id_2,\n                output_class: output_class_1,\n                input_class: input_class_3,\n            });\n            this.connection_selected = null;\n        }\n    };\n    Drawflow.prototype.removeConnection = function (id_output, id_input, output_class, input_class) {\n        var nodeOneModule = this.getModuleFromNodeId(id_output);\n        var nodeTwoModule = this.getModuleFromNodeId(id_input);\n        if (nodeOneModule === nodeTwoModule) {\n            // Check nodes in same module.\n            // Check connection exist\n            var exists = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function (item) {\n                return item.node == id_input && item.output === input_class;\n            });\n            if (exists > -1) {\n                if (this.module === nodeOneModule) {\n                    // In same module with view.\n                    this.container\n                        .querySelector(\".connection.node_in_node-\" +\n                        id_input +\n                        \".node_out_node-\" +\n                        id_output +\n                        \".\" +\n                        output_class +\n                        \".\" +\n                        input_class)\n                        .remove();\n                }\n                var index_out = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function (item) {\n                    return item.node == id_input && item.output === input_class;\n                });\n                this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.splice(index_out, 1);\n                var index_in = this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.findIndex(function (item) {\n                    return item.node == id_output && item.input === output_class;\n                });\n                this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.splice(index_in, 1);\n                this.dispatch(\"connectionRemoved\", {\n                    output_id: id_output,\n                    input_id: id_input,\n                    output_class: output_class,\n                    input_class: input_class,\n                });\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    Drawflow.prototype.removeNodeConnectionsByNodeId = function (id) {\n        var connectionInTag = \"node_in_\" + id;\n        var connectionOutTag = \"node_out_\" + id;\n        var moduleData = this.drawflow.drawflow[this.module].data;\n        var connectionsOut = this.container.querySelectorAll(\".\".concat(connectionOutTag));\n        var _loop_1 = function () {\n            var _a = getConnectionData(connectionsOut[i].classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n            var index_in_1 = moduleData[input_id].inputs[input_class].connections.findIndex(function (item) {\n                return item.node === output_id && item.input === output_class;\n            });\n            moduleData[input_id].inputs[input_class].connections.splice(index_in_1, 1);\n            var index_out_1 = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) {\n                return item.node === input_id && item.output === input_class;\n            });\n            moduleData[output_id].outputs[output_class].connections.splice(index_out_1, 1);\n            connectionsOut[i].remove();\n            this_1.dispatch(\"connectionRemoved\", {\n                output_id: output_id,\n                input_id: input_id,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        };\n        var this_1 = this;\n        for (var i = connectionsOut.length - 1; i >= 0; i--) {\n            _loop_1();\n        }\n        var connectionsIn = this.container.querySelectorAll(\".\".concat(connectionInTag));\n        var _loop_2 = function () {\n            var _b = getConnectionData(connectionsIn[i].classList), output_id = _b.output_id, input_id = _b.input_id, output_class = _b.output_class, input_class = _b.input_class;\n            index_out = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) {\n                return item.node === input_id && item.output === input_class;\n            });\n            moduleData[output_id].outputs[output_class].connections.splice(index_out, 1);\n            index_in = moduleData[input_id].inputs[input_class].connections.findIndex(function (item) {\n                return item.node === output_id && item.input === output_class;\n            });\n            moduleData[input_id].inputs[input_class].connections.splice(index_in, 1);\n            connectionsIn[i].remove();\n            this_2.dispatch(\"connectionRemoved\", {\n                output_id: output_id,\n                input_id: input_id,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        };\n        var this_2 = this, index_out, index_in;\n        for (var i = connectionsIn.length - 1; i >= 0; i--) {\n            _loop_2();\n        }\n    };\n    Drawflow.prototype.getModuleFromNodeId = function (id) {\n        var editor = this.drawflow.drawflow;\n        for (var moduleName in editor) {\n            if (Object.hasOwnProperty.call(editor, moduleName)) {\n                var moduleData = editor[moduleName].data;\n                for (var nodeId in moduleData) {\n                    if (Object.hasOwnProperty.call(moduleData, nodeId) &&\n                        nodeId === id.toString()) {\n                        return moduleName;\n                    }\n                }\n            }\n        }\n    };\n    Drawflow.prototype.addModule = function (name) {\n        this.drawflow.drawflow[name] = { data: {} };\n        this.dispatch(\"moduleCreated\", name);\n    };\n    Drawflow.prototype.changeModule = function (name) {\n        this.dispatch(\"moduleChanged\", name);\n        this.module = name;\n        this.precanvas.innerHTML = \"\";\n        this.canvas_x = 0;\n        this.canvas_y = 0;\n        this.pos_x = 0;\n        this.pos_y = 0;\n        this.mouse_x = 0;\n        this.mouse_y = 0;\n        this.zoom = 1;\n        this.zoom_last_value = 1;\n        this.precanvas.style.transform = \"\";\n        this.import(this.drawflow, false);\n    };\n    Drawflow.prototype.removeModule = function (name) {\n        if (this.module === name) {\n            this.changeModule(\"Home\");\n        }\n        delete this.drawflow.drawflow[name];\n        this.dispatch(\"moduleRemoved\", name);\n    };\n    Drawflow.prototype.clearSelectedModule = function () {\n        while (this.precanvas.hasChildNodes()) {\n            this.precanvas.firstChild.remove();\n        }\n        this.drawflow.drawflow[this.module] = { data: {} };\n    };\n    Drawflow.prototype.clear = function () {\n        while (this.precanvas.hasChildNodes()) {\n            this.precanvas.firstChild.remove();\n        }\n        this.drawflow = { drawflow: { Home: { data: {} } } };\n    };\n    Drawflow.prototype.export = function () {\n        var dataExport = JSON.parse(JSON.stringify(this.drawflow));\n        this.dispatch(\"export\", dataExport);\n        return dataExport;\n    };\n    Drawflow.prototype.import = function (data, notify) {\n        if (notify === void 0) { notify = true; }\n        this.clear();\n        this.drawflow = JSON.parse(JSON.stringify(data));\n        this.load();\n        if (notify) {\n            this.dispatch(\"import\", \"import\");\n        }\n    };\n    Drawflow.prototype.on = function (event, callback) {\n        // Check if the callback is not a function\n        if (typeof callback !== \"function\") {\n            console.error(\"The listener callback must be a function, the given type is \".concat(typeof callback));\n            return false;\n        }\n        // Check if the event is not a string\n        if (typeof event !== \"string\") {\n            console.error(\"The event name must be a string, the given type is \".concat(typeof event));\n            return false;\n        }\n        // Check if this event not exists\n        if (this.events[event] === undefined) {\n            this.events[event] = {\n                listeners: [],\n            };\n        }\n        this.events[event].listeners.push(callback);\n        return true;\n    };\n    Drawflow.prototype.removeListener = function (event, callback) {\n        // Check if this event not exists\n        if (!this.events[event])\n            return false;\n        var listeners = this.events[event].listeners;\n        var listenerIndex = listeners.indexOf(callback);\n        var hasListener = listenerIndex > -1;\n        if (hasListener)\n            listeners.splice(listenerIndex, 1);\n        return hasListener;\n    };\n    Drawflow.prototype.dispatch = function (event, details) {\n        // Check if this event not exists\n        if (this.events[event] === undefined) {\n            // console.error(`This event: ${event} does not exist`);\n            return false;\n        }\n        this.events[event].listeners.forEach(function (listener) {\n            listener(details);\n        });\n        return true;\n    };\n    Drawflow.prototype.getUuid = function () {\n        // http://www.ietf.org/rfc/rfc4122.txt\n        var s = [];\n        var hexDigits = \"0123456789abcdef\";\n        for (var i = 0; i < 36; i++) {\n            s[i] = hexDigits.charAt(Math.floor(Math.random() * 0x10));\n        }\n        s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\n        s[19] = hexDigits.charAt((parseInt(s[19], 16) & 0x3) | 0x8); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n        s[8] = s[13] = s[18] = s[23] = \"-\";\n        var uuid = s.join(\"\");\n        return uuid;\n    };\n    return Drawflow;\n}());\nexport default Drawflow;\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getNodeID","str","slice","getConnectionData","classList","output_id","input_id","output_class","input_class","insertObjectkeys","content","keys","value","completeKey","concat","join","_i","elems_1","querySelectorAll","length","elem","isContentEditable","innerText","callRender","editor","render","type","id","events","event","on","callback","console","error","undefined","listeners","push","removeListener","listenerIndex","indexOf","splice","dispatch","details","forEach","listener","selected","handle","nodeMoved","_a","id1","x","y","nodeSelected","nodeUnselected","nodeUpdated","data","nodeUpdateId","oldId","newId","nodeRemoved","eventName","connectionStart","connection","connectionCreated","connectionRemoved","register","noderegister","Drawflow","container","options","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","precanvas","nodeId","ele_selected","node_selected","drag","drag_point","editor_selected","connection_ele","connection_selected","canvas_x","canvas_y","pos_x","pos_x_start","pos_y","pos_y_start","mouse_x","mouse_y","first_click","drawflow","Home","editor_mode","zoom","zoom_max","zoom_min","zoom_value","zoom_last_value","curvature","reroute","reroute_fix_curvature","reroute_curvature_start_end","reroute_curvature","reroute_width","force_first_input","draggable_inputs","useuuid","evCache","prevDiff","Math","log2","set","pow","refreshZoom","configurable","start","add","tabIndex","document","createElement","appendChild","addEventListener","_dragEnd","bind","_position","_click","_contextmenu","_key","_handleZoom","updateNodeValue","_dblclick","onpointerdown","_handlePointerdown","onpointermove","_handlePointermove","onpointerup","_handlePointerup","onpointercancel","onpointerout","onpointerleave","load","ev","i","pointerId","curDiff","abs","clientX","zoomIn","zoomOut","_removeEvent","_addNodeImport","_addRerouteImport","updateNodeConnections","number","moduleName","moduleData","max","parseInt","unselectConnectionReroutes","parentElement","item","remove","e","clearSelection","target","MouseEvent","button","closest","matches","preventDefault","_contextmenuDel","tagName","hasAttribute","_createConnection","removeNodeId","removeSelectedConnection","contains","TouchEvent","touches","clientY","e_pos_x","e_pos_y","_drawConnectionTo","style","transform","selectedID","dx","dy","left","top","getBoundingClientRect","setAttributeNS","toString","input_id_1","input_class_1","numberPointPosition","Array","from","children","searchConnection","outputs","connections","findIndex","node","output","points","ele_last","elementFromPoint","nodeData","getNodeFromId","inputs","id_input","id_output","input","getElementsByClassName","deletebox","innerHTML","metaKey","ctrlKey","zoomLevel","deltaY","deltaX","min","log","resetZoom","createCurvature","start_pos_x","start_pos_y","end_pos_x","end_pos_y","line_x","line_y","handleSize","ele","createElementNS","path","eX","eY","rect","precanvasRect","width","fromX","fromY","toX","toY","lineCurve","addConnection","nodeOneModule","getModuleFromNodeId","exist","updateConnection","nodeFromElem","nodeToElem","rerouteWidth","nodeFromID","replace","querySelector","nodeToID","getCenter","linecurve","reroute_fix","lastX","lastY","curvature_1","pointX","pointY","leftCurveSegment_1","leftCurveSegment","itempath","connectionInTag","connectionOutTag","nodeElem","connectionsOut_1","connectionsIn_1","createReroutePoint","removeReroutePoint","point","position_add_array_point","numberPoints","insertBefore","search_point","find","numberMainPath","registerNode","name","html","JSON","parse","stringify","getNodesFromName","nodes","map","index","addNode","num_in","num_out","ele_pos_x","ele_pos_y","classoverride","typenode","newNodeId","getUuid","parent","setAttribute","apply","split","json_inputs","json_outputs","cloneNode","json","class","dataNode","input_item","input_connections","output_item","output_connection","isArray","input_class_2","z","changeNodeID","nodeEl","connectionIn","input_node","connectionOut","output_node","el","etarget","attr","attributes","nodeName","startsWith","updateNodeDataFromId","addNodeInput","infoNode","numInputs","addNodeOutput","numOutputs","removeNodeInput","nodeDataRef","removeConnection","input_index","class_this","class_next","connectionFrom","sourceNodeDataRef","connectionTo","removeNodeOutput","output_index","removeNodeConnectionsByNodeId","output_id_1","input_id_2","output_class_1","input_class_3","index_out","index_in","connectionsOut","_loop_1","index_in_1","index_out_1","this_1","connectionsIn","_loop_2","this_2","addModule","changeModule","import","removeModule","clearSelectedModule","hasChildNodes","firstChild","clear","export","dataExport","notify","hasListener","s","hexDigits","charAt","floor","random"],"sourceRoot":""}