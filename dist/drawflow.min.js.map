{"version":3,"file":"drawflow.min.js","mappings":"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","sources":["webpack://Drawflow/webpack/universalModuleDefinition","webpack://Drawflow/webpack/bootstrap","webpack://Drawflow/webpack/runtime/define property getters","webpack://Drawflow/webpack/runtime/hasOwnProperty shorthand","webpack://Drawflow/./src/drawflow.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Drawflow\"] = factory();\n\telse\n\t\troot[\"Drawflow\"] = factory();\n})((typeof self !== 'undefined' ? self : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import \"./drawflow.css\";\nfunction getNodeID(str) {\n    return str.slice(5);\n}\nfunction getConnectionData(classList) {\n    return {\n        output_id: classList[2].slice(14),\n        input_id: classList[1].slice(13),\n        output_class: classList[3],\n        input_class: classList[4],\n    };\n}\nfunction insertObjectkeys(content, obj, keys) {\n    if (keys === void 0) { keys = []; }\n    if (obj === null || typeof obj !== \"object\")\n        return;\n    for (var key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            var value = obj[key];\n            if (typeof value === \"object\" && value !== null) {\n                insertObjectkeys(content, value, [key]);\n            }\n            else {\n                var completeKey = keys.concat(key).join(\"-\");\n                var elems = content.querySelectorAll(\"[df-\" + completeKey + \"]\");\n                for (var i = 0; i < elems.length; i++) {\n                    var elem = elems[i];\n                    if (elem instanceof HTMLInputElement ||\n                        elem instanceof HTMLTextAreaElement ||\n                        elem instanceof HTMLSelectElement) {\n                        elem.value = value.toString();\n                    }\n                    if (elem.isContentEditable) {\n                        elem.innerText = value.toString();\n                    }\n                }\n            }\n        }\n    }\n}\nfunction callRender(editor, render, type, id, content) {\n    var events = {};\n    var event = {\n        on: function (event, callback) {\n            // Check if the callback is not a function\n            if (typeof callback !== \"function\") {\n                console.error(\"The listener callback must be a function, the given type is \".concat(typeof callback));\n                return false;\n            }\n            // Check if the event is not a string\n            if (typeof event !== \"string\") {\n                console.error(\"The event name must be a string, the given type is \".concat(typeof event));\n                return false;\n            }\n            // Check if this event not exists\n            if (events[event] === undefined) {\n                events[event] = {\n                    listeners: [],\n                };\n            }\n            events[event].listeners.push(callback);\n        },\n        removeListener: function (event, callback) {\n            // Check if this event not exists\n            if (!events[event])\n                return false;\n            var listeners = events[event].listeners;\n            var listenerIndex = listeners.indexOf(callback);\n            var hasListener = listenerIndex > -1;\n            if (hasListener)\n                listeners.splice(listenerIndex, 1);\n        },\n        dispatch: function (event, details) {\n            // Check if this event not exists\n            if (events[event] === undefined) {\n                // console.error(`This event: ${event} does not exist`);\n                return false;\n            }\n            events[event].listeners.forEach(function (listener) {\n                listener(details);\n            });\n        },\n    };\n    var selected = false;\n    var handle = {\n        nodeMoved: function (_a) {\n            var id1 = _a.id, x = _a.x, y = _a.y;\n            if (id1 === id) {\n                event.dispatch(\"moved\", { x: x, y: y });\n            }\n        },\n        nodeSelected: function (id1) {\n            if (id1 === id) {\n                event.dispatch(\"selected\", null);\n                selected = true;\n            }\n        },\n        nodeUnselected: function () {\n            if (selected) {\n                event.dispatch(\"unselected\", null);\n            }\n        },\n        nodeUpdated: function (_a) {\n            var id1 = _a.id, data = _a.data;\n            if (id1 === id) {\n                event.dispatch(\"updated\", data);\n            }\n        },\n        nodeUpdateId: function (_a) {\n            var oldId = _a.oldId, newId = _a.newId;\n            if (oldId === id) {\n                id = newId;\n                event.dispatch(\"updatedId\", newId);\n            }\n        },\n        nodeRemoved: function (id1) {\n            if (id1 === id) {\n                for (var eventName in handle) {\n                    var callback = handle[eventName];\n                    editor.removeListener(eventName, callback);\n                }\n                event.dispatch(\"removed\", null);\n            }\n        },\n        connectionStart: function (connection) {\n            if (connection.output_id === id) {\n                event.dispatch(\"connectionStart\", connection);\n            }\n        },\n        connectionCreated: function (connection) {\n            if (connection.output_id === id || connection.input_id === id) {\n                event.dispatch(\"connectionCreated\", connection);\n            }\n        },\n        connectionRemoved: function (connection) {\n            if (connection.output_id === id || connection.input_id === id) {\n                event.dispatch(\"connectionRemoved\", connection);\n            }\n        },\n    };\n    for (var eventName in handle) {\n        var callback = handle[eventName];\n        editor.on(eventName, callback);\n    }\n    render({\n        register: editor.noderegister[type],\n        id: id,\n        type: type,\n        content: content,\n        editor: editor,\n        event: event,\n    });\n}\nvar Drawflow = /** @class */ (function () {\n    function Drawflow(container, options) {\n        if (options === void 0) { options = {}; }\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n        this.container = container;\n        this.events = {};\n        this.precanvas = null;\n        this.nodeId = 1;\n        this.ele_selected = null;\n        this.node_selected = null;\n        this.drag = false;\n        this.drag_point = false;\n        this.editor_selected = false;\n        this.connection = false;\n        this.connection_ele = null;\n        this.connection_selected = null;\n        this.canvas_x = 0;\n        this.canvas_y = 0;\n        this.pos_x = 0;\n        this.pos_x_start = 0;\n        this.pos_y = 0;\n        this.pos_y_start = 0;\n        this.mouse_x = 0;\n        this.mouse_y = 0;\n        this.first_click = null;\n        this.noderegister = {};\n        this.drawflow = { drawflow: { Home: { data: {} } } };\n        // Configurable options\n        this.module = \"Home\";\n        this.editor_mode = \"edit\";\n        this.zoom = 1;\n        this.zoom_max = 2;\n        this.zoom_min = 1 / 10;\n        this.zoom_value = 0.2;\n        this.zoom_last_value = 1;\n        this.curvature = 0.5;\n        this.reroute = false;\n        this.reroute_fix_curvature = false;\n        this.reroute_curvature_start_end = 0.5;\n        this.reroute_curvature = 0.5;\n        this.reroute_width = 6;\n        this.force_first_input = false;\n        this.draggable_inputs = true;\n        this.useuuid = false;\n        // Mobile\n        this.evCache = [];\n        this.prevDiff = -1;\n        this.module = (_a = options.module) !== null && _a !== void 0 ? _a : this.module;\n        this.editor_mode = (_b = options.editor_mode) !== null && _b !== void 0 ? _b : this.editor_mode;\n        this.zoom = (_c = options.zoom) !== null && _c !== void 0 ? _c : this.zoom;\n        this.zoom_max = (_d = options.zoom_max) !== null && _d !== void 0 ? _d : this.zoom_max;\n        this.zoom_min = (_e = options.zoom_min) !== null && _e !== void 0 ? _e : this.zoom_min;\n        this.zoom_value = (_f = options.zoom_value) !== null && _f !== void 0 ? _f : this.zoom_value;\n        this.zoom_last_value = (_g = options.zoom_last_value) !== null && _g !== void 0 ? _g : this.zoom_last_value;\n        this.curvature = (_h = options.curvature) !== null && _h !== void 0 ? _h : this.curvature;\n        this.reroute = (_j = options.reroute) !== null && _j !== void 0 ? _j : this.reroute;\n        this.reroute_fix_curvature =\n            (_k = options.reroute_fix_curvature) !== null && _k !== void 0 ? _k : this.reroute_fix_curvature;\n        this.reroute_curvature_start_end =\n            (_l = options.reroute_curvature_start_end) !== null && _l !== void 0 ? _l : this.reroute_curvature_start_end;\n        this.reroute_curvature =\n            (_m = options.reroute_curvature) !== null && _m !== void 0 ? _m : this.reroute_curvature;\n        this.reroute_width = (_o = options.reroute_width) !== null && _o !== void 0 ? _o : this.reroute_width;\n        this.force_first_input =\n            (_p = options.force_first_input) !== null && _p !== void 0 ? _p : this.force_first_input;\n        this.draggable_inputs = (_q = options.draggable_inputs) !== null && _q !== void 0 ? _q : this.draggable_inputs;\n        this.useuuid = (_r = options.useuuid) !== null && _r !== void 0 ? _r : this.useuuid;\n        this.render = (_s = options.render) !== null && _s !== void 0 ? _s : this.render;\n    }\n    Object.defineProperty(Drawflow.prototype, \"zoomLevel\", {\n        get: function () {\n            return Math.log2(this.zoom);\n        },\n        set: function (value) {\n            this.zoom = Math.pow(2, value);\n            this.refreshZoom();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Drawflow.prototype.start = function () {\n        // console.info(\"Start Drawflow!!\");\n        this.container.classList.add(\"parent-drawflow\");\n        this.container.tabIndex = 0;\n        this.precanvas = document.createElement(\"div\");\n        this.precanvas.classList.add(\"drawflow\");\n        this.container.appendChild(this.precanvas);\n        /* Mouse and Touch Actions */\n        this.container.addEventListener(\"mouseup\", this._dragEnd.bind(this));\n        this.container.addEventListener(\"mousemove\", this._position.bind(this));\n        this.container.addEventListener(\"mousedown\", this._click.bind(this));\n        this.container.addEventListener(\"touchend\", this._dragEnd.bind(this));\n        this.container.addEventListener(\"touchmove\", this._position.bind(this));\n        this.container.addEventListener(\"touchstart\", this._click.bind(this));\n        /* Context Menu */\n        this.container.addEventListener(\"contextmenu\", this._contextmenu.bind(this));\n        /* Delete */\n        this.container.addEventListener(\"keydown\", this._key.bind(this));\n        /* Zoom Mouse */\n        this.container.addEventListener(\"wheel\", this._handleZoom.bind(this));\n        /* Update data Nodes */\n        this.container.addEventListener(\"input\", this.updateNodeValue.bind(this));\n        this.container.addEventListener(\"dblclick\", this._dblclick.bind(this));\n        /* Mobile zoom */\n        this.container.onpointerdown = this._handlePointerdown.bind(this);\n        this.container.onpointermove = this._handlePointermove.bind(this);\n        this.container.onpointerup = this._handlePointerup.bind(this);\n        this.container.onpointercancel = this._handlePointerup.bind(this);\n        this.container.onpointerout = this._handlePointerup.bind(this);\n        this.container.onpointerleave = this._handlePointerup.bind(this);\n        this.load();\n    };\n    /* Mobile zoom */\n    Drawflow.prototype._handlePointerdown = function (ev) {\n        this.evCache.push(ev);\n    };\n    Drawflow.prototype._handlePointermove = function (ev) {\n        for (var i = 0; i < this.evCache.length; i++) {\n            if (ev.pointerId == this.evCache[i].pointerId) {\n                this.evCache[i] = ev;\n                break;\n            }\n        }\n        if (this.evCache.length == 2) {\n            // Calculate the distance between the two pointers\n            var curDiff = Math.abs(this.evCache[0].clientX - this.evCache[1].clientX);\n            if (this.prevDiff > 100) {\n                if (curDiff > this.prevDiff) {\n                    // The distance between the two pointers has increased\n                    this.zoomIn();\n                }\n                if (curDiff < this.prevDiff) {\n                    // The distance between the two pointers has decreased\n                    this.zoomOut();\n                }\n            }\n            this.prevDiff = curDiff;\n        }\n    };\n    Drawflow.prototype._handlePointerup = function (ev) {\n        this._removeEvent(ev);\n        if (this.evCache.length < 2) {\n            this.prevDiff = -1;\n        }\n    };\n    Drawflow.prototype._removeEvent = function (ev) {\n        // Remove this event from the target's cache\n        for (var i = this.evCache.length - 1; i >= 0; i--) {\n            if (this.evCache[i].pointerId == ev.pointerId) {\n                this.evCache.splice(i, 1);\n                break;\n            }\n        }\n    };\n    /* End Mobile Zoom */\n    Drawflow.prototype.load = function () {\n        for (var key in this.drawflow.drawflow[this.module].data) {\n            this._addNodeImport(this.drawflow.drawflow[this.module].data[key], this.precanvas);\n        }\n        if (this.reroute) {\n            for (var key in this.drawflow.drawflow[this.module].data) {\n                this._addRerouteImport(this.drawflow.drawflow[this.module].data[key]);\n            }\n        }\n        for (var key in this.drawflow.drawflow[this.module].data) {\n            this.updateNodeConnections(\"node-\" + key);\n        }\n        var editor = this.drawflow.drawflow;\n        var number = 1;\n        for (var moduleName in editor) {\n            if (Object.hasOwnProperty.call(editor, moduleName)) {\n                var moduleData = editor[moduleName].data;\n                for (var id in moduleData) {\n                    if (Object.hasOwnProperty.call(moduleData, id)) {\n                        number = Math.max(number, parseInt(id) + 1);\n                    }\n                }\n            }\n        }\n        this.nodeId = number;\n    };\n    Drawflow.prototype.unselectConnectionReroutes = function () {\n        this.dispatch(\"connectionUnselected\", true);\n        if (this.reroute_fix_curvature) {\n            this.connection_selected.parentElement\n                .querySelectorAll(\".main-path\")\n                .forEach(function (item) {\n                item.classList.remove(\"selected\");\n            });\n        }\n    };\n    Drawflow.prototype._click = function (e) {\n        var _this = this;\n        var clearSelection = function () {\n            if (_this.node_selected != null) {\n                _this.node_selected.classList.remove(\"selected\");\n                if (_this.node_selected != _this.ele_selected) {\n                    _this.node_selected = null;\n                    _this.dispatch(\"nodeUnselected\", true);\n                }\n            }\n            if (_this.connection_selected != null) {\n                _this.connection_selected.classList.remove(\"selected\");\n                _this.unselectConnectionReroutes();\n                _this.connection_selected = null;\n            }\n        };\n        this.dispatch(\"click\", e);\n        var target = e.target;\n        if (e instanceof MouseEvent && e.button === 1) {\n            this.editor_selected = true;\n        }\n        else if (e instanceof MouseEvent && e.button === 0) {\n            // get selected element\n            if (this.editor_mode === \"fixed\") {\n                if (target.classList[0] === \"parent-drawflow\" ||\n                    target.classList[0] === \"drawflow\") {\n                    this.ele_selected = target.closest(\".parent-drawflow\");\n                }\n                else {\n                    return false;\n                }\n            }\n            else if (this.editor_mode === \"view\") {\n                if (target.closest(\".drawflow\") != null ||\n                    target.matches(\".parent-drawflow\")) {\n                    this.ele_selected = target.closest(\".parent-drawflow\");\n                    e.preventDefault();\n                }\n            }\n            else {\n                this.first_click = target;\n                this.ele_selected = target;\n                if (e.button === 0) {\n                    this._contextmenuDel();\n                }\n                if (target.closest(\".drawflow_content_node\") != null) {\n                    this.ele_selected = target.closest(\".drawflow_content_node\").parentElement;\n                }\n            }\n            switch (this.ele_selected.classList[0]) {\n                case \"drawflow-node\":\n                    clearSelection();\n                    if (this.node_selected != this.ele_selected) {\n                        this.dispatch(\"nodeSelected\", getNodeID(this.ele_selected.id));\n                    }\n                    this.node_selected = this.ele_selected;\n                    this.node_selected.classList.add(\"selected\");\n                    // cancel drag if an input element was clicked on\n                    if (!this.draggable_inputs) {\n                        if (target.tagName !== \"INPUT\" &&\n                            target.tagName !== \"TEXTAREA\" &&\n                            target.tagName !== \"SELECT\" &&\n                            target.hasAttribute(\"contenteditable\") !== true) {\n                            this.drag = true;\n                        }\n                    }\n                    else {\n                        if (target.tagName !== \"SELECT\") {\n                            this.drag = true;\n                        }\n                    }\n                    break;\n                case \"output\":\n                    this.connection = true;\n                    clearSelection();\n                    this._createConnection(target);\n                    break;\n                case \"drawflow\":\n                    clearSelection();\n                    this.editor_selected = e.type === \"touchstart\";\n                    break;\n                case \"main-path\":\n                    clearSelection();\n                    this.connection_selected = this.ele_selected;\n                    this.connection_selected.classList.add(\"selected\");\n                    this.dispatch(\"connectionSelected\", getConnectionData(this.connection_selected.parentElement.classList));\n                    if (this.reroute_fix_curvature) {\n                        this.connection_selected.parentElement\n                            .querySelectorAll(\".main-path\")\n                            .forEach(function (item) {\n                            item.classList.add(\"selected\");\n                        });\n                    }\n                    break;\n                case \"point\":\n                    this.drag_point = true;\n                    this.ele_selected.classList.add(\"selected\");\n                    break;\n                case \"drawflow-delete\":\n                    if (this.node_selected) {\n                        this.removeNodeId(this.node_selected.id);\n                    }\n                    if (this.connection_selected) {\n                        this.removeSelectedConnection();\n                    }\n                    clearSelection();\n                    break;\n                default:\n                    break;\n            }\n            if (this.ele_selected.classList.contains(\"parent-drawflow\")) {\n                clearSelection();\n                this.editor_selected = e.type === \"touchstart\";\n            }\n        }\n        if (e instanceof TouchEvent) {\n            this.pos_x = e.touches[0].clientX;\n            this.pos_x_start = e.touches[0].clientX;\n            this.pos_y = e.touches[0].clientY;\n            this.pos_y_start = e.touches[0].clientY;\n        }\n        else {\n            this.pos_x = e.clientX;\n            this.pos_x_start = e.clientX;\n            this.pos_y = e.clientY;\n            this.pos_y_start = e.clientY;\n        }\n        this.dispatch(\"clickEnd\", e);\n    };\n    Drawflow.prototype._position = function (e) {\n        var e_pos_x, e_pos_y;\n        if (e instanceof TouchEvent) {\n            e_pos_x = e.touches[0].clientX;\n            e_pos_y = e.touches[0].clientY;\n        }\n        else {\n            e_pos_x = e.clientX;\n            e_pos_y = e.clientY;\n        }\n        if (this.connection) {\n            this._drawConnectionTo(e_pos_x, e_pos_y);\n        }\n        if (this.editor_selected) {\n            var x = this.canvas_x - this.pos_x + e_pos_x;\n            var y = this.canvas_y - this.pos_y + e_pos_y;\n            this.dispatch(\"translate\", { x: x, y: y });\n            this.precanvas.style.transform =\n                \"translate(\" + x + \"px, \" + y + \"px) scale(\" + this.zoom + \")\";\n        }\n        if (this.drag) {\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            var selectedID = getNodeID(this.ele_selected.id);\n            var dx = (this.pos_x - e_pos_x) / this.zoom;\n            var dy = (this.pos_y - e_pos_y) / this.zoom;\n            this.pos_x = e_pos_x;\n            this.pos_y = e_pos_y;\n            moduleData[selectedID].pos_x -= dx;\n            moduleData[selectedID].pos_y -= dy;\n            this.ele_selected.style.left = moduleData[selectedID].pos_x + \"px\";\n            this.ele_selected.style.top = moduleData[selectedID].pos_y + \"px\";\n            this.updateNodeConnections(this.ele_selected.id);\n        }\n        if (this.drag_point) {\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            this.pos_x = e_pos_x;\n            this.pos_y = e_pos_y;\n            var pos_x = (this.pos_x - this.precanvas.getBoundingClientRect().x) / this.zoom;\n            var pos_y = (this.pos_y - this.precanvas.getBoundingClientRect().y) / this.zoom;\n            this.ele_selected.setAttributeNS(null, \"cx\", pos_x.toString());\n            this.ele_selected.setAttributeNS(null, \"cy\", pos_y.toString());\n            var _a = getConnectionData(this.ele_selected.parentElement.classList), output_id = _a.output_id, input_id_1 = _a.input_id, output_class = _a.output_class, input_class_1 = _a.input_class;\n            var numberPointPosition = Array.from(this.ele_selected.parentElement.children).indexOf(this.ele_selected) - 1;\n            if (this.reroute_fix_curvature) {\n                var numberMainPath = this.ele_selected.parentElement.querySelectorAll(\".main-path\")\n                    .length - 1;\n                numberPointPosition -= numberMainPath;\n                if (numberPointPosition < 0) {\n                    numberPointPosition = 0;\n                }\n            }\n            var searchConnection = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) { return item.node === input_id_1 && item.output === input_class_1; });\n            moduleData[output_id].outputs[output_class].connections[searchConnection].points[numberPointPosition] = {\n                pos_x: pos_x,\n                pos_y: pos_y,\n            };\n            this.updateNodeConnections(\"node-\".concat(output_id));\n        }\n        if (e.type === \"touchmove\") {\n            this.mouse_x = e_pos_x;\n            this.mouse_y = e_pos_y;\n        }\n        this.dispatch(\"mouseMove\", { x: e_pos_x, y: e_pos_y });\n    };\n    Drawflow.prototype._dragEnd = function (e) {\n        var e_pos_x;\n        var e_pos_y;\n        var ele_last;\n        if (e instanceof TouchEvent) {\n            e_pos_x = this.mouse_x;\n            e_pos_y = this.mouse_y;\n            ele_last = document.elementFromPoint(e_pos_x, e_pos_y);\n        }\n        else {\n            e_pos_x = e.clientX;\n            e_pos_y = e.clientY;\n            ele_last = e.target;\n        }\n        if (this.drag) {\n            if (this.pos_x_start != e_pos_x || this.pos_y_start != e_pos_y) {\n                var id = getNodeID(this.ele_selected.id);\n                var nodeData = this.getNodeFromId(id);\n                this.dispatch(\"nodeMoved\", {\n                    id: id,\n                    x: nodeData.pos_x,\n                    y: nodeData.pos_y,\n                });\n            }\n        }\n        if (this.drag_point) {\n            this.ele_selected.classList.remove(\"selected\");\n            if (this.pos_x_start != e_pos_x || this.pos_y_start != e_pos_y) {\n                this.dispatch(\"rerouteMoved\", getConnectionData(this.ele_selected.parentElement.classList).output_id);\n            }\n        }\n        if (this.editor_selected) {\n            this.canvas_x = this.canvas_x + -(this.pos_x - e_pos_x);\n            this.canvas_y = this.canvas_y + -(this.pos_y - e_pos_y);\n            this.editor_selected = false;\n        }\n        if (this.connection === true) {\n            if (ele_last.classList[0] === \"input\" ||\n                (this.force_first_input &&\n                    (ele_last.closest(\".drawflow_content_node\") != null ||\n                        ele_last.classList[0] === \"drawflow-node\"))) {\n                var input_id = void 0, input_class = void 0;\n                if (this.force_first_input &&\n                    (ele_last.closest(\".drawflow_content_node\") != null ||\n                        ele_last.classList[0] === \"drawflow-node\")) {\n                    if (ele_last.closest(\".drawflow_content_node\") != null) {\n                        input_id = ele_last.closest(\".drawflow_content_node\").parentElement\n                            .id;\n                    }\n                    else {\n                        input_id = ele_last.id;\n                    }\n                    if (Object.keys(this.getNodeFromId(getNodeID(input_id)).inputs)\n                        .length === 0) {\n                        input_class = \"\";\n                    }\n                    else {\n                        input_class = \"input_1\";\n                    }\n                }\n                else {\n                    // Fix connection;\n                    input_id = ele_last.parentElement.parentElement.id;\n                    input_class = ele_last.classList[1];\n                }\n                var output_id = this.ele_selected.parentElement.parentElement.id;\n                var output_class = this.ele_selected.classList[1];\n                if (output_id !== input_id && input_class) {\n                    if (this.container.querySelectorAll(\".connection.node_in_\" +\n                        input_id +\n                        \".node_out_\" +\n                        output_id +\n                        \".\" +\n                        output_class +\n                        \".\" +\n                        input_class).length === 0) {\n                        // Conection no exist save connection\n                        this.connection_ele.classList.add(\"node_in_\" + input_id);\n                        this.connection_ele.classList.add(\"node_out_\" + output_id);\n                        this.connection_ele.classList.add(output_class);\n                        this.connection_ele.classList.add(input_class);\n                        var id_input = getNodeID(input_id);\n                        var id_output = getNodeID(output_id);\n                        this.drawflow.drawflow[this.module].data[id_output].outputs[output_class].connections.push({ node: id_input, output: input_class });\n                        this.drawflow.drawflow[this.module].data[id_input].inputs[input_class].connections.push({ node: id_output, input: output_class });\n                        this.updateNodeConnections(\"node-\" + id_output);\n                        this.updateNodeConnections(\"node-\" + id_input);\n                        this.dispatch(\"connectionCreated\", {\n                            output_id: id_output,\n                            input_id: id_input,\n                            output_class: output_class,\n                            input_class: input_class,\n                        });\n                    }\n                    else {\n                        this.dispatch(\"connectionCancel\", true);\n                        this.connection_ele.remove();\n                    }\n                    this.connection_ele = null;\n                }\n                else {\n                    // Connection exists Remove Connection;\n                    this.dispatch(\"connectionCancel\", true);\n                    this.connection_ele.remove();\n                    this.connection_ele = null;\n                }\n            }\n            else {\n                // Remove Connection;\n                this.dispatch(\"connectionCancel\", true);\n                this.connection_ele.remove();\n                this.connection_ele = null;\n            }\n        }\n        this.drag = false;\n        this.drag_point = false;\n        this.connection = false;\n        this.ele_selected = null;\n        this.editor_selected = false;\n        this.dispatch(\"mouseUp\", e);\n    };\n    Drawflow.prototype._contextmenu = function (e) {\n        this.dispatch(\"contextmenu\", e);\n        e.preventDefault();\n        if (this.editor_mode === \"fixed\" || this.editor_mode === \"view\") {\n            return false;\n        }\n        if (this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\n            this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\n        }\n        if (this.node_selected || this.connection_selected) {\n            var deletebox = document.createElement(\"div\");\n            deletebox.classList.add(\"drawflow-delete\");\n            deletebox.innerHTML = \"x\";\n            if (this.node_selected) {\n                this.node_selected.appendChild(deletebox);\n            }\n            if (this.connection_selected) {\n                deletebox.style.top =\n                    e.clientY * this.zoom -\n                        this.precanvas.getBoundingClientRect().y * this.zoom +\n                        \"px\";\n                deletebox.style.left =\n                    e.clientX * this.zoom -\n                        this.precanvas.getBoundingClientRect().x * this.zoom +\n                        \"px\";\n                this.precanvas.appendChild(deletebox);\n            }\n        }\n    };\n    Drawflow.prototype._contextmenuDel = function () {\n        if (this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\n            this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\n        }\n    };\n    Drawflow.prototype._key = function (e) {\n        this.dispatch(\"keydown\", e);\n        if (this.editor_mode === \"fixed\" || this.editor_mode === \"view\") {\n            return false;\n        }\n        if (e.key === \"Delete\" || (e.key === \"Backspace\" && e.metaKey)) {\n            if (this.node_selected != null) {\n                if (this.first_click.tagName !== \"INPUT\" &&\n                    this.first_click.tagName !== \"TEXTAREA\" &&\n                    this.first_click.hasAttribute(\"contenteditable\") !== true) {\n                    this.removeNodeId(this.node_selected.id);\n                }\n            }\n            if (this.connection_selected != null) {\n                this.removeSelectedConnection();\n            }\n        }\n    };\n    Drawflow.prototype._handleZoom = function (event) {\n        event.preventDefault();\n        if (event.ctrlKey) {\n            this.zoomLevel -= event.deltaY / 100;\n        }\n        else {\n            this.canvas_x -= event.deltaX;\n            this.canvas_y -= event.deltaY;\n            this.dispatch(\"translate\", { x: this.canvas_x, y: this.canvas_y });\n            this.precanvas.style.transform =\n                \"translate(\" +\n                    this.canvas_x +\n                    \"px, \" +\n                    this.canvas_y +\n                    \"px) scale(\" +\n                    this.zoom +\n                    \")\";\n        }\n    };\n    Drawflow.prototype.refreshZoom = function () {\n        this.zoom = Math.min(Math.max(this.zoom_min, this.zoom), this.zoom_max);\n        this.dispatch(\"zoom\", this.zoom);\n        this.canvas_x = (this.canvas_x / this.zoom_last_value) * this.zoom;\n        this.canvas_y = (this.canvas_y / this.zoom_last_value) * this.zoom;\n        this.zoom_last_value = this.zoom;\n        this.precanvas.style.transform =\n            \"translate(\" +\n                this.canvas_x +\n                \"px, \" +\n                this.canvas_y +\n                \"px) scale(\" +\n                this.zoom +\n                \")\";\n    };\n    Drawflow.prototype.zoomIn = function (value) {\n        if (value === void 0) { value = this.zoom_value; }\n        this.zoomLevel += value;\n    };\n    Drawflow.prototype.zoomOut = function (value) {\n        if (value === void 0) { value = this.zoom_value; }\n        this.zoomLevel -= value;\n    };\n    Drawflow.prototype.resetZoom = function () {\n        if (this.zoom != 1) {\n            this.zoom = 1;\n            this.refreshZoom();\n        }\n    };\n    Drawflow.prototype.createCurvature = function (start_pos_x, start_pos_y, end_pos_x, end_pos_y, curvature) {\n        var line_x = start_pos_x;\n        var line_y = start_pos_y;\n        var x = end_pos_x;\n        var y = end_pos_y;\n        var handleSize = Math.abs(x - line_x) * curvature;\n        return (\"M\" +\n            [line_x, line_y].join() +\n            \"C\" +\n            [line_x + handleSize, line_y, x - handleSize, y, x, y].join());\n    };\n    Drawflow.prototype._createConnection = function (ele) {\n        var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        this.connection_ele = connection;\n        var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path.classList.add(\"main-path\");\n        path.setAttributeNS(null, \"d\", \"\");\n        // path.innerHTML = 'a';\n        connection.classList.add(\"connection\");\n        connection.appendChild(path);\n        this.precanvas.appendChild(connection);\n        var id_output = getNodeID(ele.parentElement.parentElement.id);\n        var output_class = ele.classList[1];\n        this.dispatch(\"connectionStart\", {\n            output_id: id_output,\n            output_class: output_class,\n        });\n    };\n    Drawflow.prototype._drawConnectionTo = function (eX, eY) {\n        var precanvas = this.precanvas;\n        var zoom = this.zoom;\n        var precanvasRect = precanvas.getBoundingClientRect();\n        var path = this.connection_ele.children[0];\n        function getCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x + rect.width / 2) / zoom,\n                (rect.y - precanvasRect.y + rect.width / 2) / zoom,\n            ];\n        }\n        var _a = getCenter(this.ele_selected), fromX = _a[0], fromY = _a[1];\n        var toX = (eX - this.precanvas.getBoundingClientRect().x) / zoom;\n        var toY = (eY - this.precanvas.getBoundingClientRect().y) / zoom;\n        var curvature = this.curvature;\n        var lineCurve = this.createCurvature(fromX, fromY, toX, toY, curvature);\n        path.setAttributeNS(null, \"d\", lineCurve);\n    };\n    Drawflow.prototype.addConnection = function (id_output, id_input, output_class, input_class) {\n        var nodeOneModule = this.getModuleFromNodeId(id_output);\n        var nodeTwoModule = this.getModuleFromNodeId(id_input);\n        if (nodeOneModule !== nodeTwoModule) {\n            return;\n        }\n        var dataNode = this.getNodeFromId(id_output);\n        var exist = false;\n        for (var _i = 0, _a = dataNode.outputs[output_class].connections; _i < _a.length; _i++) {\n            var output = _a[_i];\n            if (output.node == id_input && output.output == input_class) {\n                exist = true;\n            }\n        }\n        // Check connection exist\n        if (!exist) {\n            var moduleData = this.drawflow.drawflow[nodeOneModule].data;\n            //Create Connection\n            moduleData[id_output].outputs[output_class].connections.push({\n                node: id_input.toString(),\n                output: input_class,\n            });\n            moduleData[id_input].inputs[input_class].connections.push({\n                node: id_output.toString(),\n                input: output_class,\n            });\n            if (this.module === nodeOneModule) {\n                //Draw connection\n                var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                path.classList.add(\"main-path\");\n                path.setAttributeNS(null, \"d\", \"\");\n                // path.innerHTML = 'a';\n                connection.classList.add(\"connection\");\n                connection.classList.add(\"node_in_node-\" + id_input);\n                connection.classList.add(\"node_out_node-\" + id_output);\n                connection.classList.add(output_class);\n                connection.classList.add(input_class);\n                connection.appendChild(path);\n                this.precanvas.appendChild(connection);\n                this.updateNodeConnections(\"node-\" + id_output);\n                this.updateNodeConnections(\"node-\" + id_input);\n            }\n            this.dispatch(\"connectionCreated\", {\n                output_id: id_output,\n                input_id: id_input,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        }\n    };\n    Drawflow.prototype.updateConnection = function (connection, nodeFromElem, nodeToElem) {\n        var container = this.container;\n        var precanvas = this.precanvas;\n        var curvature = this.curvature;\n        var createCurvature = this.createCurvature;\n        var reroute_curvature = this.reroute_curvature;\n        var reroute_curvature_start_end = this.reroute_curvature_start_end;\n        var reroute_fix_curvature = this.reroute_fix_curvature;\n        var rerouteWidth = this.reroute_width;\n        var zoom = this.zoom;\n        if (!nodeFromElem) {\n            var nodeFromID = connection.classList[2].replace(\"node_out_\", \"\");\n            nodeFromElem = container.querySelector(\"#\".concat(nodeFromID));\n        }\n        if (!nodeToElem) {\n            var nodeToID = connection.classList[1].replace(\"node_in_\", \"\");\n            nodeToElem = container.querySelector(\"#\".concat(nodeToID));\n        }\n        if (!nodeFromElem || !nodeToElem) {\n            return;\n        }\n        var precanvasRect = precanvas.getBoundingClientRect();\n        function getCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x + rect.width / 2) / zoom,\n                (rect.y - precanvasRect.y + rect.width / 2) / zoom,\n            ];\n        }\n        function getRerouteCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x) / zoom + rerouteWidth,\n                (rect.y - precanvasRect.y) / zoom + rerouteWidth,\n            ];\n        }\n        var outputElem = nodeFromElem.querySelector(\".\" + connection.classList[3]);\n        var _a = getCenter(outputElem), fromX = _a[0], fromY = _a[1];\n        var inputElem = nodeToElem.querySelector(\".\" + connection.classList[4]);\n        var _b = getCenter(inputElem), toX = _b[0], toY = _b[1];\n        var points = connection.querySelectorAll(\".point\");\n        if (points.length === 0) {\n            var lineCurve = createCurvature(fromX, fromY, toX, toY, curvature);\n            connection.children[0].setAttributeNS(null, \"d\", lineCurve);\n        }\n        else {\n            var linecurve = \"\";\n            var reroute_fix = [];\n            var lastX = fromX;\n            var lastY = fromY;\n            var curvature_1 = reroute_curvature_start_end;\n            for (var i = 0; i < points.length; i++) {\n                var pointElem = points[i];\n                var _c = getRerouteCenter(pointElem), pointX = _c[0], pointY = _c[1];\n                var leftCurveSegment_1 = createCurvature(lastX, lastY, pointX, pointY, curvature_1);\n                linecurve += leftCurveSegment_1;\n                reroute_fix.push(leftCurveSegment_1);\n                lastX = pointX;\n                lastY = pointY;\n                curvature_1 = reroute_curvature;\n            }\n            curvature_1 = reroute_curvature_start_end;\n            var leftCurveSegment = createCurvature(lastX, lastY, toX, toY, curvature_1);\n            linecurve += leftCurveSegment;\n            reroute_fix.push(leftCurveSegment);\n            if (reroute_fix_curvature) {\n                reroute_fix.forEach(function (itempath, i) {\n                    connection.children[i].setAttributeNS(null, \"d\", itempath);\n                });\n            }\n            else {\n                connection.children[0].setAttributeNS(null, \"d\", linecurve);\n            }\n        }\n    };\n    Drawflow.prototype.updateNodeConnections = function (id) {\n        var connectionInTag = \"node_in_\" + id;\n        var connectionOutTag = \"node_out_\" + id;\n        var container = this.container;\n        var nodeElem = container.querySelector(\"#node-\".concat(id));\n        var connectionsOut = container.querySelectorAll(\".\".concat(connectionOutTag));\n        for (var i = 0; i < connectionsOut.length; i++) {\n            var connection = connectionsOut[i];\n            this.updateConnection(connection, nodeElem, null);\n        }\n        var connectionsIn = container.querySelectorAll(\".\".concat(connectionInTag));\n        for (var i = 0; i < connectionsIn.length; i++) {\n            var connection = connectionsIn[i];\n            this.updateConnection(connection, null, nodeElem);\n        }\n    };\n    Drawflow.prototype._dblclick = function (e) {\n        if (this.connection_selected != null && this.reroute) {\n            this.createReroutePoint(this.connection_selected);\n        }\n        if (e.target.classList[0] === \"point\") {\n            this.removeReroutePoint(e.target);\n        }\n    };\n    Drawflow.prototype.createReroutePoint = function (ele) {\n        this.connection_selected.classList.remove(\"selected\");\n        var _a = getConnectionData(this.connection_selected.parentElement.classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n        this.connection_selected = null;\n        var point = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        point.classList.add(\"point\");\n        var pos_x = (this.pos_x - this.precanvas.getBoundingClientRect().x) * this.zoom;\n        var pos_y = (this.pos_y - this.precanvas.getBoundingClientRect().y) * this.zoom;\n        point.setAttributeNS(null, \"cx\", pos_x.toString());\n        point.setAttributeNS(null, \"cy\", pos_y.toString());\n        point.setAttributeNS(null, \"r\", this.reroute_width.toString());\n        var position_add_array_point = 0;\n        if (this.reroute_fix_curvature) {\n            var numberPoints = ele.parentElement.querySelectorAll(\".main-path\").length;\n            var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n            path.classList.add(\"main-path\");\n            path.setAttributeNS(null, \"d\", \"\");\n            ele.parentElement.insertBefore(path, ele.parentElement.children[numberPoints]);\n            if (numberPoints === 1) {\n                ele.parentElement.appendChild(point);\n            }\n            else {\n                var search_point = Array.from(ele.parentElement.children).indexOf(ele);\n                position_add_array_point = search_point;\n                ele.parentElement.insertBefore(point, ele.parentElement.children[search_point + numberPoints + 1]);\n            }\n        }\n        else {\n            ele.parentElement.appendChild(point);\n        }\n        var moduleData = this.drawflow.drawflow[this.module].data;\n        var connection = moduleData[output_id].outputs[output_class].connections.find(function (item) {\n            return item.node === input_id && item.output === input_class;\n        });\n        if (connection.points === undefined) {\n            connection.points = [];\n        }\n        if (this.reroute_fix_curvature) {\n            if (position_add_array_point > 0) {\n                connection.points.splice(position_add_array_point, 0, {\n                    pos_x: pos_x,\n                    pos_y: pos_y,\n                });\n            }\n            else {\n                connection.points.push({\n                    pos_x: pos_x,\n                    pos_y: pos_y,\n                });\n            }\n            ele.parentElement\n                .querySelectorAll(\".main-path.selected\")\n                .forEach(function (item) { return item.classList.remove(\"selected\"); });\n        }\n        else {\n            connection.points.push({\n                pos_x: pos_x,\n                pos_y: pos_y,\n            });\n        }\n        this.dispatch(\"addReroute\", output_id);\n        this.updateConnection(ele.parentElement);\n    };\n    Drawflow.prototype.removeReroutePoint = function (ele) {\n        var _a = getConnectionData(ele.parentElement.classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n        var numberPointPosition = Array.from(ele.parentElement.children).indexOf(ele) - 1;\n        var searchConnection = this.drawflow.drawflow[this.module].data[output_id].outputs[output_class].connections.findIndex(function (item) { return item.node === input_id && item.output === input_class; });\n        if (this.reroute_fix_curvature) {\n            var numberMainPath = ele.parentElement.querySelectorAll(\".main-path\").length;\n            ele.parentElement.children[numberMainPath - 1].remove();\n            numberPointPosition -= numberMainPath;\n            if (numberPointPosition < 0) {\n                numberPointPosition = 0;\n            }\n        }\n        this.drawflow.drawflow[this.module].data[output_id].outputs[output_class].connections[searchConnection].points.splice(numberPointPosition, 1);\n        ele.remove();\n        this.dispatch(\"removeReroute\", output_id);\n        this.updateNodeConnections(\"node-\".concat(output_id));\n    };\n    Drawflow.prototype.registerNode = function (name, html) {\n        this.noderegister[name] = html;\n    };\n    Drawflow.prototype.getNodeFromId = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        if (!moduleName)\n            return;\n        return JSON.parse(JSON.stringify(this.drawflow.drawflow[moduleName].data[id]));\n    };\n    Drawflow.prototype.getNodesFromName = function (name) {\n        var nodes = [];\n        var editor = this.drawflow.drawflow;\n        Object.keys(editor).map(function (moduleName) {\n            for (var node in editor[moduleName].data) {\n                if (editor[moduleName].data[node].name == name) {\n                    nodes.push(editor[moduleName].data[node].id);\n                }\n            }\n        });\n        return nodes;\n    };\n    Drawflow.prototype.addNode = function (name, num_in, num_out, ele_pos_x, ele_pos_y, classoverride, data, html, typenode) {\n        var _a;\n        var _b;\n        if (typenode === void 0) { typenode = false; }\n        var newNodeId;\n        if (this.useuuid) {\n            newNodeId = this.getUuid();\n        }\n        else {\n            newNodeId = this.nodeId.toString();\n        }\n        var parent = document.createElement(\"div\");\n        parent.classList.add(\"parent-node\");\n        var node = document.createElement(\"div\");\n        node.setAttribute(\"id\", \"node-\" + newNodeId);\n        node.classList.add(\"drawflow-node\");\n        if (classoverride) {\n            (_a = node.classList).add.apply(_a, classoverride.split(\" \"));\n        }\n        var inputs = document.createElement(\"div\");\n        inputs.classList.add(\"inputs\");\n        var outputs = document.createElement(\"div\");\n        outputs.classList.add(\"outputs\");\n        var json_inputs = {};\n        for (var x = 0; x < num_in; x++) {\n            var input = document.createElement(\"div\");\n            input.classList.add(\"input\");\n            input.classList.add(\"input_\" + (x + 1));\n            json_inputs[\"input_\" + (x + 1)] = { connections: [] };\n            inputs.appendChild(input);\n        }\n        var json_outputs = {};\n        for (var x = 0; x < num_out; x++) {\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (x + 1));\n            json_outputs[\"output_\" + (x + 1)] = { connections: [] };\n            outputs.appendChild(output);\n        }\n        var content = document.createElement(\"div\");\n        content.classList.add(\"drawflow_content_node\");\n        if (typenode === false) {\n            content.innerHTML = html;\n        }\n        else if (typenode === true) {\n            content.appendChild((_b = this.noderegister[html]) === null || _b === void 0 ? void 0 : _b.cloneNode(true));\n        }\n        else if (typeof typenode === \"function\") {\n            callRender(this, typenode, html, newNodeId, content);\n        }\n        else {\n            callRender(this, this.render, html, newNodeId, content);\n        }\n        insertObjectkeys(content, data);\n        node.style.top = ele_pos_y + \"px\";\n        node.style.left = ele_pos_x + \"px\";\n        node.appendChild(inputs);\n        node.appendChild(content);\n        node.appendChild(outputs);\n        parent.appendChild(node);\n        this.precanvas.appendChild(parent);\n        var json = {\n            id: newNodeId,\n            name: name,\n            data: (function convert(data, first) {\n                if (first === void 0) { first = true; }\n                if (data === null ||\n                    data === undefined ||\n                    (typeof data !== \"object\" && first))\n                    return {};\n                if (typeof data === \"object\" && !Array.isArray(data))\n                    return convert(data, false);\n                return data.toString();\n            })(data),\n            class: classoverride,\n            html: html,\n            typenode: typenode,\n            inputs: json_inputs,\n            outputs: json_outputs,\n            pos_x: ele_pos_x,\n            pos_y: ele_pos_y,\n        };\n        this.drawflow.drawflow[this.module].data[newNodeId] = json;\n        this.dispatch(\"nodeCreated\", newNodeId);\n        if (!this.useuuid) {\n            this.nodeId++;\n        }\n        return newNodeId;\n    };\n    Drawflow.prototype._addNodeImport = function (dataNode, precanvas) {\n        var _a;\n        dataNode.id = dataNode.id.toString();\n        var parent = document.createElement(\"div\");\n        parent.classList.add(\"parent-node\");\n        var node = document.createElement(\"div\");\n        node.setAttribute(\"id\", \"node-\" + dataNode.id);\n        node.classList.add(\"drawflow-node\");\n        if (dataNode.class) {\n            (_a = node.classList).add.apply(_a, dataNode.class.split(\" \"));\n        }\n        var inputs = document.createElement(\"div\");\n        inputs.classList.add(\"inputs\");\n        var outputs = document.createElement(\"div\");\n        outputs.classList.add(\"outputs\");\n        for (var input_item in dataNode.inputs) {\n            if (Object.hasOwnProperty.call(dataNode.inputs, input_item)) {\n                var input_connections = dataNode.inputs[input_item].connections;\n                var input = document.createElement(\"div\");\n                input.classList.add(\"input\");\n                input.classList.add(input_item);\n                inputs.appendChild(input);\n                for (var output_item in input_connections) {\n                    if (Object.hasOwnProperty.call(input_connections, output_item)) {\n                        var output_connection = input_connections[output_item];\n                        output_connection.node = output_connection.node.toString();\n                        var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                        var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                        path.classList.add(\"main-path\");\n                        path.setAttributeNS(null, \"d\", \"\");\n                        // path.innerHTML = 'a';\n                        connection.classList.add(\"connection\");\n                        connection.classList.add(\"node_in_node-\" + dataNode.id);\n                        connection.classList.add(\"node_out_node-\" + output_connection.node);\n                        connection.classList.add(output_connection.input);\n                        connection.classList.add(input_item);\n                        connection.appendChild(path);\n                        precanvas.appendChild(connection);\n                    }\n                }\n            }\n        }\n        for (var x = 0; x < Object.keys(dataNode.outputs).length; x++) {\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (x + 1));\n            outputs.appendChild(output);\n        }\n        var content = document.createElement(\"div\");\n        content.classList.add(\"drawflow_content_node\");\n        if (dataNode.typenode === false) {\n            content.innerHTML = dataNode.html;\n        }\n        else if (dataNode.typenode === true) {\n            content.appendChild(this.noderegister[dataNode.html].cloneNode(true));\n        }\n        else if (typeof dataNode.typenode === \"function\") {\n            callRender(this, dataNode.typenode, dataNode.html, dataNode.id, content);\n        }\n        else {\n            callRender(this, this.render, dataNode.html, dataNode.id, content);\n        }\n        insertObjectkeys(content, dataNode.data);\n        node.style.top = dataNode.pos_y + \"px\";\n        node.style.left = dataNode.pos_x + \"px\";\n        node.appendChild(inputs);\n        node.appendChild(content);\n        node.appendChild(outputs);\n        parent.appendChild(node);\n        this.precanvas.appendChild(parent);\n    };\n    Drawflow.prototype._addRerouteImport = function (dataNode) {\n        var reroute_width = this.reroute_width;\n        var reroute_fix_curvature = this.reroute_fix_curvature;\n        var container = this.container;\n        for (var output_class in dataNode.outputs) {\n            if (Object.prototype.hasOwnProperty.call(dataNode.outputs, output_class)) {\n                var output_item = dataNode.outputs[output_class];\n                for (var input_class in output_item.connections) {\n                    if (Object.prototype.hasOwnProperty.call(output_item.connections, input_class)) {\n                        var input_item = output_item.connections[input_class];\n                        var points = input_item.points;\n                        if (Array.isArray(input_item.points)) {\n                            var input_id = input_item.node;\n                            var input_class_2 = input_item.output;\n                            var ele = container.querySelector(\".connection.node_in_node-\" +\n                                input_id +\n                                \".node_out_node-\" +\n                                dataNode.id +\n                                \".\" +\n                                output_item +\n                                \".\" +\n                                input_class_2);\n                            if (reroute_fix_curvature) {\n                                for (var z = 0; z < points.length; z++) {\n                                    var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                                    path.classList.add(\"main-path\");\n                                    path.setAttributeNS(null, \"d\", \"\");\n                                    ele.appendChild(path);\n                                }\n                            }\n                            for (var _i = 0, _a = input_item.points; _i < _a.length; _i++) {\n                                var item = _a[_i];\n                                var point = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n                                point.classList.add(\"point\");\n                                point.setAttributeNS(null, \"cx\", item.pos_x.toString());\n                                point.setAttributeNS(null, \"cy\", item.pos_y.toString());\n                                point.setAttributeNS(null, \"r\", reroute_width.toString());\n                                ele.appendChild(point);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Drawflow.prototype.changeNodeID = function (oldId, newId) {\n        var moduleName = this.getModuleFromNodeId(oldId);\n        if (!moduleName)\n            return false;\n        var moduleData = this.drawflow.drawflow[moduleName].data;\n        var node = moduleData[oldId];\n        if (this.getNodeFromId(newId) || oldId === newId)\n            return false;\n        delete moduleData[oldId];\n        moduleData[newId] = node;\n        node.id = newId;\n        var nodeEl = this.precanvas.querySelector(\"#node-\".concat(oldId));\n        nodeEl.id = \"node-\".concat(newId);\n        for (var input_class in node.inputs) {\n            var input = node.inputs[input_class];\n            for (var _i = 0, _a = input.connections; _i < _a.length; _i++) {\n                var connectionIn = _a[_i];\n                var input_node = this.getNodeFromId(connectionIn.node);\n                for (var output_class in input_node.outputs) {\n                    var output = input_node.outputs[output_class];\n                    for (var _b = 0, _c = output.connections; _b < _c.length; _b++) {\n                        var connection = _c[_b];\n                        if (connection.node === oldId &&\n                            connection.output === input_class) {\n                            connection.node = newId;\n                        }\n                    }\n                }\n            }\n        }\n        for (var output_class in node.outputs) {\n            var output = node.outputs[output_class];\n            for (var _d = 0, _e = output.connections; _d < _e.length; _d++) {\n                var connectionOut = _e[_d];\n                var output_node = this.getNodeFromId(connectionOut.node);\n                for (var input_class in output_node.inputs) {\n                    var input = output_node.inputs[input_class];\n                    for (var _f = 0, _g = input.connections; _f < _g.length; _f++) {\n                        var connection = _g[_f];\n                        if (connection.node === oldId &&\n                            connection.input === output_class) {\n                            connection.node = newId;\n                        }\n                    }\n                }\n            }\n        }\n        var connectionEls = this.precanvas.querySelectorAll(\".node_in_node-\".concat(oldId, \",.node_out_node-\").concat(newId));\n        connectionEls.forEach(function (el) {\n            el.classList.replace(\".node_in_node-\".concat(oldId), \".node_in_node-\".concat(newId));\n            el.classList.replace(\".node_out_node-\".concat(oldId), \".node_out_node-\".concat(newId));\n        });\n        this.dispatch(\"updateNodeId\", { oldId: oldId, newId: node.id });\n        return true;\n    };\n    Drawflow.prototype.updateNodeValue = function (event) {\n        var etarget = event.target;\n        var attr = etarget.attributes;\n        for (var i = 0; i < attr.length; i++) {\n            if (attr[i].nodeName.startsWith(\"df-\")) {\n                var keys = attr[i].nodeName.slice(3).split(\"-\");\n                var target = this.drawflow.drawflow[this.module].data[getNodeID(etarget.closest(\".drawflow_content_node\").parentElement.id)].data;\n                for (var index = 0; index < keys.length - 1; index += 1) {\n                    if (target[keys[index]] == null) {\n                        target[keys[index]] = {};\n                    }\n                    target = target[keys[index]];\n                }\n                target[keys[keys.length - 1]] = etarget.value;\n                if (etarget.isContentEditable) {\n                    target[keys[keys.length - 1]] = etarget.innerText;\n                }\n                this.dispatch(\"nodeDataChanged\", getNodeID(etarget.closest(\".drawflow_content_node\").parentElement.id));\n            }\n        }\n    };\n    Drawflow.prototype.updateNodeDataFromId = function (id, data) {\n        var moduleName = this.getModuleFromNodeId(id);\n        this.drawflow.drawflow[moduleName].data[id].data = data;\n        if (this.module === moduleName) {\n            var content = this.container.querySelector(\"#node-\" + id);\n            insertObjectkeys(content, data);\n        }\n    };\n    Drawflow.prototype.addNodeInput = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var infoNode = this.getNodeFromId(id);\n        var numInputs = Object.keys(infoNode.inputs).length;\n        if (this.module === moduleName) {\n            //Draw input\n            var input = document.createElement(\"div\");\n            input.classList.add(\"input\");\n            input.classList.add(\"input_\" + (numInputs + 1));\n            var parent_1 = this.container.querySelector(\"#node-\" + id + \" .inputs\");\n            parent_1.appendChild(input);\n            this.updateNodeConnections(\"node-\" + id);\n        }\n        this.drawflow.drawflow[moduleName].data[id].inputs[\"input_\" + (numInputs + 1)] = { connections: [] };\n    };\n    Drawflow.prototype.addNodeOutput = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var infoNode = this.getNodeFromId(id);\n        var numOutputs = Object.keys(infoNode.outputs).length;\n        if (this.module === moduleName) {\n            //Draw output\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (numOutputs + 1));\n            var parent_2 = this.container.querySelector(\"#node-\" + id + \" .outputs\");\n            parent_2.appendChild(output);\n            this.updateNodeConnections(\"node-\" + id);\n        }\n        this.drawflow.drawflow[moduleName].data[id].outputs[\"output_\" + (numOutputs + 1)] = { connections: [] };\n    };\n    Drawflow.prototype.removeNodeInput = function (id, input_class) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var nodeDataRef = this.drawflow.drawflow[moduleName].data[id];\n        if (this.module === moduleName) {\n            this.container\n                .querySelector(\"#node-\" + id + \" .inputs .input.\" + input_class)\n                .remove();\n        }\n        for (var _i = 0, _a = nodeDataRef.inputs[input_class].connections; _i < _a.length; _i++) {\n            var connection = _a[_i];\n            this.removeConnection(connection.node, id, connection.input, input_class);\n        }\n        // update inputs\n        var input_index = parseInt(input_class.slice(\"input_\".length)) - 1;\n        var num_in = Object.keys(nodeDataRef.inputs).length;\n        for (var i = input_index; i <= num_in; i++) {\n            var class_this = \"input_\" + (i + 1);\n            var class_next = \"input_\" + (i + 2);\n            nodeDataRef.inputs[class_this] = nodeDataRef.inputs[class_next];\n            for (var _b = 0, _c = nodeDataRef.inputs[class_this].connections; _b < _c.length; _b++) {\n                var connectionFrom = _c[_b];\n                var sourceNodeDataRef = this.drawflow.drawflow[moduleName].data[connectionFrom.node];\n                for (var output_class in sourceNodeDataRef.outputs) {\n                    if (Object.prototype.hasOwnProperty.call(sourceNodeDataRef.outputs, output_class)) {\n                        for (var _d = 0, _e = sourceNodeDataRef.outputs[output_class]\n                            .connections; _d < _e.length; _d++) {\n                            var connectionTo = _e[_d];\n                            if (connectionTo.node === id &&\n                                connectionTo.output === class_next) {\n                                connectionTo.output = class_this;\n                                if (this.module === moduleName) {\n                                    var connectionEl = this.container.querySelector(\".connection.node_in_node-\" +\n                                        connectionTo.node +\n                                        \".node_out_node-\" +\n                                        connectionFrom.node +\n                                        \".\" +\n                                        connectionTo.output +\n                                        \".\" +\n                                        connectionFrom.input);\n                                    connectionEl.classList.replace(class_next, class_this);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.module === moduleName) {\n                var input_el = this.container.querySelector(\"#node-\" + id + \" .inputs .input\" + class_next);\n                input_el.classList.replace(class_next, class_this);\n            }\n        }\n        delete nodeDataRef.inputs[\"input_\" + num_in];\n        this.updateNodeConnections(\"node-\" + id);\n    };\n    Drawflow.prototype.removeNodeOutput = function (id, output_class) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var nodeDataRef = this.drawflow.drawflow[moduleName].data[id];\n        if (this.module === moduleName) {\n            this.container\n                .querySelector(\"#node-\" + id + \" .outputs .output.\" + output_class)\n                .remove();\n        }\n        for (var _i = 0, _a = nodeDataRef.outputs[output_class].connections; _i < _a.length; _i++) {\n            var connection = _a[_i];\n            this.removeConnection(connection.node, id, connection.output, output_class);\n        }\n        // update outputs\n        var output_index = parseInt(output_class.slice(\"output_\".length)) - 1;\n        var num_in = Object.keys(nodeDataRef.outputs).length;\n        for (var i = output_index; i <= num_in; i++) {\n            var class_this = \"output_\" + (i + 1);\n            var class_next = \"output_\" + (i + 2);\n            nodeDataRef.outputs[class_this] = nodeDataRef.outputs[class_next];\n            for (var _b = 0, _c = nodeDataRef.outputs[class_this]\n                .connections; _b < _c.length; _b++) {\n                var connectionFrom = _c[_b];\n                var sourceNodeDataRef = this.drawflow.drawflow[moduleName].data[connectionFrom.node];\n                for (var input_class in sourceNodeDataRef.inputs) {\n                    if (Object.prototype.hasOwnProperty.call(sourceNodeDataRef.inputs, input_class)) {\n                        for (var _d = 0, _e = sourceNodeDataRef.inputs[input_class]\n                            .connections; _d < _e.length; _d++) {\n                            var connectionTo = _e[_d];\n                            if (connectionTo.node === id &&\n                                connectionTo.input === class_next) {\n                                connectionTo.input = class_this;\n                                if (this.module === moduleName) {\n                                    var connectionEl = this.container.querySelector(\".connection.node_in_node-\" +\n                                        connectionTo.node +\n                                        \".node_out_node-\" +\n                                        connectionFrom.node +\n                                        \".\" +\n                                        connectionTo.input +\n                                        \".\" +\n                                        connectionFrom.output);\n                                    connectionEl.classList.replace(class_next, class_this);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.module === moduleName) {\n                var output_el = this.container.querySelector(\"#node-\" + id + \" .outputs .output\" + class_next);\n                output_el.classList.replace(class_next, class_this);\n            }\n        }\n        delete nodeDataRef.outputs[\"output_\" + num_in];\n        this.updateNodeConnections(\"node-\" + id);\n    };\n    Drawflow.prototype.removeNodeId = function (id) {\n        this.removeNodeConnectionsByNodeId(id);\n        var moduleName = this.getModuleFromNodeId(getNodeID(id));\n        if (this.module === moduleName) {\n            this.container.querySelector(\"#\".concat(id)).remove();\n        }\n        delete this.drawflow.drawflow[moduleName].data[getNodeID(id)];\n        this.dispatch(\"nodeRemoved\", getNodeID(id));\n    };\n    Drawflow.prototype.removeSelectedConnection = function () {\n        if (this.connection_selected != null) {\n            var elem = this.connection_selected.parentElement;\n            var _a = getConnectionData(elem.classList), output_id_1 = _a.output_id, input_id_2 = _a.input_id, output_class_1 = _a.output_class, input_class_3 = _a.input_class;\n            elem.remove();\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            var index_out = moduleData[output_id_1].outputs[output_class_1].connections.findIndex(function (item) { return item.node === input_id_2 && item.output === input_class_3; });\n            moduleData[output_id_1].outputs[output_class_1].connections.splice(index_out, 1);\n            var index_in = moduleData[input_id_2].inputs[input_class_3].connections.findIndex(function (item) { return item.node === output_id_1 && item.input === output_class_1; });\n            moduleData[input_id_2].inputs[input_class_3].connections.splice(index_in, 1);\n            this.dispatch(\"connectionRemoved\", {\n                output_id: output_id_1,\n                input_id: input_id_2,\n                output_class: output_class_1,\n                input_class: input_class_3,\n            });\n            this.connection_selected = null;\n        }\n    };\n    Drawflow.prototype.removeConnection = function (id_output, id_input, output_class, input_class) {\n        var nodeOneModule = this.getModuleFromNodeId(id_output);\n        var nodeTwoModule = this.getModuleFromNodeId(id_input);\n        if (nodeOneModule === nodeTwoModule) {\n            // Check nodes in same module.\n            // Check connection exist\n            var exists = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function (item) {\n                return item.node == id_input && item.output === input_class;\n            });\n            if (exists > -1) {\n                if (this.module === nodeOneModule) {\n                    // In same module with view.\n                    this.container\n                        .querySelector(\".connection.node_in_node-\" +\n                        id_input +\n                        \".node_out_node-\" +\n                        id_output +\n                        \".\" +\n                        output_class +\n                        \".\" +\n                        input_class)\n                        .remove();\n                }\n                var index_out = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function (item) {\n                    return item.node == id_input && item.output === input_class;\n                });\n                this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.splice(index_out, 1);\n                var index_in = this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.findIndex(function (item) {\n                    return item.node == id_output && item.input === output_class;\n                });\n                this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.splice(index_in, 1);\n                this.dispatch(\"connectionRemoved\", {\n                    output_id: id_output,\n                    input_id: id_input,\n                    output_class: output_class,\n                    input_class: input_class,\n                });\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    Drawflow.prototype.removeNodeConnectionsByNodeId = function (id) {\n        var connectionInTag = \"node_in_\" + id;\n        var connectionOutTag = \"node_out_\" + id;\n        var moduleData = this.drawflow.drawflow[this.module].data;\n        var connectionsOut = this.container.querySelectorAll(\".\".concat(connectionOutTag));\n        var _loop_1 = function (i) {\n            var _a = getConnectionData(connectionsOut[i].classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n            var index_in = moduleData[input_id].inputs[input_class].connections.findIndex(function (item) { return item.node === output_id && item.input === output_class; });\n            moduleData[input_id].inputs[input_class].connections.splice(index_in, 1);\n            var index_out = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) { return item.node === input_id && item.output === input_class; });\n            moduleData[output_id].outputs[output_class].connections.splice(index_out, 1);\n            connectionsOut[i].remove();\n            this_1.dispatch(\"connectionRemoved\", {\n                output_id: output_id,\n                input_id: input_id,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        };\n        var this_1 = this;\n        for (var i = connectionsOut.length - 1; i >= 0; i--) {\n            _loop_1(i);\n        }\n        var connectionsIn = this.container.querySelectorAll(\".\".concat(connectionInTag));\n        var _loop_2 = function (i) {\n            var _b = getConnectionData(connectionsIn[i].classList), output_id = _b.output_id, input_id = _b.input_id, output_class = _b.output_class, input_class = _b.input_class;\n            var index_out = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) { return item.node === input_id && item.output === input_class; });\n            moduleData[output_id].outputs[output_class].connections.splice(index_out, 1);\n            var index_in = moduleData[input_id].inputs[input_class].connections.findIndex(function (item) { return item.node === output_id && item.input === output_class; });\n            moduleData[input_id].inputs[input_class].connections.splice(index_in, 1);\n            connectionsIn[i].remove();\n            this_2.dispatch(\"connectionRemoved\", {\n                output_id: output_id,\n                input_id: input_id,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        };\n        var this_2 = this;\n        for (var i = connectionsIn.length - 1; i >= 0; i--) {\n            _loop_2(i);\n        }\n    };\n    Drawflow.prototype.getModuleFromNodeId = function (id) {\n        var editor = this.drawflow.drawflow;\n        for (var moduleName in editor) {\n            if (Object.hasOwnProperty.call(editor, moduleName)) {\n                var moduleData = editor[moduleName].data;\n                for (var nodeId in moduleData) {\n                    if (Object.hasOwnProperty.call(moduleData, nodeId) &&\n                        nodeId === id.toString()) {\n                        return moduleName;\n                    }\n                }\n            }\n        }\n    };\n    Drawflow.prototype.addModule = function (name) {\n        this.drawflow.drawflow[name] = { data: {} };\n        this.dispatch(\"moduleCreated\", name);\n    };\n    Drawflow.prototype.changeModule = function (name) {\n        this.dispatch(\"moduleChanged\", name);\n        this.module = name;\n        this.precanvas.innerHTML = \"\";\n        this.canvas_x = 0;\n        this.canvas_y = 0;\n        this.pos_x = 0;\n        this.pos_y = 0;\n        this.mouse_x = 0;\n        this.mouse_y = 0;\n        this.zoom = 1;\n        this.zoom_last_value = 1;\n        this.precanvas.style.transform = \"\";\n        this.import(this.drawflow, false);\n    };\n    Drawflow.prototype.removeModule = function (name) {\n        if (this.module === name) {\n            this.changeModule(\"Home\");\n        }\n        delete this.drawflow.drawflow[name];\n        this.dispatch(\"moduleRemoved\", name);\n    };\n    Drawflow.prototype.clearSelectedModule = function () {\n        while (this.precanvas.hasChildNodes()) {\n            this.precanvas.firstChild.remove();\n        }\n        this.drawflow.drawflow[this.module] = { data: {} };\n    };\n    Drawflow.prototype.clear = function () {\n        while (this.precanvas.hasChildNodes()) {\n            this.precanvas.firstChild.remove();\n        }\n        this.drawflow = { drawflow: { Home: { data: {} } } };\n    };\n    Drawflow.prototype.export = function () {\n        var dataExport = JSON.parse(JSON.stringify(this.drawflow));\n        this.dispatch(\"export\", dataExport);\n        return dataExport;\n    };\n    Drawflow.prototype.import = function (data, notify) {\n        if (notify === void 0) { notify = true; }\n        this.clear();\n        this.drawflow = JSON.parse(JSON.stringify(data));\n        this.load();\n        if (notify) {\n            this.dispatch(\"import\", \"import\");\n        }\n    };\n    Drawflow.prototype.on = function (event, callback) {\n        // Check if the callback is not a function\n        if (typeof callback !== \"function\") {\n            console.error(\"The listener callback must be a function, the given type is \".concat(typeof callback));\n            return false;\n        }\n        // Check if the event is not a string\n        if (typeof event !== \"string\") {\n            console.error(\"The event name must be a string, the given type is \".concat(typeof event));\n            return false;\n        }\n        // Check if this event not exists\n        if (this.events[event] === undefined) {\n            this.events[event] = {\n                listeners: [],\n            };\n        }\n        this.events[event].listeners.push(callback);\n        return true;\n    };\n    Drawflow.prototype.removeListener = function (event, callback) {\n        // Check if this event not exists\n        if (!this.events[event])\n            return false;\n        var listeners = this.events[event].listeners;\n        var listenerIndex = listeners.indexOf(callback);\n        var hasListener = listenerIndex > -1;\n        if (hasListener)\n            listeners.splice(listenerIndex, 1);\n        return hasListener;\n    };\n    Drawflow.prototype.dispatch = function (event, details) {\n        // Check if this event not exists\n        if (this.events[event] === undefined) {\n            // console.error(`This event: ${event} does not exist`);\n            return false;\n        }\n        for (var _i = 0, _a = this.events[event].listeners.slice(); _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener(details);\n        }\n        return true;\n    };\n    Drawflow.prototype.getUuid = function () {\n        // http://www.ietf.org/rfc/rfc4122.txt\n        var s = [];\n        var hexDigits = \"0123456789abcdef\";\n        for (var i = 0; i < 36; i++) {\n            s[i] = hexDigits.charAt(Math.floor(Math.random() * 0x10));\n        }\n        s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\n        s[19] = hexDigits.charAt((parseInt(s[19], 16) & 0x3) | 0x8); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n        s[8] = s[13] = s[18] = s[23] = \"-\";\n        return s.join(\"\");\n    };\n    return Drawflow;\n}());\nexport default Drawflow;\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getNodeID","str","slice","getConnectionData","classList","output_id","input_id","output_class","input_class","insertObjectkeys","content","keys","value","completeKey","concat","join","elems","querySelectorAll","i","length","elem","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","toString","isContentEditable","innerText","callRender","editor","render","type","id","events","event","on","callback","console","error","undefined","listeners","push","removeListener","listenerIndex","indexOf","splice","dispatch","details","forEach","listener","selected","handle","nodeMoved","_a","id1","x","y","nodeSelected","nodeUnselected","nodeUpdated","data","nodeUpdateId","oldId","newId","nodeRemoved","eventName","connectionStart","connection","connectionCreated","connectionRemoved","register","noderegister","Drawflow","container","options","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","precanvas","nodeId","ele_selected","node_selected","drag","drag_point","editor_selected","connection_ele","connection_selected","canvas_x","canvas_y","pos_x","pos_x_start","pos_y","pos_y_start","mouse_x","mouse_y","first_click","drawflow","Home","editor_mode","zoom","zoom_max","zoom_min","zoom_value","zoom_last_value","curvature","reroute","reroute_fix_curvature","reroute_curvature_start_end","reroute_curvature","reroute_width","force_first_input","draggable_inputs","useuuid","evCache","prevDiff","Math","log2","set","pow","refreshZoom","configurable","start","add","tabIndex","document","createElement","appendChild","addEventListener","_dragEnd","bind","_position","_click","_contextmenu","_key","_handleZoom","updateNodeValue","_dblclick","onpointerdown","_handlePointerdown","onpointermove","_handlePointermove","onpointerup","_handlePointerup","onpointercancel","onpointerout","onpointerleave","load","ev","pointerId","curDiff","abs","clientX","zoomIn","zoomOut","_removeEvent","_addNodeImport","_addRerouteImport","updateNodeConnections","number","moduleName","moduleData","max","parseInt","unselectConnectionReroutes","parentElement","item","remove","e","_this","clearSelection","target","MouseEvent","button","closest","matches","preventDefault","_contextmenuDel","tagName","hasAttribute","_createConnection","removeNodeId","removeSelectedConnection","contains","TouchEvent","touches","clientY","e_pos_x","e_pos_y","_drawConnectionTo","style","transform","selectedID","dx","dy","left","top","getBoundingClientRect","setAttributeNS","input_id_1","input_class_1","numberPointPosition","Array","from","children","searchConnection","outputs","connections","findIndex","node","output","points","ele_last","elementFromPoint","nodeData","getNodeFromId","inputs","id_input","id_output","input","getElementsByClassName","deletebox","innerHTML","metaKey","ctrlKey","zoomLevel","deltaY","deltaX","min","resetZoom","createCurvature","start_pos_x","start_pos_y","end_pos_x","end_pos_y","line_x","line_y","handleSize","ele","createElementNS","path","eX","eY","rect","precanvasRect","width","fromX","fromY","toX","toY","lineCurve","addConnection","nodeOneModule","getModuleFromNodeId","exist","_i","updateConnection","nodeFromElem","nodeToElem","rerouteWidth","nodeFromID","replace","querySelector","nodeToID","getCenter","linecurve","reroute_fix","lastX","lastY","curvature_1","pointX","pointY","leftCurveSegment_1","leftCurveSegment","itempath","connectionInTag","connectionOutTag","nodeElem","connectionsOut","connectionsIn","createReroutePoint","removeReroutePoint","point","position_add_array_point","numberPoints","insertBefore","search_point","find","numberMainPath","registerNode","name","html","JSON","parse","stringify","getNodesFromName","nodes","map","addNode","num_in","num_out","ele_pos_x","ele_pos_y","classoverride","typenode","newNodeId","getUuid","parent","setAttribute","apply","split","json_inputs","json_outputs","cloneNode","json","convert","first","isArray","class","dataNode","input_item","input_connections","output_item","output_connection","input_class_2","z","changeNodeID","nodeEl","connectionIn","input_node","connectionOut","output_node","el","etarget","attr","attributes","nodeName","startsWith","index","updateNodeDataFromId","addNodeInput","infoNode","numInputs","addNodeOutput","numOutputs","removeNodeInput","nodeDataRef","removeConnection","input_index","class_this","class_next","connectionFrom","sourceNodeDataRef","connectionTo","removeNodeOutput","output_index","removeNodeConnectionsByNodeId","output_id_1","input_id_2","output_class_1","input_class_3","index_out","index_in","_loop_1","this_1","_loop_2","this_2","addModule","changeModule","import","removeModule","clearSelectedModule","hasChildNodes","firstChild","clear","export","dataExport","notify","hasListener","s","hexDigits","charAt","floor","random"],"sourceRoot":""}