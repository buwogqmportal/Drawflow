{"version":3,"file":"drawflow.min.js","mappings":"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","sources":["webpack://Drawflow/webpack/universalModuleDefinition","webpack://Drawflow/webpack/bootstrap","webpack://Drawflow/webpack/runtime/define property getters","webpack://Drawflow/webpack/runtime/hasOwnProperty shorthand","webpack://Drawflow/./src/drawflow.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Drawflow\"] = factory();\n\telse\n\t\troot[\"Drawflow\"] = factory();\n})((typeof self !== 'undefined' ? self : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import \"./drawflow.css\";\nfunction getNodeID(str) {\n    return str.slice(5);\n}\nfunction getConnectionData(classList) {\n    return {\n        output_id: classList[2].slice(14),\n        input_id: classList[1].slice(13),\n        output_class: classList[3],\n        input_class: classList[4],\n    };\n}\nfunction insertObjectkeys(content, obj, keys) {\n    if (keys === void 0) { keys = []; }\n    if (obj === null || typeof obj !== \"object\")\n        return;\n    for (var key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            var value = obj[key];\n            if (typeof value === \"object\" && value !== null) {\n                insertObjectkeys(content, value, [key]);\n            }\n            else {\n                var completeKey = keys.concat(key).join(\"-\");\n                var elems = content.querySelectorAll(\"[df-\" + completeKey + \"]\");\n                for (var i = 0; i < elems.length; i++) {\n                    var elem = elems[i];\n                    if (elem instanceof HTMLInputElement ||\n                        elem instanceof HTMLTextAreaElement ||\n                        elem instanceof HTMLSelectElement) {\n                        elem.value = value.toString();\n                    }\n                    if (elem.isContentEditable) {\n                        elem.innerText = value.toString();\n                    }\n                }\n            }\n        }\n    }\n}\nfunction callRender(editor, render, type, id, content) {\n    var events = {};\n    var event = {\n        on: function (event, callback) {\n            // Check if the callback is not a function\n            if (typeof callback !== \"function\") {\n                console.error(\"The listener callback must be a function, the given type is \".concat(typeof callback));\n                return false;\n            }\n            // Check if the event is not a string\n            if (typeof event !== \"string\") {\n                console.error(\"The event name must be a string, the given type is \".concat(typeof event));\n                return false;\n            }\n            // Check if this event not exists\n            if (events[event] === undefined) {\n                events[event] = {\n                    listeners: [],\n                };\n            }\n            events[event].listeners.push(callback);\n        },\n        removeListener: function (event, callback) {\n            // Check if this event not exists\n            if (!events[event])\n                return false;\n            var listeners = events[event].listeners;\n            var listenerIndex = listeners.indexOf(callback);\n            var hasListener = listenerIndex > -1;\n            if (hasListener)\n                listeners.splice(listenerIndex, 1);\n        },\n        dispatch: function (event, details) {\n            // Check if this event not exists\n            if (events[event] === undefined) {\n                // console.error(`This event: ${event} does not exist`);\n                return false;\n            }\n            events[event].listeners.forEach(function (listener) {\n                listener(details);\n            });\n        },\n    };\n    var selected = false;\n    var handle = {\n        nodeMoved: function (_a) {\n            var id1 = _a.id, x = _a.x, y = _a.y;\n            if (id1 === id) {\n                event.dispatch(\"moved\", { x: x, y: y });\n            }\n        },\n        nodeSelected: function (id1) {\n            if (id1 === id) {\n                event.dispatch(\"selected\", null);\n                selected = true;\n            }\n        },\n        nodeUnselected: function () {\n            if (selected) {\n                event.dispatch(\"unselected\", null);\n            }\n        },\n        nodeUpdated: function (_a) {\n            var id1 = _a.id, data = _a.data;\n            if (id1 === id) {\n                event.dispatch(\"updated\", data);\n            }\n        },\n        nodeUpdateId: function (_a) {\n            var oldId = _a.oldId, newId = _a.newId;\n            if (oldId === id) {\n                id = newId;\n                event.dispatch(\"updatedId\", newId);\n            }\n        },\n        nodeRemoved: function (id1) {\n            if (id1 === id) {\n                for (var eventName in handle) {\n                    var callback = handle[eventName];\n                    editor.removeListener(eventName, callback);\n                }\n                event.dispatch(\"removed\", null);\n            }\n        },\n        connectionStart: function (connection) {\n            if (connection.output_id === id) {\n                event.dispatch(\"connectionStart\", connection);\n            }\n        },\n        connectionCreated: function (connection) {\n            if (connection.output_id === id || connection.input_id === id) {\n                event.dispatch(\"connectionCreated\", connection);\n            }\n        },\n        connectionRemoved: function (connection) {\n            if (connection.output_id === id || connection.input_id === id) {\n                event.dispatch(\"connectionRemoved\", connection);\n            }\n        },\n    };\n    for (var eventName in handle) {\n        var callback = handle[eventName];\n        editor.on(eventName, callback);\n    }\n    render({\n        register: editor.noderegister[type],\n        id: id,\n        type: type,\n        content: content,\n        editor: editor,\n        event: event,\n    });\n}\nvar Drawflow = /** @class */ (function () {\n    function Drawflow(container, options) {\n        if (options === void 0) { options = {}; }\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n        this.container = container;\n        this.events = {};\n        this.precanvas = null;\n        this.nodeId = 1;\n        this.ele_selected = null;\n        this.node_selected = null;\n        this.drag = false;\n        this.drag_point = false;\n        this.editor_selected = false;\n        this.connection = false;\n        this.connection_ele = null;\n        this.connection_selected = null;\n        this.canvas_x = 0;\n        this.canvas_y = 0;\n        this.pos_x = 0;\n        this.pos_x_start = 0;\n        this.pos_y = 0;\n        this.pos_y_start = 0;\n        this.mouse_x = 0;\n        this.mouse_y = 0;\n        this.first_click = null;\n        this.noderegister = {};\n        this.drawflow = { drawflow: { Home: { data: {} } } };\n        // Configurable options\n        this.module = \"Home\";\n        this.editor_mode = \"edit\";\n        this.zoom = 1;\n        this.zoom_max = 2;\n        this.zoom_min = 1 / 10;\n        this.zoom_value = 0.2;\n        this.zoom_last_value = 1;\n        this.curvature = 0.5;\n        this.reroute = false;\n        this.reroute_fix_curvature = false;\n        this.reroute_curvature_start_end = 0.5;\n        this.reroute_curvature = 0.5;\n        this.reroute_width = 6;\n        this.force_first_input = false;\n        this.draggable_inputs = true;\n        this.useuuid = false;\n        // Mobile\n        this.evCache = [];\n        this.prevDiff = -1;\n        this.module = (_a = options.module) !== null && _a !== void 0 ? _a : this.module;\n        this.editor_mode = (_b = options.editor_mode) !== null && _b !== void 0 ? _b : this.editor_mode;\n        this.zoom = (_c = options.zoom) !== null && _c !== void 0 ? _c : this.zoom;\n        this.zoom_max = (_d = options.zoom_max) !== null && _d !== void 0 ? _d : this.zoom_max;\n        this.zoom_min = (_e = options.zoom_min) !== null && _e !== void 0 ? _e : this.zoom_min;\n        this.zoom_value = (_f = options.zoom_value) !== null && _f !== void 0 ? _f : this.zoom_value;\n        this.zoom_last_value = (_g = options.zoom_last_value) !== null && _g !== void 0 ? _g : this.zoom_last_value;\n        this.curvature = (_h = options.curvature) !== null && _h !== void 0 ? _h : this.curvature;\n        this.reroute = (_j = options.reroute) !== null && _j !== void 0 ? _j : this.reroute;\n        this.reroute_fix_curvature =\n            (_k = options.reroute_fix_curvature) !== null && _k !== void 0 ? _k : this.reroute_fix_curvature;\n        this.reroute_curvature_start_end =\n            (_l = options.reroute_curvature_start_end) !== null && _l !== void 0 ? _l : this.reroute_curvature_start_end;\n        this.reroute_curvature =\n            (_m = options.reroute_curvature) !== null && _m !== void 0 ? _m : this.reroute_curvature;\n        this.reroute_width = (_o = options.reroute_width) !== null && _o !== void 0 ? _o : this.reroute_width;\n        this.force_first_input =\n            (_p = options.force_first_input) !== null && _p !== void 0 ? _p : this.force_first_input;\n        this.draggable_inputs = (_q = options.draggable_inputs) !== null && _q !== void 0 ? _q : this.draggable_inputs;\n        this.useuuid = (_r = options.useuuid) !== null && _r !== void 0 ? _r : this.useuuid;\n        this.render = (_s = options.render) !== null && _s !== void 0 ? _s : this.render;\n    }\n    Object.defineProperty(Drawflow.prototype, \"zoomLevel\", {\n        get: function () {\n            return Math.log2(this.zoom);\n        },\n        set: function (value) {\n            this.zoom = Math.pow(2, value);\n            this.refreshZoom();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Drawflow.prototype.start = function () {\n        // console.info(\"Start Drawflow!!\");\n        this.container.classList.add(\"parent-drawflow\");\n        this.container.tabIndex = 0;\n        this.precanvas = document.createElement(\"div\");\n        this.precanvas.classList.add(\"drawflow\");\n        this.container.appendChild(this.precanvas);\n        /* Mouse and Touch Actions */\n        this.container.addEventListener(\"mouseup\", this._handleInputEnd.bind(this));\n        this.container.addEventListener(\"mousemove\", this._handleInputMove.bind(this));\n        this.container.addEventListener(\"mousedown\", this._handleInputStart.bind(this));\n        this.container.addEventListener(\"touchend\", this._handleInputEnd.bind(this));\n        this.container.addEventListener(\"touchmove\", this._handleInputMove.bind(this));\n        this.container.addEventListener(\"touchstart\", this._handleInputStart.bind(this));\n        /* Context Menu */\n        this.container.addEventListener(\"contextmenu\", this._handleContextmenu.bind(this));\n        /* Delete */\n        this.container.addEventListener(\"keydown\", this._handleKey.bind(this));\n        /* Zoom Mouse */\n        this.container.addEventListener(\"wheel\", this._handleZoom.bind(this));\n        /* Update data Nodes */\n        this.container.addEventListener(\"input\", this.updateNodeValue.bind(this));\n        this.container.addEventListener(\"dblclick\", this._dblclick.bind(this));\n        /* Mobile zoom */\n        this.container.onpointerdown = this._handlePointerdown.bind(this);\n        this.container.onpointermove = this._handlePointermove.bind(this);\n        this.container.onpointerup = this._handlePointerup.bind(this);\n        this.container.onpointercancel = this._handlePointerup.bind(this);\n        this.container.onpointerout = this._handlePointerup.bind(this);\n        this.container.onpointerleave = this._handlePointerup.bind(this);\n        this.load();\n    };\n    /* Mobile zoom */\n    Drawflow.prototype._handlePointerdown = function (ev) {\n        this.evCache.push(ev);\n    };\n    Drawflow.prototype._handlePointermove = function (ev) {\n        for (var i = 0; i < this.evCache.length; i++) {\n            if (ev.pointerId == this.evCache[i].pointerId) {\n                this.evCache[i] = ev;\n                break;\n            }\n        }\n        if (this.evCache.length == 2) {\n            // Calculate the distance between the two pointers\n            var curDiff = Math.abs(this.evCache[0].clientX - this.evCache[1].clientX);\n            if (this.prevDiff > 100) {\n                if (curDiff > this.prevDiff) {\n                    // The distance between the two pointers has increased\n                    this.zoomIn();\n                }\n                if (curDiff < this.prevDiff) {\n                    // The distance between the two pointers has decreased\n                    this.zoomOut();\n                }\n            }\n            this.prevDiff = curDiff;\n        }\n    };\n    Drawflow.prototype._handlePointerup = function (ev) {\n        this._removeEvent(ev);\n        if (this.evCache.length < 2) {\n            this.prevDiff = -1;\n        }\n    };\n    Drawflow.prototype._removeEvent = function (ev) {\n        // Remove this event from the target's cache\n        for (var i = this.evCache.length - 1; i >= 0; i--) {\n            if (this.evCache[i].pointerId == ev.pointerId) {\n                this.evCache.splice(i, 1);\n                break;\n            }\n        }\n    };\n    /* End Mobile Zoom */\n    Drawflow.prototype._handleInputStart = function (e) {\n        var _this = this;\n        var clearSelection = function () {\n            if (_this.node_selected != null) {\n                _this.node_selected.classList.remove(\"selected\");\n                if (_this.node_selected != _this.ele_selected) {\n                    _this.node_selected = null;\n                    _this.dispatch(\"nodeDeselected\", true);\n                }\n            }\n            if (_this.connection_selected != null) {\n                _this.connection_selected.classList.remove(\"selected\");\n                _this.deselectConnection();\n                _this.connection_selected = null;\n            }\n        };\n        this.dispatch(\"click\", e);\n        var target = e.target;\n        if (e instanceof MouseEvent && e.button === 1) {\n            this.editor_selected = true;\n        }\n        else if (e instanceof MouseEvent && e.button === 0) {\n            // get selected element\n            if (this.editor_mode === \"fixed\") {\n                if (target.classList[0] === \"parent-drawflow\" ||\n                    target.classList[0] === \"drawflow\") {\n                    this.ele_selected = target.closest(\".parent-drawflow\");\n                }\n                else {\n                    return false;\n                }\n            }\n            else if (this.editor_mode === \"view\") {\n                if (target.closest(\".drawflow\") != null ||\n                    target.matches(\".parent-drawflow\")) {\n                    this.ele_selected = target.closest(\".parent-drawflow\");\n                    e.preventDefault();\n                }\n            }\n            else {\n                this.first_click = target;\n                this.ele_selected = target;\n                if (e.button === 0) {\n                    if (this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\n                        this.precanvas\n                            .getElementsByClassName(\"drawflow-delete\")[0]\n                            .remove();\n                    }\n                }\n                if (target.closest(\".drawflow_content_node\") != null) {\n                    this.ele_selected = target.closest(\".drawflow_content_node\").parentElement;\n                }\n            }\n            switch (this.ele_selected.classList[0]) {\n                case \"drawflow-node\":\n                    clearSelection();\n                    if (this.node_selected != this.ele_selected) {\n                        this.dispatch(\"nodeSelected\", getNodeID(this.ele_selected.id));\n                    }\n                    this.node_selected = this.ele_selected;\n                    this.node_selected.classList.add(\"selected\");\n                    // cancel drag if an input element was clicked on\n                    if (!this.draggable_inputs) {\n                        if (target.tagName !== \"INPUT\" &&\n                            target.tagName !== \"TEXTAREA\" &&\n                            target.tagName !== \"SELECT\" &&\n                            target.hasAttribute(\"contenteditable\") !== true) {\n                            this.drag = true;\n                        }\n                    }\n                    else {\n                        if (target.tagName !== \"SELECT\") {\n                            this.drag = true;\n                        }\n                    }\n                    break;\n                case \"output\":\n                    this.connection = true;\n                    clearSelection();\n                    this._createConnection(target);\n                    break;\n                case \"drawflow\":\n                    clearSelection();\n                    this.editor_selected = e.type === \"touchstart\";\n                    break;\n                case \"main-path\":\n                    clearSelection();\n                    this.connection_selected = this.ele_selected;\n                    this.connection_selected.classList.add(\"selected\");\n                    this.dispatch(\"connectionSelected\", getConnectionData(this.connection_selected.parentElement.classList));\n                    if (this.reroute_fix_curvature) {\n                        this.connection_selected.parentElement\n                            .querySelectorAll(\".main-path\")\n                            .forEach(function (item) {\n                            item.classList.add(\"selected\");\n                        });\n                    }\n                    break;\n                case \"point\":\n                    this.drag_point = true;\n                    this.ele_selected.classList.add(\"selected\");\n                    break;\n                case \"drawflow-delete\":\n                    if (this.node_selected) {\n                        this.removeNodeId(this.node_selected.id);\n                    }\n                    if (this.connection_selected) {\n                        this.removeSelectedConnection();\n                    }\n                    clearSelection();\n                    break;\n                default:\n                    break;\n            }\n            if (this.ele_selected.classList.contains(\"parent-drawflow\")) {\n                clearSelection();\n                this.editor_selected = e.type === \"touchstart\";\n            }\n        }\n        if (e instanceof TouchEvent) {\n            this.pos_x = e.touches[0].clientX;\n            this.pos_x_start = e.touches[0].clientX;\n            this.pos_y = e.touches[0].clientY;\n            this.pos_y_start = e.touches[0].clientY;\n        }\n        else {\n            this.pos_x = e.clientX;\n            this.pos_x_start = e.clientX;\n            this.pos_y = e.clientY;\n            this.pos_y_start = e.clientY;\n        }\n        this.dispatch(\"clickEnd\", e);\n    };\n    Drawflow.prototype._handleInputMove = function (e) {\n        var e_pos_x, e_pos_y;\n        if (e instanceof TouchEvent) {\n            e_pos_x = e.touches[0].clientX;\n            e_pos_y = e.touches[0].clientY;\n        }\n        else {\n            e_pos_x = e.clientX;\n            e_pos_y = e.clientY;\n        }\n        if (this.connection) {\n            this._drawConnectionTo(e_pos_x, e_pos_y);\n        }\n        if (this.editor_selected) {\n            var x = this.canvas_x - this.pos_x + e_pos_x;\n            var y = this.canvas_y - this.pos_y + e_pos_y;\n            this.dispatch(\"translate\", { x: x, y: y });\n            this.precanvas.style.transform =\n                \"translate(\" + x + \"px, \" + y + \"px) scale(\" + this.zoom + \")\";\n        }\n        if (this.drag) {\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            var selectedID = getNodeID(this.ele_selected.id);\n            var dx = (this.pos_x - e_pos_x) / this.zoom;\n            var dy = (this.pos_y - e_pos_y) / this.zoom;\n            this.pos_x = e_pos_x;\n            this.pos_y = e_pos_y;\n            moduleData[selectedID].pos_x -= dx;\n            moduleData[selectedID].pos_y -= dy;\n            this.ele_selected.style.left = moduleData[selectedID].pos_x + \"px\";\n            this.ele_selected.style.top = moduleData[selectedID].pos_y + \"px\";\n            this.updateNodeConnections(this.ele_selected.id);\n        }\n        if (this.drag_point) {\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            this.pos_x = e_pos_x;\n            this.pos_y = e_pos_y;\n            var pos_x = (this.pos_x - this.precanvas.getBoundingClientRect().x) / this.zoom;\n            var pos_y = (this.pos_y - this.precanvas.getBoundingClientRect().y) / this.zoom;\n            this.ele_selected.setAttributeNS(null, \"cx\", pos_x.toString());\n            this.ele_selected.setAttributeNS(null, \"cy\", pos_y.toString());\n            var _a = getConnectionData(this.ele_selected.parentElement.classList), output_id = _a.output_id, input_id_1 = _a.input_id, output_class = _a.output_class, input_class_1 = _a.input_class;\n            var numberPointPosition = Array.from(this.ele_selected.parentElement.children).indexOf(this.ele_selected) - 1;\n            if (this.reroute_fix_curvature) {\n                var numberMainPath = this.ele_selected.parentElement.querySelectorAll(\".main-path\")\n                    .length - 1;\n                numberPointPosition -= numberMainPath;\n                if (numberPointPosition < 0) {\n                    numberPointPosition = 0;\n                }\n            }\n            var searchConnection = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) { return item.node === input_id_1 && item.output === input_class_1; });\n            moduleData[output_id].outputs[output_class].connections[searchConnection].points[numberPointPosition] = {\n                pos_x: pos_x,\n                pos_y: pos_y,\n            };\n            this.updateNodeConnections(\"node-\".concat(output_id));\n        }\n        if (e.type === \"touchmove\") {\n            this.mouse_x = e_pos_x;\n            this.mouse_y = e_pos_y;\n        }\n        this.dispatch(\"mouseMove\", { x: e_pos_x, y: e_pos_y });\n    };\n    Drawflow.prototype._handleInputEnd = function (e) {\n        var e_pos_x;\n        var e_pos_y;\n        var ele_last;\n        if (e instanceof TouchEvent) {\n            e_pos_x = this.mouse_x;\n            e_pos_y = this.mouse_y;\n            ele_last = document.elementFromPoint(e_pos_x, e_pos_y);\n        }\n        else {\n            e_pos_x = e.clientX;\n            e_pos_y = e.clientY;\n            ele_last = e.target;\n        }\n        if (this.drag) {\n            if (this.pos_x_start != e_pos_x || this.pos_y_start != e_pos_y) {\n                var id = getNodeID(this.ele_selected.id);\n                var nodeData = this.getNodeFromId(id);\n                this.dispatch(\"nodeMoved\", {\n                    id: id,\n                    x: nodeData.pos_x,\n                    y: nodeData.pos_y,\n                });\n            }\n        }\n        if (this.drag_point) {\n            this.ele_selected.classList.remove(\"selected\");\n            if (this.pos_x_start != e_pos_x || this.pos_y_start != e_pos_y) {\n                this.dispatch(\"rerouteMoved\", getConnectionData(this.ele_selected.parentElement.classList).output_id);\n            }\n        }\n        if (this.editor_selected) {\n            this.canvas_x = this.canvas_x + -(this.pos_x - e_pos_x);\n            this.canvas_y = this.canvas_y + -(this.pos_y - e_pos_y);\n            this.editor_selected = false;\n        }\n        if (this.connection === true) {\n            if (ele_last.classList[0] === \"input\" ||\n                (this.force_first_input &&\n                    (ele_last.closest(\".drawflow_content_node\") != null ||\n                        ele_last.classList[0] === \"drawflow-node\"))) {\n                var input_id = void 0, input_class = void 0;\n                if (this.force_first_input &&\n                    (ele_last.closest(\".drawflow_content_node\") != null ||\n                        ele_last.classList[0] === \"drawflow-node\")) {\n                    if (ele_last.closest(\".drawflow_content_node\") != null) {\n                        input_id = ele_last.closest(\".drawflow_content_node\").parentElement\n                            .id;\n                    }\n                    else {\n                        input_id = ele_last.id;\n                    }\n                    if (Object.keys(this.getNodeFromId(getNodeID(input_id)).inputs)\n                        .length === 0) {\n                        input_class = \"\";\n                    }\n                    else {\n                        input_class = \"input_1\";\n                    }\n                }\n                else {\n                    // Fix connection;\n                    input_id = ele_last.parentElement.parentElement.id;\n                    input_class = ele_last.classList[1];\n                }\n                var output_id = this.ele_selected.parentElement.parentElement.id;\n                var output_class = this.ele_selected.classList[1];\n                if (output_id !== input_id && input_class) {\n                    if (this.container.querySelectorAll(\".connection.node_in_\" +\n                        input_id +\n                        \".node_out_\" +\n                        output_id +\n                        \".\" +\n                        output_class +\n                        \".\" +\n                        input_class).length === 0) {\n                        // Conection no exist save connection\n                        this.connection_ele.classList.add(\"node_in_\" + input_id);\n                        this.connection_ele.classList.add(\"node_out_\" + output_id);\n                        this.connection_ele.classList.add(output_class);\n                        this.connection_ele.classList.add(input_class);\n                        var id_input = getNodeID(input_id);\n                        var id_output = getNodeID(output_id);\n                        this.drawflow.drawflow[this.module].data[id_output].outputs[output_class].connections.push({ node: id_input, output: input_class });\n                        this.drawflow.drawflow[this.module].data[id_input].inputs[input_class].connections.push({ node: id_output, input: output_class });\n                        this.updateNodeConnections(\"node-\" + id_output);\n                        this.updateNodeConnections(\"node-\" + id_input);\n                        this.dispatch(\"connectionCreated\", {\n                            output_id: id_output,\n                            input_id: id_input,\n                            output_class: output_class,\n                            input_class: input_class,\n                        });\n                    }\n                    else {\n                        this.dispatch(\"connectionCancel\", true);\n                        this.connection_ele.remove();\n                    }\n                    this.connection_ele = null;\n                }\n                else {\n                    // Connection exists Remove Connection;\n                    this.dispatch(\"connectionCancel\", true);\n                    this.connection_ele.remove();\n                    this.connection_ele = null;\n                }\n            }\n            else {\n                // Remove Connection;\n                this.dispatch(\"connectionCancel\", true);\n                this.connection_ele.remove();\n                this.connection_ele = null;\n            }\n        }\n        this.drag = false;\n        this.drag_point = false;\n        this.connection = false;\n        this.ele_selected = null;\n        this.editor_selected = false;\n        this.dispatch(\"mouseUp\", e);\n    };\n    Drawflow.prototype._handleContextmenu = function (e) {\n        this.dispatch(\"contextmenu\", e);\n        e.preventDefault();\n        if (this.editor_mode === \"fixed\" || this.editor_mode === \"view\") {\n            return false;\n        }\n        if (this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\n            this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\n        }\n        if (this.node_selected || this.connection_selected) {\n            var deletebox = document.createElement(\"div\");\n            deletebox.classList.add(\"drawflow-delete\");\n            deletebox.innerHTML = \"x\";\n            if (this.node_selected) {\n                this.node_selected.appendChild(deletebox);\n            }\n            if (this.connection_selected) {\n                deletebox.style.top =\n                    e.clientY * this.zoom -\n                        this.precanvas.getBoundingClientRect().y * this.zoom +\n                        \"px\";\n                deletebox.style.left =\n                    e.clientX * this.zoom -\n                        this.precanvas.getBoundingClientRect().x * this.zoom +\n                        \"px\";\n                this.precanvas.appendChild(deletebox);\n            }\n        }\n    };\n    Drawflow.prototype._handleKey = function (e) {\n        this.dispatch(\"keydown\", e);\n        if (this.editor_mode === \"fixed\" || this.editor_mode === \"view\") {\n            return false;\n        }\n        if (e.key === \"Delete\" || (e.key === \"Backspace\" && e.metaKey)) {\n            if (this.node_selected != null) {\n                if (this.first_click.tagName !== \"INPUT\" &&\n                    this.first_click.tagName !== \"TEXTAREA\" &&\n                    this.first_click.hasAttribute(\"contenteditable\") !== true) {\n                    this.removeNodeId(this.node_selected.id);\n                }\n            }\n            if (this.connection_selected != null) {\n                this.removeSelectedConnection();\n            }\n        }\n    };\n    Drawflow.prototype._handleZoom = function (event) {\n        event.preventDefault();\n        if (event.ctrlKey) {\n            this.zoomLevel -= event.deltaY / 100;\n        }\n        else {\n            this.canvas_x -= event.deltaX;\n            this.canvas_y -= event.deltaY;\n            this.dispatch(\"translate\", { x: this.canvas_x, y: this.canvas_y });\n            this.precanvas.style.transform =\n                \"translate(\" +\n                    this.canvas_x +\n                    \"px, \" +\n                    this.canvas_y +\n                    \"px) scale(\" +\n                    this.zoom +\n                    \")\";\n        }\n    };\n    Drawflow.prototype._dblclick = function (e) {\n        if (this.connection_selected != null && this.reroute) {\n            this.createReroutePoint(this.connection_selected);\n        }\n        if (e.target.classList[0] === \"point\") {\n            this.removeReroutePoint(e.target);\n        }\n    };\n    Drawflow.prototype.refreshZoom = function () {\n        this.zoom = Math.min(Math.max(this.zoom_min, this.zoom), this.zoom_max);\n        this.dispatch(\"zoom\", this.zoom);\n        this.canvas_x = (this.canvas_x / this.zoom_last_value) * this.zoom;\n        this.canvas_y = (this.canvas_y / this.zoom_last_value) * this.zoom;\n        this.zoom_last_value = this.zoom;\n        this.precanvas.style.transform =\n            \"translate(\" +\n                this.canvas_x +\n                \"px, \" +\n                this.canvas_y +\n                \"px) scale(\" +\n                this.zoom +\n                \")\";\n    };\n    Drawflow.prototype.zoomIn = function (value) {\n        if (value === void 0) { value = this.zoom_value; }\n        this.zoomLevel += value;\n    };\n    Drawflow.prototype.zoomOut = function (value) {\n        if (value === void 0) { value = this.zoom_value; }\n        this.zoomLevel -= value;\n    };\n    Drawflow.prototype.resetZoom = function () {\n        if (this.zoom != 1) {\n            this.zoom = 1;\n            this.refreshZoom();\n        }\n    };\n    Drawflow.prototype.load = function () {\n        for (var key in this.drawflow.drawflow[this.module].data) {\n            this._addNodeImport(this.drawflow.drawflow[this.module].data[key], this.precanvas);\n        }\n        if (this.reroute) {\n            for (var key in this.drawflow.drawflow[this.module].data) {\n                this._addRerouteImport(this.drawflow.drawflow[this.module].data[key]);\n            }\n        }\n        for (var key in this.drawflow.drawflow[this.module].data) {\n            this.updateNodeConnections(\"node-\" + key);\n        }\n        var editor = this.drawflow.drawflow;\n        var number = 1;\n        for (var moduleName in editor) {\n            if (Object.hasOwnProperty.call(editor, moduleName)) {\n                var moduleData = editor[moduleName].data;\n                for (var id in moduleData) {\n                    if (Object.hasOwnProperty.call(moduleData, id)) {\n                        number = Math.max(number, parseInt(id) + 1);\n                    }\n                }\n            }\n        }\n        this.nodeId = number;\n    };\n    Drawflow.prototype.deselectConnection = function () {\n        this.dispatch(\"connectionDeselected\", true);\n        if (this.reroute_fix_curvature) {\n            this.connection_selected.parentElement\n                .querySelectorAll(\".main-path\")\n                .forEach(function (item) {\n                item.classList.remove(\"selected\");\n            });\n        }\n    };\n    Drawflow.prototype.createCurvature = function (start_pos_x, start_pos_y, end_pos_x, end_pos_y, curvature) {\n        var line_x = start_pos_x;\n        var line_y = start_pos_y;\n        var x = end_pos_x;\n        var y = end_pos_y;\n        var handleSize = Math.abs(x - line_x) * curvature;\n        return (\"M\" +\n            [line_x, line_y].join() +\n            \"C\" +\n            [line_x + handleSize, line_y, x - handleSize, y, x, y].join());\n    };\n    Drawflow.prototype._createConnection = function (ele) {\n        var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        this.connection_ele = connection;\n        var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path.classList.add(\"main-path\");\n        path.setAttributeNS(null, \"d\", \"\");\n        // path.innerHTML = 'a';\n        connection.classList.add(\"connection\");\n        connection.appendChild(path);\n        this.precanvas.appendChild(connection);\n        var id_output = getNodeID(ele.parentElement.parentElement.id);\n        var output_class = ele.classList[1];\n        this.dispatch(\"connectionStart\", {\n            output_id: id_output,\n            output_class: output_class,\n        });\n    };\n    Drawflow.prototype._drawConnectionTo = function (eX, eY) {\n        var precanvas = this.precanvas;\n        var zoom = this.zoom;\n        var precanvasRect = precanvas.getBoundingClientRect();\n        var path = this.connection_ele.children[0];\n        function getCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x + rect.width / 2) / zoom,\n                (rect.y - precanvasRect.y + rect.width / 2) / zoom,\n            ];\n        }\n        var _a = getCenter(this.ele_selected), fromX = _a[0], fromY = _a[1];\n        var toX = (eX - this.precanvas.getBoundingClientRect().x) / zoom;\n        var toY = (eY - this.precanvas.getBoundingClientRect().y) / zoom;\n        var curvature = this.curvature;\n        var lineCurve = this.createCurvature(fromX, fromY, toX, toY, curvature);\n        path.setAttributeNS(null, \"d\", lineCurve);\n    };\n    Drawflow.prototype.addConnection = function (id_output, id_input, output_class, input_class) {\n        var nodeOneModule = this.getModuleFromNodeId(id_output);\n        var nodeTwoModule = this.getModuleFromNodeId(id_input);\n        if (nodeOneModule !== nodeTwoModule) {\n            return;\n        }\n        var dataNode = this.getNodeFromId(id_output);\n        var exist = false;\n        for (var _i = 0, _a = dataNode.outputs[output_class].connections; _i < _a.length; _i++) {\n            var output = _a[_i];\n            if (output.node == id_input && output.output == input_class) {\n                exist = true;\n            }\n        }\n        // Check connection exist\n        if (!exist) {\n            var moduleData = this.drawflow.drawflow[nodeOneModule].data;\n            //Create Connection\n            moduleData[id_output].outputs[output_class].connections.push({\n                node: id_input.toString(),\n                output: input_class,\n            });\n            moduleData[id_input].inputs[input_class].connections.push({\n                node: id_output.toString(),\n                input: output_class,\n            });\n            if (this.module === nodeOneModule) {\n                //Draw connection\n                var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                path.classList.add(\"main-path\");\n                path.setAttributeNS(null, \"d\", \"\");\n                // path.innerHTML = 'a';\n                connection.classList.add(\"connection\");\n                connection.classList.add(\"node_in_node-\" + id_input);\n                connection.classList.add(\"node_out_node-\" + id_output);\n                connection.classList.add(output_class);\n                connection.classList.add(input_class);\n                connection.appendChild(path);\n                this.precanvas.appendChild(connection);\n                this.updateNodeConnections(\"node-\" + id_output);\n                this.updateNodeConnections(\"node-\" + id_input);\n            }\n            this.dispatch(\"connectionCreated\", {\n                output_id: id_output,\n                input_id: id_input,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        }\n    };\n    Drawflow.prototype.updateConnection = function (connection, nodeFromElem, nodeToElem) {\n        var container = this.container;\n        var precanvas = this.precanvas;\n        var curvature = this.curvature;\n        var createCurvature = this.createCurvature;\n        var reroute_curvature = this.reroute_curvature;\n        var reroute_curvature_start_end = this.reroute_curvature_start_end;\n        var reroute_fix_curvature = this.reroute_fix_curvature;\n        var rerouteWidth = this.reroute_width;\n        var zoom = this.zoom;\n        if (!nodeFromElem) {\n            var nodeFromID = connection.classList[2].replace(\"node_out_\", \"\");\n            nodeFromElem = container.querySelector(\"#\".concat(nodeFromID));\n        }\n        if (!nodeToElem) {\n            var nodeToID = connection.classList[1].replace(\"node_in_\", \"\");\n            nodeToElem = container.querySelector(\"#\".concat(nodeToID));\n        }\n        if (!nodeFromElem || !nodeToElem) {\n            return;\n        }\n        var precanvasRect = precanvas.getBoundingClientRect();\n        function getCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x + rect.width / 2) / zoom,\n                (rect.y - precanvasRect.y + rect.width / 2) / zoom,\n            ];\n        }\n        function getRerouteCenter(node) {\n            var rect = node.getBoundingClientRect();\n            return [\n                (rect.x - precanvasRect.x) / zoom + rerouteWidth,\n                (rect.y - precanvasRect.y) / zoom + rerouteWidth,\n            ];\n        }\n        var outputElem = nodeFromElem.querySelector(\".\" + connection.classList[3]);\n        var _a = getCenter(outputElem), fromX = _a[0], fromY = _a[1];\n        var inputElem = nodeToElem.querySelector(\".\" + connection.classList[4]);\n        var _b = getCenter(inputElem), toX = _b[0], toY = _b[1];\n        var points = connection.querySelectorAll(\".point\");\n        if (points.length === 0) {\n            var lineCurve = createCurvature(fromX, fromY, toX, toY, curvature);\n            connection.children[0].setAttributeNS(null, \"d\", lineCurve);\n        }\n        else {\n            var linecurve = \"\";\n            var reroute_fix = [];\n            var lastX = fromX;\n            var lastY = fromY;\n            var curvature_1 = reroute_curvature_start_end;\n            for (var i = 0; i < points.length; i++) {\n                var pointElem = points[i];\n                var _c = getRerouteCenter(pointElem), pointX = _c[0], pointY = _c[1];\n                var leftCurveSegment_1 = createCurvature(lastX, lastY, pointX, pointY, curvature_1);\n                linecurve += leftCurveSegment_1;\n                reroute_fix.push(leftCurveSegment_1);\n                lastX = pointX;\n                lastY = pointY;\n                curvature_1 = reroute_curvature;\n            }\n            curvature_1 = reroute_curvature_start_end;\n            var leftCurveSegment = createCurvature(lastX, lastY, toX, toY, curvature_1);\n            linecurve += leftCurveSegment;\n            reroute_fix.push(leftCurveSegment);\n            if (reroute_fix_curvature) {\n                reroute_fix.forEach(function (itempath, i) {\n                    connection.children[i].setAttributeNS(null, \"d\", itempath);\n                });\n            }\n            else {\n                connection.children[0].setAttributeNS(null, \"d\", linecurve);\n            }\n        }\n    };\n    Drawflow.prototype.updateNodeConnections = function (id) {\n        var connectionInTag = \"node_in_\" + id;\n        var connectionOutTag = \"node_out_\" + id;\n        var container = this.container;\n        var nodeElem = container.querySelector(\"#node-\".concat(id));\n        var connectionsOut = container.querySelectorAll(\".\".concat(connectionOutTag));\n        for (var i = 0; i < connectionsOut.length; i++) {\n            var connection = connectionsOut[i];\n            this.updateConnection(connection, nodeElem, null);\n        }\n        var connectionsIn = container.querySelectorAll(\".\".concat(connectionInTag));\n        for (var i = 0; i < connectionsIn.length; i++) {\n            var connection = connectionsIn[i];\n            this.updateConnection(connection, null, nodeElem);\n        }\n    };\n    Drawflow.prototype.createReroutePoint = function (ele) {\n        this.connection_selected.classList.remove(\"selected\");\n        var _a = getConnectionData(this.connection_selected.parentElement.classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n        this.connection_selected = null;\n        var point = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        point.classList.add(\"point\");\n        var pos_x = (this.pos_x - this.precanvas.getBoundingClientRect().x) * this.zoom;\n        var pos_y = (this.pos_y - this.precanvas.getBoundingClientRect().y) * this.zoom;\n        point.setAttributeNS(null, \"cx\", pos_x.toString());\n        point.setAttributeNS(null, \"cy\", pos_y.toString());\n        point.setAttributeNS(null, \"r\", this.reroute_width.toString());\n        var position_add_array_point = 0;\n        if (this.reroute_fix_curvature) {\n            var numberPoints = ele.parentElement.querySelectorAll(\".main-path\").length;\n            var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n            path.classList.add(\"main-path\");\n            path.setAttributeNS(null, \"d\", \"\");\n            ele.parentElement.insertBefore(path, ele.parentElement.children[numberPoints]);\n            if (numberPoints === 1) {\n                ele.parentElement.appendChild(point);\n            }\n            else {\n                var search_point = Array.from(ele.parentElement.children).indexOf(ele);\n                position_add_array_point = search_point;\n                ele.parentElement.insertBefore(point, ele.parentElement.children[search_point + numberPoints + 1]);\n            }\n        }\n        else {\n            ele.parentElement.appendChild(point);\n        }\n        var moduleData = this.drawflow.drawflow[this.module].data;\n        var connection = moduleData[output_id].outputs[output_class].connections.find(function (item) {\n            return item.node === input_id && item.output === input_class;\n        });\n        if (connection.points === undefined) {\n            connection.points = [];\n        }\n        if (this.reroute_fix_curvature) {\n            if (position_add_array_point > 0) {\n                connection.points.splice(position_add_array_point, 0, {\n                    pos_x: pos_x,\n                    pos_y: pos_y,\n                });\n            }\n            else {\n                connection.points.push({\n                    pos_x: pos_x,\n                    pos_y: pos_y,\n                });\n            }\n            ele.parentElement\n                .querySelectorAll(\".main-path.selected\")\n                .forEach(function (item) { return item.classList.remove(\"selected\"); });\n        }\n        else {\n            connection.points.push({\n                pos_x: pos_x,\n                pos_y: pos_y,\n            });\n        }\n        this.dispatch(\"rerouteCreated\", output_id);\n        this.updateConnection(ele.parentElement);\n    };\n    Drawflow.prototype.removeReroutePoint = function (ele) {\n        var _a = getConnectionData(ele.parentElement.classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n        var numberPointPosition = Array.from(ele.parentElement.children).indexOf(ele) - 1;\n        var searchConnection = this.drawflow.drawflow[this.module].data[output_id].outputs[output_class].connections.findIndex(function (item) { return item.node === input_id && item.output === input_class; });\n        if (this.reroute_fix_curvature) {\n            var numberMainPath = ele.parentElement.querySelectorAll(\".main-path\").length;\n            ele.parentElement.children[numberMainPath - 1].remove();\n            numberPointPosition -= numberMainPath;\n            if (numberPointPosition < 0) {\n                numberPointPosition = 0;\n            }\n        }\n        this.drawflow.drawflow[this.module].data[output_id].outputs[output_class].connections[searchConnection].points.splice(numberPointPosition, 1);\n        ele.remove();\n        this.dispatch(\"rerouteRemoved\", output_id);\n        this.updateNodeConnections(\"node-\".concat(output_id));\n    };\n    Drawflow.prototype.registerNode = function (name, html) {\n        this.noderegister[name] = html;\n    };\n    Drawflow.prototype.getNodeFromId = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        if (!moduleName)\n            return;\n        return JSON.parse(JSON.stringify(this.drawflow.drawflow[moduleName].data[id]));\n    };\n    Drawflow.prototype.getNodesFromName = function (name) {\n        var nodes = [];\n        var editor = this.drawflow.drawflow;\n        Object.keys(editor).map(function (moduleName) {\n            for (var node in editor[moduleName].data) {\n                if (editor[moduleName].data[node].name == name) {\n                    nodes.push(editor[moduleName].data[node].id);\n                }\n            }\n        });\n        return nodes;\n    };\n    Drawflow.prototype.addNode = function (name, num_in, num_out, ele_pos_x, ele_pos_y, classoverride, data, html, typenode) {\n        var _a;\n        var _b;\n        if (typenode === void 0) { typenode = false; }\n        var newNodeId;\n        if (this.useuuid) {\n            newNodeId = this.getUuid();\n        }\n        else {\n            newNodeId = this.nodeId.toString();\n        }\n        var parent = document.createElement(\"div\");\n        parent.classList.add(\"parent-node\");\n        var node = document.createElement(\"div\");\n        node.setAttribute(\"id\", \"node-\" + newNodeId);\n        node.classList.add(\"drawflow-node\");\n        if (classoverride) {\n            (_a = node.classList).add.apply(_a, classoverride.split(\" \"));\n        }\n        var inputs = document.createElement(\"div\");\n        inputs.classList.add(\"inputs\");\n        var outputs = document.createElement(\"div\");\n        outputs.classList.add(\"outputs\");\n        var json_inputs = {};\n        for (var x = 0; x < num_in; x++) {\n            var input = document.createElement(\"div\");\n            input.classList.add(\"input\");\n            input.classList.add(\"input_\" + (x + 1));\n            json_inputs[\"input_\" + (x + 1)] = { connections: [] };\n            inputs.appendChild(input);\n        }\n        var json_outputs = {};\n        for (var x = 0; x < num_out; x++) {\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (x + 1));\n            json_outputs[\"output_\" + (x + 1)] = { connections: [] };\n            outputs.appendChild(output);\n        }\n        var content = document.createElement(\"div\");\n        content.classList.add(\"drawflow_content_node\");\n        if (typenode === false) {\n            content.innerHTML = html;\n        }\n        else if (typenode === true) {\n            content.appendChild((_b = this.noderegister[html]) === null || _b === void 0 ? void 0 : _b.cloneNode(true));\n        }\n        else if (typeof typenode === \"function\") {\n            callRender(this, typenode, html, newNodeId, content);\n        }\n        else {\n            callRender(this, this.render, html, newNodeId, content);\n        }\n        insertObjectkeys(content, data);\n        node.style.top = ele_pos_y + \"px\";\n        node.style.left = ele_pos_x + \"px\";\n        node.appendChild(inputs);\n        node.appendChild(content);\n        node.appendChild(outputs);\n        parent.appendChild(node);\n        this.precanvas.appendChild(parent);\n        var json = {\n            id: newNodeId,\n            name: name,\n            data: (function convert(data, first) {\n                if (first === void 0) { first = true; }\n                if (data === null ||\n                    data === undefined ||\n                    (typeof data !== \"object\" && first))\n                    return {};\n                if (typeof data === \"object\" && !Array.isArray(data))\n                    return convert(data, false);\n                return data.toString();\n            })(data),\n            class: classoverride,\n            html: html,\n            typenode: typenode,\n            inputs: json_inputs,\n            outputs: json_outputs,\n            pos_x: ele_pos_x,\n            pos_y: ele_pos_y,\n        };\n        this.drawflow.drawflow[this.module].data[newNodeId] = json;\n        this.dispatch(\"nodeCreated\", newNodeId);\n        if (!this.useuuid) {\n            this.nodeId++;\n        }\n        return newNodeId;\n    };\n    Drawflow.prototype._addNodeImport = function (dataNode, precanvas) {\n        var _a;\n        dataNode.id = dataNode.id.toString();\n        var parent = document.createElement(\"div\");\n        parent.classList.add(\"parent-node\");\n        var node = document.createElement(\"div\");\n        node.setAttribute(\"id\", \"node-\" + dataNode.id);\n        node.classList.add(\"drawflow-node\");\n        if (dataNode.class) {\n            (_a = node.classList).add.apply(_a, dataNode.class.split(\" \"));\n        }\n        var inputs = document.createElement(\"div\");\n        inputs.classList.add(\"inputs\");\n        var outputs = document.createElement(\"div\");\n        outputs.classList.add(\"outputs\");\n        for (var input_item in dataNode.inputs) {\n            if (Object.hasOwnProperty.call(dataNode.inputs, input_item)) {\n                var input_connections = dataNode.inputs[input_item].connections;\n                var input = document.createElement(\"div\");\n                input.classList.add(\"input\");\n                input.classList.add(input_item);\n                inputs.appendChild(input);\n                for (var output_item in input_connections) {\n                    if (Object.hasOwnProperty.call(input_connections, output_item)) {\n                        var output_connection = input_connections[output_item];\n                        output_connection.node = output_connection.node.toString();\n                        var connection = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                        var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                        path.classList.add(\"main-path\");\n                        path.setAttributeNS(null, \"d\", \"\");\n                        // path.innerHTML = 'a';\n                        connection.classList.add(\"connection\");\n                        connection.classList.add(\"node_in_node-\" + dataNode.id);\n                        connection.classList.add(\"node_out_node-\" + output_connection.node);\n                        connection.classList.add(output_connection.input);\n                        connection.classList.add(input_item);\n                        connection.appendChild(path);\n                        precanvas.appendChild(connection);\n                    }\n                }\n            }\n        }\n        for (var x = 0; x < Object.keys(dataNode.outputs).length; x++) {\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (x + 1));\n            outputs.appendChild(output);\n        }\n        var content = document.createElement(\"div\");\n        content.classList.add(\"drawflow_content_node\");\n        if (dataNode.typenode === false) {\n            content.innerHTML = dataNode.html;\n        }\n        else if (dataNode.typenode === true) {\n            content.appendChild(this.noderegister[dataNode.html].cloneNode(true));\n        }\n        else if (typeof dataNode.typenode === \"function\") {\n            callRender(this, dataNode.typenode, dataNode.html, dataNode.id, content);\n        }\n        else {\n            callRender(this, this.render, dataNode.html, dataNode.id, content);\n        }\n        insertObjectkeys(content, dataNode.data);\n        node.style.top = dataNode.pos_y + \"px\";\n        node.style.left = dataNode.pos_x + \"px\";\n        node.appendChild(inputs);\n        node.appendChild(content);\n        node.appendChild(outputs);\n        parent.appendChild(node);\n        this.precanvas.appendChild(parent);\n    };\n    Drawflow.prototype._addRerouteImport = function (dataNode) {\n        var reroute_width = this.reroute_width;\n        var reroute_fix_curvature = this.reroute_fix_curvature;\n        var container = this.container;\n        for (var output_class in dataNode.outputs) {\n            if (Object.prototype.hasOwnProperty.call(dataNode.outputs, output_class)) {\n                var output_item = dataNode.outputs[output_class];\n                for (var input_class in output_item.connections) {\n                    if (Object.prototype.hasOwnProperty.call(output_item.connections, input_class)) {\n                        var input_item = output_item.connections[input_class];\n                        var points = input_item.points;\n                        if (Array.isArray(input_item.points)) {\n                            var input_id = input_item.node;\n                            var input_class_2 = input_item.output;\n                            var ele = container.querySelector(\".connection.node_in_node-\" +\n                                input_id +\n                                \".node_out_node-\" +\n                                dataNode.id +\n                                \".\" +\n                                output_item +\n                                \".\" +\n                                input_class_2);\n                            if (reroute_fix_curvature) {\n                                for (var z = 0; z < points.length; z++) {\n                                    var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                                    path.classList.add(\"main-path\");\n                                    path.setAttributeNS(null, \"d\", \"\");\n                                    ele.appendChild(path);\n                                }\n                            }\n                            for (var _i = 0, _a = input_item.points; _i < _a.length; _i++) {\n                                var item = _a[_i];\n                                var point = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n                                point.classList.add(\"point\");\n                                point.setAttributeNS(null, \"cx\", item.pos_x.toString());\n                                point.setAttributeNS(null, \"cy\", item.pos_y.toString());\n                                point.setAttributeNS(null, \"r\", reroute_width.toString());\n                                ele.appendChild(point);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Drawflow.prototype.changeNodeID = function (oldId, newId) {\n        var moduleName = this.getModuleFromNodeId(oldId);\n        if (!moduleName)\n            return false;\n        var moduleData = this.drawflow.drawflow[moduleName].data;\n        var node = moduleData[oldId];\n        if (this.getNodeFromId(newId) || oldId === newId)\n            return false;\n        delete moduleData[oldId];\n        moduleData[newId] = node;\n        node.id = newId;\n        var nodeEl = this.precanvas.querySelector(\"#node-\".concat(oldId));\n        nodeEl.id = \"node-\".concat(newId);\n        for (var input_class in node.inputs) {\n            var input = node.inputs[input_class];\n            for (var _i = 0, _a = input.connections; _i < _a.length; _i++) {\n                var connectionIn = _a[_i];\n                var input_node = this.getNodeFromId(connectionIn.node);\n                for (var output_class in input_node.outputs) {\n                    var output = input_node.outputs[output_class];\n                    for (var _b = 0, _c = output.connections; _b < _c.length; _b++) {\n                        var connection = _c[_b];\n                        if (connection.node === oldId &&\n                            connection.output === input_class) {\n                            connection.node = newId;\n                        }\n                    }\n                }\n            }\n        }\n        for (var output_class in node.outputs) {\n            var output = node.outputs[output_class];\n            for (var _d = 0, _e = output.connections; _d < _e.length; _d++) {\n                var connectionOut = _e[_d];\n                var output_node = this.getNodeFromId(connectionOut.node);\n                for (var input_class in output_node.inputs) {\n                    var input = output_node.inputs[input_class];\n                    for (var _f = 0, _g = input.connections; _f < _g.length; _f++) {\n                        var connection = _g[_f];\n                        if (connection.node === oldId &&\n                            connection.input === output_class) {\n                            connection.node = newId;\n                        }\n                    }\n                }\n            }\n        }\n        var connectionEls = this.precanvas.querySelectorAll(\".node_in_node-\".concat(oldId, \",.node_out_node-\").concat(newId));\n        connectionEls.forEach(function (el) {\n            el.classList.replace(\".node_in_node-\".concat(oldId), \".node_in_node-\".concat(newId));\n            el.classList.replace(\".node_out_node-\".concat(oldId), \".node_out_node-\".concat(newId));\n        });\n        this.dispatch(\"updateNodeId\", { oldId: oldId, newId: node.id });\n        return true;\n    };\n    Drawflow.prototype.updateNodeValue = function (event) {\n        var etarget = event.target;\n        var attr = etarget.attributes;\n        for (var i = 0; i < attr.length; i++) {\n            if (attr[i].nodeName.startsWith(\"df-\")) {\n                var keys = attr[i].nodeName.slice(3).split(\"-\");\n                var target = this.drawflow.drawflow[this.module].data[getNodeID(etarget.closest(\".drawflow_content_node\").parentElement.id)].data;\n                for (var index = 0; index < keys.length - 1; index += 1) {\n                    if (target[keys[index]] == null) {\n                        target[keys[index]] = {};\n                    }\n                    target = target[keys[index]];\n                }\n                target[keys[keys.length - 1]] = etarget.value;\n                if (etarget.isContentEditable) {\n                    target[keys[keys.length - 1]] = etarget.innerText;\n                }\n                this.dispatch(\"nodeDataChanged\", getNodeID(etarget.closest(\".drawflow_content_node\").parentElement.id));\n            }\n        }\n    };\n    Drawflow.prototype.updateNodeDataFromId = function (id, data) {\n        var moduleName = this.getModuleFromNodeId(id);\n        this.drawflow.drawflow[moduleName].data[id].data = data;\n        if (this.module === moduleName) {\n            var content = this.container.querySelector(\"#node-\" + id);\n            insertObjectkeys(content, data);\n        }\n    };\n    Drawflow.prototype.addNodeInput = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var infoNode = this.getNodeFromId(id);\n        var numInputs = Object.keys(infoNode.inputs).length;\n        if (this.module === moduleName) {\n            //Draw input\n            var input = document.createElement(\"div\");\n            input.classList.add(\"input\");\n            input.classList.add(\"input_\" + (numInputs + 1));\n            var parent_1 = this.container.querySelector(\"#node-\" + id + \" .inputs\");\n            parent_1.appendChild(input);\n            this.updateNodeConnections(\"node-\" + id);\n        }\n        this.drawflow.drawflow[moduleName].data[id].inputs[\"input_\" + (numInputs + 1)] = { connections: [] };\n    };\n    Drawflow.prototype.addNodeOutput = function (id) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var infoNode = this.getNodeFromId(id);\n        var numOutputs = Object.keys(infoNode.outputs).length;\n        if (this.module === moduleName) {\n            //Draw output\n            var output = document.createElement(\"div\");\n            output.classList.add(\"output\");\n            output.classList.add(\"output_\" + (numOutputs + 1));\n            var parent_2 = this.container.querySelector(\"#node-\" + id + \" .outputs\");\n            parent_2.appendChild(output);\n            this.updateNodeConnections(\"node-\" + id);\n        }\n        this.drawflow.drawflow[moduleName].data[id].outputs[\"output_\" + (numOutputs + 1)] = { connections: [] };\n    };\n    Drawflow.prototype.removeNodeInput = function (id, input_class) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var nodeDataRef = this.drawflow.drawflow[moduleName].data[id];\n        if (this.module === moduleName) {\n            this.container\n                .querySelector(\"#node-\" + id + \" .inputs .input.\" + input_class)\n                .remove();\n        }\n        for (var _i = 0, _a = nodeDataRef.inputs[input_class].connections; _i < _a.length; _i++) {\n            var connection = _a[_i];\n            this.removeConnection(connection.node, id, connection.input, input_class);\n        }\n        // update inputs\n        var input_index = parseInt(input_class.slice(\"input_\".length)) - 1;\n        var num_in = Object.keys(nodeDataRef.inputs).length;\n        for (var i = input_index; i <= num_in; i++) {\n            var class_this = \"input_\" + (i + 1);\n            var class_next = \"input_\" + (i + 2);\n            nodeDataRef.inputs[class_this] = nodeDataRef.inputs[class_next];\n            for (var _b = 0, _c = nodeDataRef.inputs[class_this].connections; _b < _c.length; _b++) {\n                var connectionFrom = _c[_b];\n                var sourceNodeDataRef = this.drawflow.drawflow[moduleName].data[connectionFrom.node];\n                for (var output_class in sourceNodeDataRef.outputs) {\n                    if (Object.prototype.hasOwnProperty.call(sourceNodeDataRef.outputs, output_class)) {\n                        for (var _d = 0, _e = sourceNodeDataRef.outputs[output_class]\n                            .connections; _d < _e.length; _d++) {\n                            var connectionTo = _e[_d];\n                            if (connectionTo.node === id &&\n                                connectionTo.output === class_next) {\n                                connectionTo.output = class_this;\n                                if (this.module === moduleName) {\n                                    var connectionEl = this.container.querySelector(\".connection.node_in_node-\" +\n                                        connectionTo.node +\n                                        \".node_out_node-\" +\n                                        connectionFrom.node +\n                                        \".\" +\n                                        connectionTo.output +\n                                        \".\" +\n                                        connectionFrom.input);\n                                    connectionEl.classList.replace(class_next, class_this);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.module === moduleName) {\n                var input_el = this.container.querySelector(\"#node-\" + id + \" .inputs .input\" + class_next);\n                input_el.classList.replace(class_next, class_this);\n            }\n        }\n        delete nodeDataRef.inputs[\"input_\" + num_in];\n        this.updateNodeConnections(\"node-\" + id);\n    };\n    Drawflow.prototype.removeNodeOutput = function (id, output_class) {\n        var moduleName = this.getModuleFromNodeId(id);\n        var nodeDataRef = this.drawflow.drawflow[moduleName].data[id];\n        if (this.module === moduleName) {\n            this.container\n                .querySelector(\"#node-\" + id + \" .outputs .output.\" + output_class)\n                .remove();\n        }\n        for (var _i = 0, _a = nodeDataRef.outputs[output_class].connections; _i < _a.length; _i++) {\n            var connection = _a[_i];\n            this.removeConnection(connection.node, id, connection.output, output_class);\n        }\n        // update outputs\n        var output_index = parseInt(output_class.slice(\"output_\".length)) - 1;\n        var num_in = Object.keys(nodeDataRef.outputs).length;\n        for (var i = output_index; i <= num_in; i++) {\n            var class_this = \"output_\" + (i + 1);\n            var class_next = \"output_\" + (i + 2);\n            nodeDataRef.outputs[class_this] = nodeDataRef.outputs[class_next];\n            for (var _b = 0, _c = nodeDataRef.outputs[class_this]\n                .connections; _b < _c.length; _b++) {\n                var connectionFrom = _c[_b];\n                var sourceNodeDataRef = this.drawflow.drawflow[moduleName].data[connectionFrom.node];\n                for (var input_class in sourceNodeDataRef.inputs) {\n                    if (Object.prototype.hasOwnProperty.call(sourceNodeDataRef.inputs, input_class)) {\n                        for (var _d = 0, _e = sourceNodeDataRef.inputs[input_class]\n                            .connections; _d < _e.length; _d++) {\n                            var connectionTo = _e[_d];\n                            if (connectionTo.node === id &&\n                                connectionTo.input === class_next) {\n                                connectionTo.input = class_this;\n                                if (this.module === moduleName) {\n                                    var connectionEl = this.container.querySelector(\".connection.node_in_node-\" +\n                                        connectionTo.node +\n                                        \".node_out_node-\" +\n                                        connectionFrom.node +\n                                        \".\" +\n                                        connectionTo.input +\n                                        \".\" +\n                                        connectionFrom.output);\n                                    connectionEl.classList.replace(class_next, class_this);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.module === moduleName) {\n                var output_el = this.container.querySelector(\"#node-\" + id + \" .outputs .output\" + class_next);\n                output_el.classList.replace(class_next, class_this);\n            }\n        }\n        delete nodeDataRef.outputs[\"output_\" + num_in];\n        this.updateNodeConnections(\"node-\" + id);\n    };\n    Drawflow.prototype.removeNodeId = function (id) {\n        this.removeNodeConnectionsByNodeId(id);\n        var moduleName = this.getModuleFromNodeId(getNodeID(id));\n        if (this.module === moduleName) {\n            this.container.querySelector(\"#\".concat(id)).remove();\n        }\n        delete this.drawflow.drawflow[moduleName].data[getNodeID(id)];\n        this.dispatch(\"nodeRemoved\", getNodeID(id));\n    };\n    Drawflow.prototype.removeSelectedConnection = function () {\n        if (this.connection_selected != null) {\n            var elem = this.connection_selected.parentElement;\n            var _a = getConnectionData(elem.classList), output_id_1 = _a.output_id, input_id_2 = _a.input_id, output_class_1 = _a.output_class, input_class_3 = _a.input_class;\n            elem.remove();\n            var moduleData = this.drawflow.drawflow[this.module].data;\n            var index_out = moduleData[output_id_1].outputs[output_class_1].connections.findIndex(function (item) { return item.node === input_id_2 && item.output === input_class_3; });\n            moduleData[output_id_1].outputs[output_class_1].connections.splice(index_out, 1);\n            var index_in = moduleData[input_id_2].inputs[input_class_3].connections.findIndex(function (item) { return item.node === output_id_1 && item.input === output_class_1; });\n            moduleData[input_id_2].inputs[input_class_3].connections.splice(index_in, 1);\n            this.dispatch(\"connectionRemoved\", {\n                output_id: output_id_1,\n                input_id: input_id_2,\n                output_class: output_class_1,\n                input_class: input_class_3,\n            });\n            this.connection_selected = null;\n        }\n    };\n    Drawflow.prototype.removeConnection = function (id_output, id_input, output_class, input_class) {\n        var nodeOneModule = this.getModuleFromNodeId(id_output);\n        var nodeTwoModule = this.getModuleFromNodeId(id_input);\n        if (nodeOneModule === nodeTwoModule) {\n            // Check nodes in same module.\n            // Check connection exist\n            var exists = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function (item) {\n                return item.node == id_input && item.output === input_class;\n            });\n            if (exists > -1) {\n                if (this.module === nodeOneModule) {\n                    // In same module with view.\n                    this.container\n                        .querySelector(\".connection.node_in_node-\" +\n                        id_input +\n                        \".node_out_node-\" +\n                        id_output +\n                        \".\" +\n                        output_class +\n                        \".\" +\n                        input_class)\n                        .remove();\n                }\n                var index_out = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function (item) {\n                    return item.node == id_input && item.output === input_class;\n                });\n                this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.splice(index_out, 1);\n                var index_in = this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.findIndex(function (item) {\n                    return item.node == id_output && item.input === output_class;\n                });\n                this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.splice(index_in, 1);\n                this.dispatch(\"connectionRemoved\", {\n                    output_id: id_output,\n                    input_id: id_input,\n                    output_class: output_class,\n                    input_class: input_class,\n                });\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    Drawflow.prototype.removeNodeConnectionsByNodeId = function (id) {\n        var connectionInTag = \"node_in_\" + id;\n        var connectionOutTag = \"node_out_\" + id;\n        var moduleData = this.drawflow.drawflow[this.module].data;\n        var connectionsOut = this.container.querySelectorAll(\".\".concat(connectionOutTag));\n        var _loop_1 = function (i) {\n            var _a = getConnectionData(connectionsOut[i].classList), output_id = _a.output_id, input_id = _a.input_id, output_class = _a.output_class, input_class = _a.input_class;\n            var index_in = moduleData[input_id].inputs[input_class].connections.findIndex(function (item) { return item.node === output_id && item.input === output_class; });\n            moduleData[input_id].inputs[input_class].connections.splice(index_in, 1);\n            var index_out = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) { return item.node === input_id && item.output === input_class; });\n            moduleData[output_id].outputs[output_class].connections.splice(index_out, 1);\n            connectionsOut[i].remove();\n            this_1.dispatch(\"connectionRemoved\", {\n                output_id: output_id,\n                input_id: input_id,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        };\n        var this_1 = this;\n        for (var i = connectionsOut.length - 1; i >= 0; i--) {\n            _loop_1(i);\n        }\n        var connectionsIn = this.container.querySelectorAll(\".\".concat(connectionInTag));\n        var _loop_2 = function (i) {\n            var _b = getConnectionData(connectionsIn[i].classList), output_id = _b.output_id, input_id = _b.input_id, output_class = _b.output_class, input_class = _b.input_class;\n            var index_out = moduleData[output_id].outputs[output_class].connections.findIndex(function (item) { return item.node === input_id && item.output === input_class; });\n            moduleData[output_id].outputs[output_class].connections.splice(index_out, 1);\n            var index_in = moduleData[input_id].inputs[input_class].connections.findIndex(function (item) { return item.node === output_id && item.input === output_class; });\n            moduleData[input_id].inputs[input_class].connections.splice(index_in, 1);\n            connectionsIn[i].remove();\n            this_2.dispatch(\"connectionRemoved\", {\n                output_id: output_id,\n                input_id: input_id,\n                output_class: output_class,\n                input_class: input_class,\n            });\n        };\n        var this_2 = this;\n        for (var i = connectionsIn.length - 1; i >= 0; i--) {\n            _loop_2(i);\n        }\n    };\n    Drawflow.prototype.getModuleFromNodeId = function (id) {\n        var editor = this.drawflow.drawflow;\n        for (var moduleName in editor) {\n            if (Object.hasOwnProperty.call(editor, moduleName)) {\n                var moduleData = editor[moduleName].data;\n                for (var nodeId in moduleData) {\n                    if (Object.hasOwnProperty.call(moduleData, nodeId) &&\n                        nodeId === id.toString()) {\n                        return moduleName;\n                    }\n                }\n            }\n        }\n    };\n    Drawflow.prototype.addModule = function (name) {\n        this.drawflow.drawflow[name] = { data: {} };\n        this.dispatch(\"moduleCreated\", name);\n    };\n    Drawflow.prototype.changeModule = function (name) {\n        this.dispatch(\"moduleChanged\", name);\n        this.module = name;\n        this.precanvas.innerHTML = \"\";\n        this.canvas_x = 0;\n        this.canvas_y = 0;\n        this.pos_x = 0;\n        this.pos_y = 0;\n        this.mouse_x = 0;\n        this.mouse_y = 0;\n        this.zoom = 1;\n        this.zoom_last_value = 1;\n        this.precanvas.style.transform = \"\";\n        this.import(this.drawflow, false);\n    };\n    Drawflow.prototype.removeModule = function (name) {\n        if (this.module === name) {\n            this.changeModule(\"Home\");\n        }\n        delete this.drawflow.drawflow[name];\n        this.dispatch(\"moduleRemoved\", name);\n    };\n    Drawflow.prototype.clearSelectedModule = function () {\n        while (this.precanvas.hasChildNodes()) {\n            this.precanvas.firstChild.remove();\n        }\n        this.drawflow.drawflow[this.module] = { data: {} };\n    };\n    Drawflow.prototype.clear = function () {\n        while (this.precanvas.hasChildNodes()) {\n            this.precanvas.firstChild.remove();\n        }\n        this.drawflow = { drawflow: { Home: { data: {} } } };\n    };\n    Drawflow.prototype.export = function () {\n        var dataExport = JSON.parse(JSON.stringify(this.drawflow));\n        this.dispatch(\"export\", dataExport);\n        return dataExport;\n    };\n    Drawflow.prototype.import = function (data, notify) {\n        if (notify === void 0) { notify = true; }\n        this.clear();\n        this.drawflow = JSON.parse(JSON.stringify(data));\n        this.load();\n        if (notify) {\n            this.dispatch(\"import\", \"import\");\n        }\n    };\n    Drawflow.prototype.on = function (event, callback) {\n        // Check if the callback is not a function\n        if (typeof callback !== \"function\") {\n            console.error(\"The listener callback must be a function, the given type is \".concat(typeof callback));\n            return false;\n        }\n        // Check if the event is not a string\n        if (typeof event !== \"string\") {\n            console.error(\"The event name must be a string, the given type is \".concat(typeof event));\n            return false;\n        }\n        // Check if this event not exists\n        if (this.events[event] === undefined) {\n            this.events[event] = {\n                listeners: [],\n            };\n        }\n        this.events[event].listeners.push(callback);\n        return true;\n    };\n    Drawflow.prototype.removeListener = function (event, callback) {\n        // Check if this event not exists\n        if (!this.events[event])\n            return false;\n        var listeners = this.events[event].listeners;\n        var listenerIndex = listeners.indexOf(callback);\n        var hasListener = listenerIndex > -1;\n        if (hasListener)\n            listeners.splice(listenerIndex, 1);\n        return hasListener;\n    };\n    Drawflow.prototype.dispatch = function (event, details) {\n        // Check if this event not exists\n        if (this.events[event] === undefined) {\n            // console.error(`This event: ${event} does not exist`);\n            return false;\n        }\n        for (var _i = 0, _a = this.events[event].listeners.slice(); _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener(details);\n        }\n        return true;\n    };\n    Drawflow.prototype.getUuid = function () {\n        // http://www.ietf.org/rfc/rfc4122.txt\n        var s = [];\n        var hexDigits = \"0123456789abcdef\";\n        for (var i = 0; i < 36; i++) {\n            s[i] = hexDigits.charAt(Math.floor(Math.random() * 0x10));\n        }\n        s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\n        s[19] = hexDigits.charAt((parseInt(s[19], 16) & 0x3) | 0x8); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n        s[8] = s[13] = s[18] = s[23] = \"-\";\n        return s.join(\"\");\n    };\n    return Drawflow;\n}());\nexport default Drawflow;\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getNodeID","str","slice","getConnectionData","classList","output_id","input_id","output_class","input_class","insertObjectkeys","content","keys","value","completeKey","concat","join","elems","querySelectorAll","i","length","elem","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","toString","isContentEditable","innerText","callRender","editor","render","type","id","events","event","on","callback","console","error","undefined","listeners","push","removeListener","listenerIndex","indexOf","splice","dispatch","details","forEach","listener","selected","handle","nodeMoved","_a","id1","x","y","nodeSelected","nodeUnselected","nodeUpdated","data","nodeUpdateId","oldId","newId","nodeRemoved","eventName","connectionStart","connection","connectionCreated","connectionRemoved","register","noderegister","Drawflow","container","options","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","precanvas","nodeId","ele_selected","node_selected","drag","drag_point","editor_selected","connection_ele","connection_selected","canvas_x","canvas_y","pos_x","pos_x_start","pos_y","pos_y_start","mouse_x","mouse_y","first_click","drawflow","Home","editor_mode","zoom","zoom_max","zoom_min","zoom_value","zoom_last_value","curvature","reroute","reroute_fix_curvature","reroute_curvature_start_end","reroute_curvature","reroute_width","force_first_input","draggable_inputs","useuuid","evCache","prevDiff","Math","log2","set","pow","refreshZoom","configurable","start","add","tabIndex","document","createElement","appendChild","addEventListener","_handleInputEnd","bind","_handleInputMove","_handleInputStart","_handleContextmenu","_handleKey","_handleZoom","updateNodeValue","_dblclick","onpointerdown","_handlePointerdown","onpointermove","_handlePointermove","onpointerup","_handlePointerup","onpointercancel","onpointerout","onpointerleave","load","ev","pointerId","curDiff","abs","clientX","zoomIn","zoomOut","_removeEvent","e","_this","clearSelection","remove","deselectConnection","target","MouseEvent","button","closest","matches","preventDefault","getElementsByClassName","parentElement","tagName","hasAttribute","_createConnection","item","removeNodeId","removeSelectedConnection","contains","TouchEvent","touches","clientY","e_pos_x","e_pos_y","_drawConnectionTo","style","transform","moduleData","selectedID","dx","dy","left","top","updateNodeConnections","getBoundingClientRect","setAttributeNS","input_id_1","input_class_1","numberPointPosition","Array","from","children","searchConnection","outputs","connections","findIndex","node","output","points","ele_last","elementFromPoint","nodeData","getNodeFromId","inputs","id_input","id_output","input","deletebox","innerHTML","metaKey","ctrlKey","zoomLevel","deltaY","deltaX","createReroutePoint","removeReroutePoint","min","max","resetZoom","_addNodeImport","_addRerouteImport","number","moduleName","parseInt","createCurvature","start_pos_x","start_pos_y","end_pos_x","end_pos_y","line_x","line_y","handleSize","ele","createElementNS","path","eX","eY","rect","precanvasRect","width","fromX","fromY","toX","toY","lineCurve","addConnection","nodeOneModule","getModuleFromNodeId","exist","_i","updateConnection","nodeFromElem","nodeToElem","rerouteWidth","nodeFromID","replace","querySelector","nodeToID","getCenter","linecurve","reroute_fix","lastX","lastY","curvature_1","pointX","pointY","leftCurveSegment_1","leftCurveSegment","itempath","connectionInTag","connectionOutTag","nodeElem","connectionsOut","connectionsIn","point","position_add_array_point","numberPoints","insertBefore","search_point","find","numberMainPath","registerNode","name","html","JSON","parse","stringify","getNodesFromName","nodes","map","addNode","num_in","num_out","ele_pos_x","ele_pos_y","classoverride","typenode","newNodeId","getUuid","parent","setAttribute","apply","split","json_inputs","json_outputs","cloneNode","json","convert","first","isArray","class","dataNode","input_item","input_connections","output_item","output_connection","input_class_2","z","changeNodeID","nodeEl","connectionIn","input_node","connectionOut","output_node","el","etarget","attr","attributes","nodeName","startsWith","index","updateNodeDataFromId","addNodeInput","infoNode","numInputs","addNodeOutput","numOutputs","removeNodeInput","nodeDataRef","removeConnection","input_index","class_this","class_next","connectionFrom","sourceNodeDataRef","connectionTo","removeNodeOutput","output_index","removeNodeConnectionsByNodeId","output_id_1","input_id_2","output_class_1","input_class_3","index_out","index_in","_loop_1","this_1","_loop_2","this_2","addModule","changeModule","import","removeModule","clearSelectedModule","hasChildNodes","firstChild","clear","export","dataExport","notify","hasListener","s","hexDigits","charAt","floor","random"],"sourceRoot":""}